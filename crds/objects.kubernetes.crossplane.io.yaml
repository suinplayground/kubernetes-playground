apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-07-31T22:54:04Z"
  generation: 1
  name: objects.kubernetes.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-kubernetes-101d5a6d80d3
    uid: 90ea4399-b910-4c5e-a3ff-4ca347cf8c2d
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-kubernetes
    uid: e24e516d-83c2-4037-b062-1769e35b3a54
  resourceVersion: "942"
  uid: 3d3b6d0e-bb4e-42e2-a9e8-868cb8efd933
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQyVENDQXNHZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTNNekV5TWpVME1EUmFGdzB6Ck5EQTNNekV5TWpVME1EUmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQVFRWjJuYlNICkhnR0hhMkE3MXNNVFgvZkh2RTVWVGtPeTJ3NzhxSUowdUd1N3NHNEp3dXA5VElwaUV0Rm5wbFpFMVZqNllZb2oKY2R6d0FpMjZxZ1lKYllGd0pscVZuYmMwaENoSzNneHU4UG5HRmx1b0x4OWlGUXhCNFlmYUZwY0FvSndhTEZRQgpvZ3dnQWk0NXg4NlNqTU1kTk5MQ29mQlp4S0pia3hlR2NRWFgvWEFOYnRsSzQrTDZVZGQ4OURmQ1MrVjJ0ZFZ0ClR5clF4R0d5Q2E1dERDTVpEMGlRZ1VYaVpSWnhBTDVaV3hVeFpRYU4xaXB5eG8zS1lyaUZVbXNUc2I3ZDNTYUsKU0pmWlgxUnlPNEZpOUttY0Z2OXl4dGNKMHQ1d2tKaTM2MFZ4NVg4ZW50R2xwazdCT1NoY2lPUjhyYkhmbUhqZQp3ZzZFb0drejgxeWJBZ01CQUFHamdhZ3dnYVV3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Y0FZRFZSMFJCR2t3WjRJVGNISnZkbWxrWlhJdGEzVmkKWlhKdVpYUmxjNElsY0hKdmRtbGtaWEl0YTNWaVpYSnVaWFJsY3k1amNtOXpjM0JzWVc1bExYTjVjM1JsYllJcApjSEp2ZG1sa1pYSXRhM1ZpWlhKdVpYUmxjeTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRjFpWXpnYytVbGx3T21LdkVMTnpORVdiVVZZb3Y3bzZKem9wTFRlK1cxaVhNeUQKamkyZGovWnNsUGwwenFtYjI2OHpWU3VjaE5XWEZWajJZRDBkbVQrODVrck9BRjhVVTdMK2JkN2wwYlp1ekgwcAp5RDZBQnBMVkJ6Q3U2TjJhamh4SlZ3Vk1Kdk82SEdMYnZGUU5BU3NKUGhCUE5qajBWeCtyZU1vK3RRUURTeXQvCmduVEVKNlR5aHNxQlJoNS91RStiWDdBQXVjK0JUQkRSaU01V28vNTN5MU9rVzlKdTdSSE5HWkxJcmtZcThlTHQKTzlHckJmMEJTRjlURVJqWnpqeGQzY3A5YzFBWnVnQW96azlPK3MvZ2RTM1ZUMjQvZ2VudVV3ZU9pemM0eExQRApIMlVQMWlaMmoxUEdqZGFxSWxGckhCbmNFR1dYTEl2cDVpWHZtcFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: provider-kubernetes
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: kubernetes.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: Object
    listKind: ObjectList
    plural: objects
    singular: object
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.manifest.kind
      name: KIND
      type: string
    - jsonPath: .spec.forProvider.manifest.apiVersion
      name: APIVERSION
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.name
      name: METANAME
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.namespace
      name: METANAMESPACE
      priority: 1
      type: string
    - jsonPath: .spec.providerConfigRef.name
      name: PROVIDERCONFIG
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    deprecated: true
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A Object is an provider Kubernetes API type
          Deprecated: v1alpha1.Object is deprecated in favor of v1alpha2.Object
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ObjectSpec defines the desired state of a Object.
            properties:
              connectionDetails:
                items:
                  description: ConnectionDetail represents an entry in the connection
                    secret for an Object
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    toConnectionSecretKey:
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicy
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ObjectParameters are the configurable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the kubernetes object
                      to be created.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - manifest
                type: object
              managementPolicy:
                default: Default
                description: |-
                  A ManagementPolicy determines what should happen to the underlying external
                  resource when a managed resource is created, updated, deleted, or observed.
                enum:
                - Default
                - ObserveCreateUpdate
                - ObserveDelete
                - Observe
                type: string
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: |-
                  ProviderReference specifies the provider that will be used to create,
                  observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              readiness:
                description: |-
                  Readiness defines how the object's readiness condition should be computed,
                  if not specified it will be considered ready as soon as the underlying external
                  resource is considered up-to-date.
                properties:
                  policy:
                    default: SuccessfulCreate
                    description: Policy defines how the Object's readiness condition
                      should be computed.
                    enum:
                    - SuccessfulCreate
                    - DeriveFromObject
                    - AllTrue
                    type: string
                type: object
              references:
                items:
                  description: |-
                    Reference refers to an Object or arbitrary Kubernetes resource and optionally
                    patch values from that resource to the current Object.
                  properties:
                    dependsOn:
                      description: |-
                        DependsOn is used to declare dependency on other Object or arbitrary
                        Kubernetes resource.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    patchesFrom:
                      description: |-
                        PatchesFrom is used to declare dependency on other Object or arbitrary
                        Kubernetes resource, and also patch fields from this object.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        fieldPath:
                          description: |-
                            FieldPath is the path of the field on the resource whose value is to be
                            used as input.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - fieldPath
                      - name
                      type: object
                    toFieldPath:
                      description: |-
                        ToFieldPath is the path of the field on the resource whose value will
                        be changed with the result of transforms. Leave empty if you'd like to
                        propagate to the same path as patchesFrom.fieldPath.
                      type: string
                  type: object
                type: array
              watch:
                default: false
                description: |-
                  Watch enables watching the referenced or managed kubernetes resources.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless "watches" feature gate is enabled, and may be changed or removed
                  without notice.
                type: boolean
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ObjectStatus represents the observed state of a Object.
            properties:
              atProvider:
                description: ObjectObservation are the observable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the remote object.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.manifest.kind
      name: KIND
      type: string
    - jsonPath: .spec.forProvider.manifest.apiVersion
      name: APIVERSION
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.name
      name: METANAME
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.namespace
      name: METANAMESPACE
      priority: 1
      type: string
    - jsonPath: .spec.providerConfigRef.name
      name: PROVIDERCONFIG
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: A Object is an provider Kubernetes API type
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ObjectSpec defines the desired state of a Object.
            properties:
              connectionDetails:
                items:
                  description: ConnectionDetail represents an entry in the connection
                    secret for an Object
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    toConnectionSecretKey:
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ObjectParameters are the configurable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the kubernetes object
                      to be created.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - manifest
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              readiness:
                description: |-
                  Readiness defines how the object's readiness condition should be computed,
                  if not specified it will be considered ready as soon as the underlying external
                  resource is considered up-to-date.
                properties:
                  celQuery:
                    description: |-
                      CelQuery defines a cel query to evaluate the readiness. The
                      observed object is passed to the cel query with the word `object`.
                      Cel macros are available to be used, see https://github.com/google/cel-spec/blob/master/doc/langdef.md#macros
                      for more information.
                      Examples:
                       `object.status.isReady == true`: checks for a boolean field called isReady on status.
                       `object.status.conditions.all(x, x.status == "True")` mimics the behavior of the AllTrue readiness policy
                       `object.status.conditions.exists(c, c.type == "condition1" && c.status == "True" )` checks just one condition
                    type: string
                  policy:
                    default: SuccessfulCreate
                    description: Policy defines how the Object's readiness condition
                      should be computed.
                    enum:
                    - SuccessfulCreate
                    - DeriveFromObject
                    - AllTrue
                    - DeriveFromCelQuery
                    type: string
                type: object
                x-kubernetes-validations:
                - message: celQuery must be set if policy is DeriveFromCelQuery
                  rule: self.policy != 'DeriveFromCelQuery' || (self.policy == 'DeriveFromCelQuery'
                    && size(self.celQuery) > 0)
              references:
                items:
                  description: |-
                    Reference refers to an Object or arbitrary Kubernetes resource and optionally
                    patch values from that resource to the current Object.
                  properties:
                    dependsOn:
                      description: |-
                        DependsOn is used to declare dependency on other Object or arbitrary
                        Kubernetes resource.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    patchesFrom:
                      description: |-
                        PatchesFrom is used to declare dependency on other Object or arbitrary
                        Kubernetes resource, and also patch fields from this object.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        fieldPath:
                          description: |-
                            FieldPath is the path of the field on the resource whose value is to be
                            used as input.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - fieldPath
                      - name
                      type: object
                    toFieldPath:
                      description: |-
                        ToFieldPath is the path of the field on the resource whose value will
                        be changed with the result of transforms. Leave empty if you'd like to
                        propagate to the same path as patchesFrom.fieldPath.
                      type: string
                  type: object
                type: array
              watch:
                default: false
                description: |-
                  Watch enables watching the referenced or managed kubernetes resources.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless "watches" feature gate is enabled, and may be changed or removed
                  without notice.
                type: boolean
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ObjectStatus represents the observed state of a Object.
            properties:
              atProvider:
                description: ObjectObservation are the observable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the remote object.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: Object
    listKind: ObjectList
    plural: objects
    singular: object
  conditions:
  - lastTransitionTime: "2024-07-31T22:54:04Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-07-31T22:54:04Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha2
