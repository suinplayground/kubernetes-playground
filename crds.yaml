apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: actionssecrets.actions.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1165"
  uid: c11646ba-f912-4fa2-a53e-8998beebb704
spec:
  conversion:
    strategy: None
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsSecret
    listKind: ActionsSecretList
    plural: actionssecrets
    singular: actionssecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ActionsSecret is the Schema for the ActionsSecrets API. Creates
          and manages an Action Secret within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActionsSecretSpec defines the desired state of ActionsSecret
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.secretName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.secretName)
                || (has(self.initProvider) && has(self.initProvider.secretName))'
          status:
            description: ActionsSecretStatus defines the observed state of ActionsSecret.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_secret creation.
                      Date of 'actions_secret' creation.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_secret update.
                      Date of 'actions_secret' update.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsSecret
    listKind: ActionsSecretList
    plural: actionssecrets
    singular: actionssecret
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: actionsvariables.actions.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1153"
  uid: 2581d963-d53d-4e47-9e9c-fec20714a527
spec:
  conversion:
    strategy: None
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsVariable
    listKind: ActionsVariableList
    plural: actionsvariables
    singular: actionsvariable
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ActionsVariable is the Schema for the ActionsVariables API. Creates
          and manages an Action variable within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActionsVariableSpec defines the desired state of ActionsVariable
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.value is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.value)
                || (has(self.initProvider) && has(self.initProvider.value))'
            - message: spec.forProvider.variableName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.variableName)
                || (has(self.initProvider) && has(self.initProvider.variableName))'
          status:
            description: ActionsVariableStatus defines the observed state of ActionsVariable.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_variable creation.
                      Date of 'actions_variable' creation.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_variable update.
                      Date of 'actions_variable' update.
                    type: string
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsVariable
    listKind: ActionsVariableList
    plural: actionsvariables
    singular: actionsvariable
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: branches.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1160"
  uid: d756357a-6064-4afc-821a-82e9c702142b
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Branch
    listKind: BranchList
    plural: branches
    singular: branch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Branch is the Schema for the Branchs API. Creates and manages
          branches within GitHub repositories.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BranchSpec defines the desired state of Branch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.branch is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.branch)
                || (has(self.initProvider) && has(self.initProvider.branch))'
          status:
            description: BranchStatus defines the observed state of Branch.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  etag:
                    description: |-
                      An etag representing the Branch object.
                      An etag representing the Branch object.
                    type: string
                  id:
                    type: string
                  ref:
                    description: |-
                      A string representing a branch reference, in the form of refs/heads/<branch>.
                      A string representing a branch reference, in the form of 'refs/heads/<branch>'.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  sha:
                    description: |-
                      A string storing the reference's HEAD commit's SHA1.
                      A string storing the reference's HEAD commit's SHA1.
                    type: string
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: Branch
    listKind: BranchList
    plural: branches
    singular: branch
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: branchprotections.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1157"
  uid: 22c2294c-9bab-4bb1-a16d-b3c970561264
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: BranchProtection
    listKind: BranchProtectionList
    plural: branchprotections
    singular: branchprotection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BranchProtection is the Schema for the BranchProtections API.
          Protects a GitHub branch.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BranchProtectionSpec defines the desired state of BranchProtection
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  blocksCreations:
                    description: |-
                      Boolean, setting this to true to block creating the branch.
                      Setting this to 'true' to block creating the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  pushRestrictions:
                    description: |-
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  repositoryIdRef:
                    description: Reference to a Repository in repo to populate repositoryId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositoryIdSelector:
                    description: Selector for a Repository in repo to populate repositoryId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          type: number
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  blocksCreations:
                    description: |-
                      Boolean, setting this to true to block creating the branch.
                      Setting this to 'true' to block creating the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  pushRestrictions:
                    description: |-
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  repositoryIdRef:
                    description: Reference to a Repository in repo to populate repositoryId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositoryIdSelector:
                    description: Selector for a Repository in repo to populate repositoryId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          type: number
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.pattern is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.pattern)
                || (has(self.initProvider) && has(self.initProvider.pattern))'
          status:
            description: BranchProtectionStatus defines the observed state of BranchProtection.
            properties:
              atProvider:
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  blocksCreations:
                    description: |-
                      Boolean, setting this to true to block creating the branch.
                      Setting this to 'true' to block creating the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  pushRestrictions:
                    description: |-
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                      The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          type: number
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: BranchProtection
    listKind: BranchProtectionList
    plural: branchprotections
    singular: branchprotection
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: compositeresourcedefinitions.apiextensions.crossplane.io
  resourceVersion: "557"
  uid: 6114c0b0-18a4-4101-a811-616860221eba
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
    - crossplane
    kind: CompositeResourceDefinition
    listKind: CompositeResourceDefinitionList
    plural: compositeresourcedefinitions
    shortNames:
    - xrd
    - xrds
    singular: compositeresourcedefinition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Established')].status
      name: ESTABLISHED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Offered')].status
      name: OFFERED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A CompositeResourceDefinition defines the schema for a new custom Kubernetes
          API.


          Read the Crossplane documentation for
          [more information about CustomResourceDefinitions](https://docs.crossplane.io/latest/concepts/composite-resource-definitions).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CompositeResourceDefinitionSpec specifies the desired state
              of the definition.
            properties:
              claimNames:
                description: |-
                  ClaimNames specifies the names of an optional composite resource claim.
                  When claim names are specified Crossplane will create a namespaced
                  'composite resource claim' CRD that corresponds to the defined composite
                  resource. This composite resource claim acts as a namespaced proxy for
                  the composite resource; creating, updating, or deleting the claim will
                  create, update, or delete a corresponding composite resource. You may add
                  claim names to an existing CompositeResourceDefinition, but they cannot
                  be changed or removed once they have been set.
                properties:
                  categories:
                    description: |-
                      categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                      This is published in API discovery documents, and used by clients to support invocations like
                      `kubectl get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: |-
                      kind is the serialized kind of the resource. It is normally CamelCase and singular.
                      Custom resource instances will use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: |-
                      plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                      Must be all lowercase.
                    type: string
                  shortNames:
                    description: |-
                      shortNames are short names for the resource, exposed in API discovery documents,
                      and used by clients to support invocations like `kubectl get <shortname>`.
                      It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              connectionSecretKeys:
                description: |-
                  ConnectionSecretKeys is the list of keys that will be exposed to the end
                  user of the defined kind.
                  If the list is empty, all keys will be published.
                items:
                  type: string
                type: array
              conversion:
                description: Conversion defines all conversion settings for the defined
                  Composite resource.
                properties:
                  strategy:
                    description: |-
                      strategy specifies how custom resources are converted between versions. Allowed values are:
                      - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
                      - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
                        is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
                    type: string
                  webhook:
                    description: webhook describes how to call the conversion webhook.
                      Required when `strategy` is set to `"Webhook"`.
                    properties:
                      clientConfig:
                        description: clientConfig is the instructions for how to call
                          the webhook if strategy is `Webhook`.
                        properties:
                          caBundle:
                            description: |-
                              caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                              If unspecified, system trust roots on the apiserver are used.
                            format: byte
                            type: string
                          service:
                            description: |-
                              service is a reference to the service for this webhook. Either
                              service or url must be specified.


                              If the webhook is running within the cluster, then you should use `service`.
                            properties:
                              name:
                                description: |-
                                  name is the name of the service.
                                  Required
                                type: string
                              namespace:
                                description: |-
                                  namespace is the namespace of the service.
                                  Required
                                type: string
                              path:
                                description: path is an optional URL path at which
                                  the webhook will be contacted.
                                type: string
                              port:
                                description: |-
                                  port is an optional service port at which the webhook will be contacted.
                                  `port` should be a valid port number (1-65535, inclusive).
                                  Defaults to 443 for backward compatibility.
                                format: int32
                                type: integer
                            required:
                            - name
                            - namespace
                            type: object
                          url:
                            description: |-
                              url gives the location of the webhook, in standard URL form
                              (`scheme://host:port/path`). Exactly one of `url` or `service`
                              must be specified.


                              The `host` should not refer to a service running in the cluster; use
                              the `service` field instead. The host might be resolved via external
                              DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                              in-cluster DNS as that would be a layering violation). `host` may
                              also be an IP address.


                              Please note that using `localhost` or `127.0.0.1` as a `host` is
                              risky unless you take great care to run this webhook on all hosts
                              which run an apiserver which might need to make calls to this
                              webhook. Such installs are likely to be non-portable, i.e., not easy
                              to turn up in a new cluster.


                              The scheme must be "https"; the URL must begin with "https://".


                              A path is optional, and if present may be any string permissible in
                              a URL. You may use the path to pass an arbitrary string to the
                              webhook, for example, a cluster identifier.


                              Attempting to use a user or basic auth e.g. "user:password@" is not
                              allowed. Fragments ("#...") and query parameters ("?...") are not
                              allowed, either.
                            type: string
                        type: object
                      conversionReviewVersions:
                        description: |-
                          conversionReviewVersions is an ordered list of preferred `ConversionReview`
                          versions the Webhook expects. The API server will use the first version in
                          the list which it supports. If none of the versions specified in this list
                          are supported by API server, conversion will fail for the custom resource.
                          If a persisted Webhook configuration specifies allowed versions and does not
                          include any versions known to the API Server, calls to the webhook will fail.
                        items:
                          type: string
                        type: array
                    required:
                    - conversionReviewVersions
                    type: object
                required:
                - strategy
                type: object
              defaultCompositeDeletePolicy:
                default: Background
                description: |-
                  DefaultCompositeDeletePolicy is the policy used when deleting the Composite
                  that is associated with the Claim if no policy has been specified.
                enum:
                - Background
                - Foreground
                type: string
              defaultCompositionRef:
                description: |-
                  DefaultCompositionRef refers to the Composition resource that will be used
                  in case no composition selector is given.
                properties:
                  name:
                    description: Name of the Composition.
                    type: string
                required:
                - name
                type: object
              defaultCompositionUpdatePolicy:
                default: Automatic
                description: |-
                  DefaultCompositionUpdatePolicy is the policy used when updating composites after a new
                  Composition Revision has been created if no policy has been specified on the composite.
                enum:
                - Automatic
                - Manual
                type: string
              enforcedCompositionRef:
                description: |-
                  EnforcedCompositionRef refers to the Composition resource that will be used
                  by all composite instances whose schema is defined by this definition.
                properties:
                  name:
                    description: Name of the Composition.
                    type: string
                required:
                - name
                type: object
              group:
                description: |-
                  Group specifies the API group of the defined composite resource.
                  Composite resources are served under `/apis/<group>/...`. Must match the
                  name of the XRD (in the form `<names.plural>.<group>`).
                type: string
              metadata:
                description: Metadata specifies the desired metadata for the defined
                  composite resource and claim CRD's.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                      and services.
                      These labels are added to the composite resource and claim CRD's in addition
                      to any labels defined by `CompositionResourceDefinition` `metadata.labels`.
                    type: object
                type: object
              names:
                description: |-
                  Names specifies the resource and kind names of the defined composite
                  resource.
                properties:
                  categories:
                    description: |-
                      categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                      This is published in API discovery documents, and used by clients to support invocations like
                      `kubectl get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: |-
                      kind is the serialized kind of the resource. It is normally CamelCase and singular.
                      Custom resource instances will use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: |-
                      plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                      Must be all lowercase.
                    type: string
                  shortNames:
                    description: |-
                      shortNames are short names for the resource, exposed in API discovery documents,
                      and used by clients to support invocations like `kubectl get <shortname>`.
                      It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              versions:
                description: |-
                  Versions is the list of all API versions of the defined composite
                  resource. Version names are used to compute the order in which served
                  versions are listed in API discovery. If the version string is
                  "kube-like", it will sort above non "kube-like" version strings, which
                  are ordered lexicographically. "Kube-like" versions start with a "v",
                  then are followed by a number (the major version), then optionally the
                  string "alpha" or "beta" and another number (the minor version). These
                  are sorted first by GA > beta > alpha (where GA is a version with no
                  suffix such as beta or alpha), and then by comparing major version, then
                  minor version. An example sorted list of versions: v10, v2, v1, v11beta2,
                  v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
                items:
                  description: CompositeResourceDefinitionVersion describes a version
                    of an XR.
                  properties:
                    additionalPrinterColumns:
                      description: |-
                        AdditionalPrinterColumns specifies additional columns returned in Table
                        output. If no columns are specified, a single column displaying the age
                        of the custom resource is used. See the following link for details:
                        https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                      items:
                        description: CustomResourceColumnDefinition specifies a column
                          for server side printing.
                        properties:
                          description:
                            description: description is a human readable description
                              of this column.
                            type: string
                          format:
                            description: |-
                              format is an optional OpenAPI type definition for this column. The 'name' format is applied
                              to the primary identifier column to assist in clients identifying column is the resource name.
                              See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                            type: string
                          jsonPath:
                            description: |-
                              jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
                              each custom resource to produce the value for this column.
                            type: string
                          name:
                            description: name is a human readable name for the column.
                            type: string
                          priority:
                            description: |-
                              priority is an integer defining the relative importance of this column compared to others. Lower
                              numbers are considered higher priority. Columns that may be omitted in limited space scenarios
                              should be given a priority greater than 0.
                            format: int32
                            type: integer
                          type:
                            description: |-
                              type is an OpenAPI type definition for this column.
                              See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                            type: string
                        required:
                        - jsonPath
                        - name
                        - type
                        type: object
                      type: array
                    deprecated:
                      description: |-
                        The deprecated field specifies that this version is deprecated and should
                        not be used.
                      type: boolean
                    deprecationWarning:
                      description: |-
                        DeprecationWarning specifies the message that should be shown to the user
                        when using this version.
                      maxLength: 256
                      type: string
                    name:
                      description: |-
                        Name of this version, e.g. “v1”, “v2beta1”, etc. Composite resources are
                        served under this version at `/apis/<group>/<version>/...` if `served` is
                        true.
                      type: string
                    referenceable:
                      description: |-
                        Referenceable specifies that this version may be referenced by a
                        Composition in order to configure which resources an XR may be composed
                        of. Exactly one version must be marked as referenceable; all Compositions
                        must target only the referenceable version. The referenceable version
                        must be served. It's mapped to the CRD's `spec.versions[*].storage` field.
                      type: boolean
                    schema:
                      description: |-
                        Schema describes the schema used for validation, pruning, and defaulting
                        of this version of the defined composite resource. Fields required by all
                        composite resources will be injected into this schema automatically, and
                        will override equivalently named fields in this schema. Omitting this
                        schema results in a schema that contains only the fields required by all
                        composite resources.
                      properties:
                        openAPIV3Schema:
                          description: |-
                            OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and
                            pruning.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    served:
                      description: Served specifies that this version should be served
                        via REST APIs.
                      type: boolean
                  required:
                  - name
                  - referenceable
                  - served
                  type: object
                type: array
            required:
            - group
            - names
            - versions
            type: object
          status:
            description: CompositeResourceDefinitionStatus shows the observed state
              of the definition.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              controllers:
                description: |-
                  Controllers represents the status of the controllers that power this
                  composite resource definition.
                properties:
                  compositeResourceClaimType:
                    description: |-
                      The CompositeResourceClaimTypeRef is the type of composite resource claim
                      that Crossplane is currently reconciling for this definition. Its version
                      will eventually become consistent with the definition's referenceable
                      version. Note that clients may interact with any served type; this is
                      simply the type that Crossplane interacts with.
                    properties:
                      apiVersion:
                        description: APIVersion of the type.
                        type: string
                      kind:
                        description: Kind of the type.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                  compositeResourceType:
                    description: |-
                      The CompositeResourceTypeRef is the type of composite resource that
                      Crossplane is currently reconciling for this definition. Its version will
                      eventually become consistent with the definition's referenceable version.
                      Note that clients may interact with any served type; this is simply the
                      type that Crossplane interacts with.
                    properties:
                      apiVersion:
                        description: APIVersion of the type.
                        type: string
                      kind:
                        description: Kind of the type.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: CompositeResourceDefinition
    listKind: CompositeResourceDefinitionList
    plural: compositeresourcedefinitions
    shortNames:
    - xrd
    - xrds
    singular: compositeresourcedefinition
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: compositionrevisions.apiextensions.crossplane.io
  resourceVersion: "567"
  uid: 11b10c95-16ec-4da9-92d0-8eea6668bde3
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
    - crossplane
    kind: CompositionRevision
    listKind: CompositionRevisionList
    plural: compositionrevisions
    shortNames:
    - comprev
    singular: compositionrevision
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.revision
      name: REVISION
      type: string
    - jsonPath: .spec.compositeTypeRef.kind
      name: XR-KIND
      type: string
    - jsonPath: .spec.compositeTypeRef.apiVersion
      name: XR-APIVERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A CompositionRevision represents a revision of a Composition. Crossplane
          creates new revisions when there are changes to the Composition.


          Crossplane creates and manages CompositionRevisions. Don't directly edit
          CompositionRevisions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CompositionRevisionSpec specifies the desired state of the composition
              revision.
            properties:
              compositeTypeRef:
                description: |-
                  CompositeTypeRef specifies the type of composite resource that this
                  composition is compatible with.
                properties:
                  apiVersion:
                    description: APIVersion of the type.
                    type: string
                  kind:
                    description: Kind of the type.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              environment:
                description: |-
                  Environment configures the environment in which resources are rendered.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  defaultData:
                    additionalProperties:
                      x-kubernetes-preserve-unknown-fields: true
                    description: |-
                      DefaultData statically defines the initial state of the environment.
                      It has the same schema-less structure as the data field in
                      environment configs.
                      It is overwritten by the selected environment configs.
                    type: object
                  environmentConfigs:
                    description: |-
                      EnvironmentConfigs selects a list of `EnvironmentConfig`s. The resolved
                      resources are stored in the composite resource at
                      `spec.environmentConfigRefs` and is only updated if it is null.


                      The list of references is used to compute an in-memory environment at
                      compose time. The data of all object is merged in the order they are
                      listed, meaning the values of EnvironmentConfigs with a larger index take
                      priority over ones with smaller indices.


                      The computed environment can be accessed in a composition using
                      `FromEnvironmentFieldPath` and `CombineFromEnvironment` patches.
                    items:
                      description: EnvironmentSource selects a EnvironmentConfig resource.
                      properties:
                        ref:
                          description: |-
                            Ref is a named reference to a single EnvironmentConfig.
                            Either Ref or Selector is required.
                          properties:
                            name:
                              description: The name of the object.
                              type: string
                          required:
                          - name
                          type: object
                        selector:
                          description: Selector selects EnvironmentConfig(s) via labels.
                          properties:
                            matchLabels:
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              items:
                                description: |-
                                  An EnvironmentSourceSelectorLabelMatcher acts like a k8s label selector but
                                  can draw the label value from a different path.
                                properties:
                                  fromFieldPathPolicy:
                                    default: Required
                                    description: |-
                                      FromFieldPathPolicy specifies the policy for the valueFromFieldPath.
                                      The default is Required, meaning that an error will be returned if the
                                      field is not found in the composite resource.
                                      Optional means that if the field is not found in the composite resource,
                                      that label pair will just be skipped. N.B. other specified label
                                      matchers will still be used to retrieve the desired
                                      environment config, if any.
                                    enum:
                                    - Optional
                                    - Required
                                    type: string
                                  key:
                                    description: Key of the label to match.
                                    type: string
                                  type:
                                    default: FromCompositeFieldPath
                                    description: Type specifies where the value for
                                      a label comes from.
                                    enum:
                                    - FromCompositeFieldPath
                                    - Value
                                    type: string
                                  value:
                                    description: Value specifies a literal label value.
                                    type: string
                                  valueFromFieldPath:
                                    description: ValueFromFieldPath specifies the
                                      field path to look for the label value.
                                    type: string
                                required:
                                - key
                                type: object
                              type: array
                            maxMatch:
                              description: MaxMatch specifies the number of extracted
                                EnvironmentConfigs in Multiple mode, extracts all
                                if nil.
                              format: int64
                              type: integer
                            minMatch:
                              description: MinMatch specifies the required minimum
                                of extracted EnvironmentConfigs in Multiple mode.
                              format: int64
                              type: integer
                            mode:
                              default: Single
                              description: 'Mode specifies retrieval strategy: "Single"
                                or "Multiple".'
                              enum:
                              - Single
                              - Multiple
                              type: string
                            sortByFieldPath:
                              default: metadata.name
                              description: SortByFieldPath is the path to the field
                                based on which list of EnvironmentConfigs is alphabetically
                                sorted.
                              type: string
                          type: object
                        type:
                          default: Reference
                          description: |-
                            Type specifies the way the EnvironmentConfig is selected.
                            Default is `Reference`
                          enum:
                          - Reference
                          - Selector
                          type: string
                      type: object
                    type: array
                  patches:
                    description: |-
                      Patches is a list of environment patches that are executed before a
                      composition's resources are composed.
                    items:
                      description: EnvironmentPatch is a patch for a Composition environment.
                      properties:
                        combine:
                          description: |-
                            Combine is the patch configuration for a CombineFromComposite or
                            CombineToComposite patch.
                          properties:
                            strategy:
                              description: |-
                                Strategy defines the strategy to use to combine the input variable values.
                                Currently only string is supported.
                              enum:
                              - string
                              type: string
                            string:
                              description: |-
                                String declares that input variables should be combined into a single
                                string, using the relevant settings for formatting purposes.
                              properties:
                                fmt:
                                  description: |-
                                    Format the input using a Go format string. See
                                    https://golang.org/pkg/fmt/ for details.
                                  type: string
                              required:
                              - fmt
                              type: object
                            variables:
                              description: |-
                                Variables are the list of variables whose values will be retrieved and
                                combined.
                              items:
                                description: |-
                                  A CombineVariable defines the source of a value that is combined with
                                  others to form and patch an output value. Currently, this only supports
                                  retrieving values from a field path.
                                properties:
                                  fromFieldPath:
                                    description: |-
                                      FromFieldPath is the path of the field on the source whose value is
                                      to be used as input.
                                    type: string
                                required:
                                - fromFieldPath
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - strategy
                          - variables
                          type: object
                        fromFieldPath:
                          description: |-
                            FromFieldPath is the path of the field on the resource whose value is
                            to be used as input. Required when type is FromCompositeFieldPath or
                            ToCompositeFieldPath.
                          type: string
                        policy:
                          description: Policy configures the specifics of patching
                            behaviour.
                          properties:
                            fromFieldPath:
                              description: |-
                                FromFieldPath specifies how to patch from a field path. The default is
                                'Optional', which means the patch will be a no-op if the specified
                                fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                the specified path does not exist.
                              enum:
                              - Optional
                              - Required
                              type: string
                            mergeOptions:
                              description: MergeOptions Specifies merge options on
                                a field path.
                              properties:
                                appendSlice:
                                  description: Specifies that already existing elements
                                    in a merged slice should be preserved
                                  type: boolean
                                keepMapValues:
                                  description: Specifies that already existing values
                                    in a merged map should be preserved
                                  type: boolean
                              type: object
                          type: object
                        toFieldPath:
                          description: |-
                            ToFieldPath is the path of the field on the resource whose value will
                            be changed with the result of transforms. Leave empty if you'd like to
                            propagate to the same path as fromFieldPath.
                          type: string
                        transforms:
                          description: |-
                            Transforms are the list of functions that are used as a FIFO pipe for the
                            input to be transformed.
                          items:
                            description: |-
                              Transform is a unit of process whose input is transformed into an output with
                              the supplied configuration.
                            properties:
                              convert:
                                description: Convert is used to cast the input into
                                  the given output type.
                                properties:
                                  format:
                                    description: |-
                                      The expected input format.


                                      * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                      Only used during `string -> float64` conversions.
                                      * `json` - parses the input as a JSON string.
                                      Only used during `string -> object` or `string -> list` conversions.


                                      If this property is null, the default conversion is applied.
                                    enum:
                                    - none
                                    - quantity
                                    - json
                                    type: string
                                  toType:
                                    description: ToType is the type of the output
                                      of this transform.
                                    enum:
                                    - string
                                    - int
                                    - int64
                                    - bool
                                    - float64
                                    - object
                                    - array
                                    type: string
                                required:
                                - toType
                                type: object
                              map:
                                additionalProperties:
                                  x-kubernetes-preserve-unknown-fields: true
                                description: Map uses the input as a key in the given
                                  map and returns the value.
                                type: object
                              match:
                                description: Match is a more complex version of Map
                                  that matches a list of patterns.
                                properties:
                                  fallbackTo:
                                    default: Value
                                    description: Determines to what value the transform
                                      should fallback if no pattern matches.
                                    enum:
                                    - Value
                                    - Input
                                    type: string
                                  fallbackValue:
                                    description: |-
                                      The fallback value that should be returned by the transform if now pattern
                                      matches.
                                    x-kubernetes-preserve-unknown-fields: true
                                  patterns:
                                    description: |-
                                      The patterns that should be tested against the input string.
                                      Patterns are tested in order. The value of the first match is used as
                                      result of this transform.
                                    items:
                                      description: |-
                                        MatchTransformPattern is a transform that returns the value that matches a
                                        pattern.
                                      properties:
                                        literal:
                                          description: |-
                                            Literal exactly matches the input string (case sensitive).
                                            Is required if `type` is `literal`.
                                          type: string
                                        regexp:
                                          description: |-
                                            Regexp to match against the input string.
                                            Is required if `type` is `regexp`.
                                          type: string
                                        result:
                                          description: The value that is used as result
                                            of the transform if the pattern matches.
                                          x-kubernetes-preserve-unknown-fields: true
                                        type:
                                          default: literal
                                          description: |-
                                            Type specifies how the pattern matches the input.


                                            * `literal` - the pattern value has to exactly match (case sensitive) the
                                            input string. This is the default.


                                            * `regexp` - the pattern treated as a regular expression against
                                            which the input string is tested. Crossplane will throw an error if the
                                            key is not a valid regexp.
                                          enum:
                                          - literal
                                          - regexp
                                          type: string
                                      required:
                                      - result
                                      - type
                                      type: object
                                    type: array
                                type: object
                              math:
                                description: |-
                                  Math is used to transform the input via mathematical operations such as
                                  multiplication.
                                properties:
                                  clampMax:
                                    description: ClampMax makes sure that the value
                                      is not bigger than the given value.
                                    format: int64
                                    type: integer
                                  clampMin:
                                    description: ClampMin makes sure that the value
                                      is not smaller than the given value.
                                    format: int64
                                    type: integer
                                  multiply:
                                    description: Multiply the value.
                                    format: int64
                                    type: integer
                                  type:
                                    default: Multiply
                                    description: Type of the math transform to be
                                      run.
                                    enum:
                                    - Multiply
                                    - ClampMin
                                    - ClampMax
                                    type: string
                                type: object
                              string:
                                description: |-
                                  String is used to transform the input into a string or a different kind
                                  of string. Note that the input does not necessarily need to be a string.
                                properties:
                                  convert:
                                    description: |-
                                      Optional conversion method to be specified.
                                      `ToUpper` and `ToLower` change the letter case of the input string.
                                      `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                      `ToJson` converts any input value into its raw JSON representation.
                                      `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                      converted to JSON.
                                      `ToAdler32` generate a addler32 hash based on the input string.
                                    enum:
                                    - ToUpper
                                    - ToLower
                                    - ToBase64
                                    - FromBase64
                                    - ToJson
                                    - ToSha1
                                    - ToSha256
                                    - ToSha512
                                    - ToAdler32
                                    type: string
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                  join:
                                    description: Join defines parameters to join a
                                      slice of values to a string.
                                    properties:
                                      separator:
                                        description: |-
                                          Separator defines the character that should separate the values from each
                                          other in the joined string.
                                        type: string
                                    required:
                                    - separator
                                    type: object
                                  regexp:
                                    description: Extract a match from the input using
                                      a regular expression.
                                    properties:
                                      group:
                                        description: Group number to match. 0 (the
                                          default) matches the entire expression.
                                        type: integer
                                      match:
                                        description: |-
                                          Match string. May optionally include submatches, aka capture groups.
                                          See https://pkg.go.dev/regexp/ for details.
                                        type: string
                                    required:
                                    - match
                                    type: object
                                  trim:
                                    description: Trim the prefix or suffix from the
                                      input
                                    type: string
                                  type:
                                    default: Format
                                    description: Type of the string transform to be
                                      run.
                                    enum:
                                    - Format
                                    - Convert
                                    - TrimPrefix
                                    - TrimSuffix
                                    - Regexp
                                    - Join
                                    type: string
                                type: object
                              type:
                                description: Type of the transform to be run.
                                enum:
                                - map
                                - match
                                - math
                                - string
                                - convert
                                type: string
                            required:
                            - type
                            type: object
                          type: array
                        type:
                          default: FromCompositeFieldPath
                          description: |-
                            Type sets the patching behaviour to be used. Each patch type may require
                            its own fields to be set on the Patch object.
                          enum:
                          - FromCompositeFieldPath
                          - ToCompositeFieldPath
                          - CombineFromComposite
                          - CombineToComposite
                          type: string
                      type: object
                    type: array
                  policy:
                    description: |-
                      Policy represents the Resolve and Resolution policies which apply to
                      all EnvironmentSourceReferences in EnvironmentConfigs list.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                type: object
              mode:
                default: Resources
                description: |-
                  Mode controls what type or "mode" of Composition will be used.


                  "Resources" (the default) indicates that a Composition uses what is
                  commonly referred to as "Patch & Transform" or P&T composition. This mode
                  of Composition uses an array of resources, each a template for a composed
                  resource.


                  "Pipeline" indicates that a Composition specifies a pipeline
                  of Composition Functions, each of which is responsible for producing
                  composed resources that Crossplane should create or update. THE PIPELINE
                  MODE IS A BETA FEATURE. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                enum:
                - Resources
                - Pipeline
                type: string
              patchSets:
                description: |-
                  PatchSets define a named set of patches that may be included by any
                  resource in this Composition. PatchSets cannot themselves refer to other
                  PatchSets.


                  PatchSets are only used by the "Resources" mode of Composition. They
                  are ignored by other modes.
                items:
                  description: |-
                    A PatchSet is a set of patches that can be reused from all resources within
                    a Composition.
                  properties:
                    name:
                      description: Name of this PatchSet.
                      type: string
                    patches:
                      description: Patches will be applied as an overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  - patches
                  type: object
                type: array
              pipeline:
                description: |-
                  Pipeline is a list of composition function steps that will be used when a
                  composite resource referring to this composition is created. One of
                  resources and pipeline must be specified - you cannot specify both.


                  The Pipeline is only used by the "Pipeline" mode of Composition. It is
                  ignored by other modes.


                  THIS IS A BETA FIELD. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                items:
                  description: A PipelineStep in a Composition Function pipeline.
                  properties:
                    credentials:
                      description: Credentials are optional credentials that the Composition
                        Function needs.
                      items:
                        description: |-
                          FunctionCredentials are optional credentials that a Composition Function
                          needs to run.
                        properties:
                          name:
                            description: Name of this set of credentials.
                            type: string
                          secretRef:
                            description: |-
                              A SecretRef is a reference to a secret containing credentials that should
                              be supplied to the function.
                            properties:
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the function credentials.
                            enum:
                            - None
                            - Secret
                            type: string
                        required:
                        - name
                        - source
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    functionRef:
                      description: |-
                        FunctionRef is a reference to the Composition Function this step should
                        execute.
                      properties:
                        name:
                          description: Name of the referenced Function.
                          type: string
                      required:
                      - name
                      type: object
                    input:
                      description: |-
                        Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                        with an apiVersion and kind) that will be passed to the Composition
                        Function as the 'input' of its RunFunctionRequest.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    step:
                      description: Step name. Must be unique within its Pipeline.
                      type: string
                  required:
                  - functionRef
                  - step
                  type: object
                type: array
              publishConnectionDetailsWithStoreConfigRef:
                default:
                  name: default
                description: |-
                  PublishConnectionDetailsWithStoreConfig specifies the secret store config
                  with which the connection details of composite resources dynamically
                  provisioned using this composition will be published.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  name:
                    description: Name of the referenced StoreConfig.
                    type: string
                required:
                - name
                type: object
              resources:
                description: |-
                  Resources is a list of resource templates that will be used when a
                  composite resource referring to this composition is created.


                  Resources are only used by the "Resources" mode of Composition. They are
                  ignored by other modes.
                items:
                  description: |-
                    ComposedTemplate is used to provide information about how the composed resource
                    should be processed.
                  properties:
                    base:
                      description: Base is the target resource that the patches will
                        be applied on.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    connectionDetails:
                      description: |-
                        ConnectionDetails lists the propagation secret keys from this target
                        resource to the composition instance connection secret.
                      items:
                        description: |-
                          ConnectionDetail includes the information about the propagation of the connection
                          information from one secret to another.
                        properties:
                          fromConnectionSecretKey:
                            description: |-
                              FromConnectionSecretKey is the key that will be used to fetch the value
                              from the composed resource's connection secret.
                            type: string
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the composed resource whose
                              value to be used as input. Name must be specified if the type is
                              FromFieldPath.
                            type: string
                          name:
                            description: |-
                              Name of the connection secret key that will be propagated to the
                              connection secret of the composition instance. Leave empty if you'd like
                              to use the same key name.
                            type: string
                          type:
                            description: |-
                              Type sets the connection detail fetching behaviour to be used. Each
                              connection detail type may require its own fields to be set on the
                              ConnectionDetail object. If the type is omitted Crossplane will attempt
                              to infer it based on which other fields were specified. If multiple
                              fields are specified the order of precedence is:
                              1. FromValue
                              2. FromConnectionSecretKey
                              3. FromFieldPath
                            enum:
                            - FromConnectionSecretKey
                            - FromFieldPath
                            - FromValue
                            type: string
                          value:
                            description: |-
                              Value that will be propagated to the connection secret of the composite
                              resource. May be set to inject a fixed, non-sensitive connection secret
                              value, for example a well-known port.
                            type: string
                        type: object
                      type: array
                    name:
                      description: |-
                        A Name uniquely identifies this entry within its Composition's resources
                        array. Names are optional but *strongly* recommended. When all entries in
                        the resources array are named entries may added, deleted, and reordered
                        as long as their names do not change. When entries are not named the
                        length and order of the resources array should be treated as immutable.
                        Either all or no entries must be named.
                      type: string
                    patches:
                      description: Patches will be applied as overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                    readinessChecks:
                      default:
                      - matchCondition:
                          status: "True"
                          type: Ready
                        type: MatchCondition
                      description: |-
                        ReadinessChecks allows users to define custom readiness checks. All checks
                        have to return true in order for resource to be considered ready. The
                        default readiness check is to have the "Ready" condition to be "True".
                      items:
                        description: |-
                          ReadinessCheck is used to indicate how to tell whether a resource is ready
                          for consumption.
                        properties:
                          fieldPath:
                            description: FieldPath shows the path of the field whose
                              value will be used.
                            type: string
                          matchCondition:
                            description: MatchCondition specifies the condition you'd
                              like to match if you're using "MatchCondition" type.
                            properties:
                              status:
                                default: "True"
                                description: Status is the status of the condition
                                  you'd like to match.
                                type: string
                              type:
                                default: Ready
                                description: Type indicates the type of condition
                                  you'd like to use.
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          matchInteger:
                            description: MatchInt is the value you'd like to match
                              if you're using "MatchInt" type.
                            format: int64
                            type: integer
                          matchString:
                            description: MatchString is the value you'd like to match
                              if you're using "MatchString" type.
                            type: string
                          type:
                            description: Type indicates the type of probe you'd like
                              to use.
                            enum:
                            - MatchString
                            - MatchInteger
                            - NonEmpty
                            - MatchCondition
                            - MatchTrue
                            - MatchFalse
                            - None
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                  required:
                  - base
                  type: object
                type: array
              revision:
                description: Revision number. Newer revisions have larger numbers.
                format: int64
                type: integer
              writeConnectionSecretsToNamespace:
                description: |-
                  WriteConnectionSecretsToNamespace specifies the namespace in which the
                  connection secrets of composite resource dynamically provisioned using
                  this composition will be created.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsWithStoreConfigRef. Currently, both could be
                  set independently and connection details would be published to both
                  without affecting each other as long as related fields at MR level
                  specified.
                type: string
            required:
            - compositeTypeRef
            - revision
            type: object
          status:
            description: |-
              CompositionRevisionStatus shows the observed state of the composition
              revision.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.revision
      name: REVISION
      type: string
    - jsonPath: .spec.compositeTypeRef.kind
      name: XR-KIND
      type: string
    - jsonPath: .spec.compositeTypeRef.apiVersion
      name: XR-APIVERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          A CompositionRevision represents a revision of a Composition. Crossplane
          creates new revisions when there are changes to the Composition.


          Crossplane creates and manages CompositionRevisions. Don't directly edit
          CompositionRevisions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CompositionRevisionSpec specifies the desired state of the composition
              revision.
            properties:
              compositeTypeRef:
                description: |-
                  CompositeTypeRef specifies the type of composite resource that this
                  composition is compatible with.
                properties:
                  apiVersion:
                    description: APIVersion of the type.
                    type: string
                  kind:
                    description: Kind of the type.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              environment:
                description: |-
                  Environment configures the environment in which resources are rendered.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  defaultData:
                    additionalProperties:
                      x-kubernetes-preserve-unknown-fields: true
                    description: |-
                      DefaultData statically defines the initial state of the environment.
                      It has the same schema-less structure as the data field in
                      environment configs.
                      It is overwritten by the selected environment configs.
                    type: object
                  environmentConfigs:
                    description: |-
                      EnvironmentConfigs selects a list of `EnvironmentConfig`s. The resolved
                      resources are stored in the composite resource at
                      `spec.environmentConfigRefs` and is only updated if it is null.


                      The list of references is used to compute an in-memory environment at
                      compose time. The data of all object is merged in the order they are
                      listed, meaning the values of EnvironmentConfigs with a larger index take
                      priority over ones with smaller indices.


                      The computed environment can be accessed in a composition using
                      `FromEnvironmentFieldPath` and `CombineFromEnvironment` patches.
                    items:
                      description: EnvironmentSource selects a EnvironmentConfig resource.
                      properties:
                        ref:
                          description: |-
                            Ref is a named reference to a single EnvironmentConfig.
                            Either Ref or Selector is required.
                          properties:
                            name:
                              description: The name of the object.
                              type: string
                          required:
                          - name
                          type: object
                        selector:
                          description: Selector selects EnvironmentConfig(s) via labels.
                          properties:
                            matchLabels:
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              items:
                                description: |-
                                  An EnvironmentSourceSelectorLabelMatcher acts like a k8s label selector but
                                  can draw the label value from a different path.
                                properties:
                                  fromFieldPathPolicy:
                                    default: Required
                                    description: |-
                                      FromFieldPathPolicy specifies the policy for the valueFromFieldPath.
                                      The default is Required, meaning that an error will be returned if the
                                      field is not found in the composite resource.
                                      Optional means that if the field is not found in the composite resource,
                                      that label pair will just be skipped. N.B. other specified label
                                      matchers will still be used to retrieve the desired
                                      environment config, if any.
                                    enum:
                                    - Optional
                                    - Required
                                    type: string
                                  key:
                                    description: Key of the label to match.
                                    type: string
                                  type:
                                    default: FromCompositeFieldPath
                                    description: Type specifies where the value for
                                      a label comes from.
                                    enum:
                                    - FromCompositeFieldPath
                                    - Value
                                    type: string
                                  value:
                                    description: Value specifies a literal label value.
                                    type: string
                                  valueFromFieldPath:
                                    description: ValueFromFieldPath specifies the
                                      field path to look for the label value.
                                    type: string
                                required:
                                - key
                                type: object
                              type: array
                            maxMatch:
                              description: MaxMatch specifies the number of extracted
                                EnvironmentConfigs in Multiple mode, extracts all
                                if nil.
                              format: int64
                              type: integer
                            minMatch:
                              description: MinMatch specifies the required minimum
                                of extracted EnvironmentConfigs in Multiple mode.
                              format: int64
                              type: integer
                            mode:
                              default: Single
                              description: 'Mode specifies retrieval strategy: "Single"
                                or "Multiple".'
                              enum:
                              - Single
                              - Multiple
                              type: string
                            sortByFieldPath:
                              default: metadata.name
                              description: SortByFieldPath is the path to the field
                                based on which list of EnvironmentConfigs is alphabetically
                                sorted.
                              type: string
                          type: object
                        type:
                          default: Reference
                          description: |-
                            Type specifies the way the EnvironmentConfig is selected.
                            Default is `Reference`
                          enum:
                          - Reference
                          - Selector
                          type: string
                      type: object
                    type: array
                  patches:
                    description: |-
                      Patches is a list of environment patches that are executed before a
                      composition's resources are composed.
                    items:
                      description: EnvironmentPatch is a patch for a Composition environment.
                      properties:
                        combine:
                          description: |-
                            Combine is the patch configuration for a CombineFromComposite or
                            CombineToComposite patch.
                          properties:
                            strategy:
                              description: |-
                                Strategy defines the strategy to use to combine the input variable values.
                                Currently only string is supported.
                              enum:
                              - string
                              type: string
                            string:
                              description: |-
                                String declares that input variables should be combined into a single
                                string, using the relevant settings for formatting purposes.
                              properties:
                                fmt:
                                  description: |-
                                    Format the input using a Go format string. See
                                    https://golang.org/pkg/fmt/ for details.
                                  type: string
                              required:
                              - fmt
                              type: object
                            variables:
                              description: |-
                                Variables are the list of variables whose values will be retrieved and
                                combined.
                              items:
                                description: |-
                                  A CombineVariable defines the source of a value that is combined with
                                  others to form and patch an output value. Currently, this only supports
                                  retrieving values from a field path.
                                properties:
                                  fromFieldPath:
                                    description: |-
                                      FromFieldPath is the path of the field on the source whose value is
                                      to be used as input.
                                    type: string
                                required:
                                - fromFieldPath
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - strategy
                          - variables
                          type: object
                        fromFieldPath:
                          description: |-
                            FromFieldPath is the path of the field on the resource whose value is
                            to be used as input. Required when type is FromCompositeFieldPath or
                            ToCompositeFieldPath.
                          type: string
                        policy:
                          description: Policy configures the specifics of patching
                            behaviour.
                          properties:
                            fromFieldPath:
                              description: |-
                                FromFieldPath specifies how to patch from a field path. The default is
                                'Optional', which means the patch will be a no-op if the specified
                                fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                the specified path does not exist.
                              enum:
                              - Optional
                              - Required
                              type: string
                            mergeOptions:
                              description: MergeOptions Specifies merge options on
                                a field path.
                              properties:
                                appendSlice:
                                  description: Specifies that already existing elements
                                    in a merged slice should be preserved
                                  type: boolean
                                keepMapValues:
                                  description: Specifies that already existing values
                                    in a merged map should be preserved
                                  type: boolean
                              type: object
                          type: object
                        toFieldPath:
                          description: |-
                            ToFieldPath is the path of the field on the resource whose value will
                            be changed with the result of transforms. Leave empty if you'd like to
                            propagate to the same path as fromFieldPath.
                          type: string
                        transforms:
                          description: |-
                            Transforms are the list of functions that are used as a FIFO pipe for the
                            input to be transformed.
                          items:
                            description: |-
                              Transform is a unit of process whose input is transformed into an output with
                              the supplied configuration.
                            properties:
                              convert:
                                description: Convert is used to cast the input into
                                  the given output type.
                                properties:
                                  format:
                                    description: |-
                                      The expected input format.


                                      * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                      Only used during `string -> float64` conversions.
                                      * `json` - parses the input as a JSON string.
                                      Only used during `string -> object` or `string -> list` conversions.


                                      If this property is null, the default conversion is applied.
                                    enum:
                                    - none
                                    - quantity
                                    - json
                                    type: string
                                  toType:
                                    description: ToType is the type of the output
                                      of this transform.
                                    enum:
                                    - string
                                    - int
                                    - int64
                                    - bool
                                    - float64
                                    - object
                                    - array
                                    type: string
                                required:
                                - toType
                                type: object
                              map:
                                additionalProperties:
                                  x-kubernetes-preserve-unknown-fields: true
                                description: Map uses the input as a key in the given
                                  map and returns the value.
                                type: object
                              match:
                                description: Match is a more complex version of Map
                                  that matches a list of patterns.
                                properties:
                                  fallbackTo:
                                    default: Value
                                    description: Determines to what value the transform
                                      should fallback if no pattern matches.
                                    enum:
                                    - Value
                                    - Input
                                    type: string
                                  fallbackValue:
                                    description: |-
                                      The fallback value that should be returned by the transform if now pattern
                                      matches.
                                    x-kubernetes-preserve-unknown-fields: true
                                  patterns:
                                    description: |-
                                      The patterns that should be tested against the input string.
                                      Patterns are tested in order. The value of the first match is used as
                                      result of this transform.
                                    items:
                                      description: |-
                                        MatchTransformPattern is a transform that returns the value that matches a
                                        pattern.
                                      properties:
                                        literal:
                                          description: |-
                                            Literal exactly matches the input string (case sensitive).
                                            Is required if `type` is `literal`.
                                          type: string
                                        regexp:
                                          description: |-
                                            Regexp to match against the input string.
                                            Is required if `type` is `regexp`.
                                          type: string
                                        result:
                                          description: The value that is used as result
                                            of the transform if the pattern matches.
                                          x-kubernetes-preserve-unknown-fields: true
                                        type:
                                          default: literal
                                          description: |-
                                            Type specifies how the pattern matches the input.


                                            * `literal` - the pattern value has to exactly match (case sensitive) the
                                            input string. This is the default.


                                            * `regexp` - the pattern treated as a regular expression against
                                            which the input string is tested. Crossplane will throw an error if the
                                            key is not a valid regexp.
                                          enum:
                                          - literal
                                          - regexp
                                          type: string
                                      required:
                                      - result
                                      - type
                                      type: object
                                    type: array
                                type: object
                              math:
                                description: |-
                                  Math is used to transform the input via mathematical operations such as
                                  multiplication.
                                properties:
                                  clampMax:
                                    description: ClampMax makes sure that the value
                                      is not bigger than the given value.
                                    format: int64
                                    type: integer
                                  clampMin:
                                    description: ClampMin makes sure that the value
                                      is not smaller than the given value.
                                    format: int64
                                    type: integer
                                  multiply:
                                    description: Multiply the value.
                                    format: int64
                                    type: integer
                                  type:
                                    default: Multiply
                                    description: Type of the math transform to be
                                      run.
                                    enum:
                                    - Multiply
                                    - ClampMin
                                    - ClampMax
                                    type: string
                                type: object
                              string:
                                description: |-
                                  String is used to transform the input into a string or a different kind
                                  of string. Note that the input does not necessarily need to be a string.
                                properties:
                                  convert:
                                    description: |-
                                      Optional conversion method to be specified.
                                      `ToUpper` and `ToLower` change the letter case of the input string.
                                      `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                      `ToJson` converts any input value into its raw JSON representation.
                                      `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                      converted to JSON.
                                      `ToAdler32` generate a addler32 hash based on the input string.
                                    enum:
                                    - ToUpper
                                    - ToLower
                                    - ToBase64
                                    - FromBase64
                                    - ToJson
                                    - ToSha1
                                    - ToSha256
                                    - ToSha512
                                    - ToAdler32
                                    type: string
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                  join:
                                    description: Join defines parameters to join a
                                      slice of values to a string.
                                    properties:
                                      separator:
                                        description: |-
                                          Separator defines the character that should separate the values from each
                                          other in the joined string.
                                        type: string
                                    required:
                                    - separator
                                    type: object
                                  regexp:
                                    description: Extract a match from the input using
                                      a regular expression.
                                    properties:
                                      group:
                                        description: Group number to match. 0 (the
                                          default) matches the entire expression.
                                        type: integer
                                      match:
                                        description: |-
                                          Match string. May optionally include submatches, aka capture groups.
                                          See https://pkg.go.dev/regexp/ for details.
                                        type: string
                                    required:
                                    - match
                                    type: object
                                  trim:
                                    description: Trim the prefix or suffix from the
                                      input
                                    type: string
                                  type:
                                    default: Format
                                    description: Type of the string transform to be
                                      run.
                                    enum:
                                    - Format
                                    - Convert
                                    - TrimPrefix
                                    - TrimSuffix
                                    - Regexp
                                    - Join
                                    type: string
                                type: object
                              type:
                                description: Type of the transform to be run.
                                enum:
                                - map
                                - match
                                - math
                                - string
                                - convert
                                type: string
                            required:
                            - type
                            type: object
                          type: array
                        type:
                          default: FromCompositeFieldPath
                          description: |-
                            Type sets the patching behaviour to be used. Each patch type may require
                            its own fields to be set on the Patch object.
                          enum:
                          - FromCompositeFieldPath
                          - ToCompositeFieldPath
                          - CombineFromComposite
                          - CombineToComposite
                          type: string
                      type: object
                    type: array
                  policy:
                    description: |-
                      Policy represents the Resolve and Resolution policies which apply to
                      all EnvironmentSourceReferences in EnvironmentConfigs list.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                type: object
              mode:
                default: Resources
                description: |-
                  Mode controls what type or "mode" of Composition will be used.


                  "Resources" (the default) indicates that a Composition uses what is
                  commonly referred to as "Patch & Transform" or P&T composition. This mode
                  of Composition uses an array of resources, each a template for a composed
                  resource.


                  "Pipeline" indicates that a Composition specifies a pipeline
                  of Composition Functions, each of which is responsible for producing
                  composed resources that Crossplane should create or update. THE PIPELINE
                  MODE IS A BETA FEATURE. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                enum:
                - Resources
                - Pipeline
                type: string
              patchSets:
                description: |-
                  PatchSets define a named set of patches that may be included by any
                  resource in this Composition. PatchSets cannot themselves refer to other
                  PatchSets.


                  PatchSets are only used by the "Resources" mode of Composition. They
                  are ignored by other modes.
                items:
                  description: |-
                    A PatchSet is a set of patches that can be reused from all resources within
                    a Composition.
                  properties:
                    name:
                      description: Name of this PatchSet.
                      type: string
                    patches:
                      description: Patches will be applied as an overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  - patches
                  type: object
                type: array
              pipeline:
                description: |-
                  Pipeline is a list of composition function steps that will be used when a
                  composite resource referring to this composition is created. One of
                  resources and pipeline must be specified - you cannot specify both.


                  The Pipeline is only used by the "Pipeline" mode of Composition. It is
                  ignored by other modes.


                  THIS IS A BETA FIELD. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                items:
                  description: A PipelineStep in a Composition Function pipeline.
                  properties:
                    credentials:
                      description: Credentials are optional credentials that the Composition
                        Function needs.
                      items:
                        description: |-
                          FunctionCredentials are optional credentials that a Composition Function
                          needs to run.
                        properties:
                          name:
                            description: Name of this set of credentials.
                            type: string
                          secretRef:
                            description: |-
                              A SecretRef is a reference to a secret containing credentials that should
                              be supplied to the function.
                            properties:
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the function credentials.
                            enum:
                            - None
                            - Secret
                            type: string
                        required:
                        - name
                        - source
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    functionRef:
                      description: |-
                        FunctionRef is a reference to the Composition Function this step should
                        execute.
                      properties:
                        name:
                          description: Name of the referenced Function.
                          type: string
                      required:
                      - name
                      type: object
                    input:
                      description: |-
                        Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                        with an apiVersion and kind) that will be passed to the Composition
                        Function as the 'input' of its RunFunctionRequest.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    step:
                      description: Step name. Must be unique within its Pipeline.
                      type: string
                  required:
                  - functionRef
                  - step
                  type: object
                type: array
              publishConnectionDetailsWithStoreConfigRef:
                default:
                  name: default
                description: |-
                  PublishConnectionDetailsWithStoreConfig specifies the secret store config
                  with which the connection details of composite resources dynamically
                  provisioned using this composition will be published.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  name:
                    description: Name of the referenced StoreConfig.
                    type: string
                required:
                - name
                type: object
              resources:
                description: |-
                  Resources is a list of resource templates that will be used when a
                  composite resource referring to this composition is created.


                  Resources are only used by the "Resources" mode of Composition. They are
                  ignored by other modes.
                items:
                  description: |-
                    ComposedTemplate is used to provide information about how the composed resource
                    should be processed.
                  properties:
                    base:
                      description: Base is the target resource that the patches will
                        be applied on.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    connectionDetails:
                      description: |-
                        ConnectionDetails lists the propagation secret keys from this target
                        resource to the composition instance connection secret.
                      items:
                        description: |-
                          ConnectionDetail includes the information about the propagation of the connection
                          information from one secret to another.
                        properties:
                          fromConnectionSecretKey:
                            description: |-
                              FromConnectionSecretKey is the key that will be used to fetch the value
                              from the composed resource's connection secret.
                            type: string
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the composed resource whose
                              value to be used as input. Name must be specified if the type is
                              FromFieldPath.
                            type: string
                          name:
                            description: |-
                              Name of the connection secret key that will be propagated to the
                              connection secret of the composition instance. Leave empty if you'd like
                              to use the same key name.
                            type: string
                          type:
                            description: |-
                              Type sets the connection detail fetching behaviour to be used. Each
                              connection detail type may require its own fields to be set on the
                              ConnectionDetail object. If the type is omitted Crossplane will attempt
                              to infer it based on which other fields were specified. If multiple
                              fields are specified the order of precedence is:
                              1. FromValue
                              2. FromConnectionSecretKey
                              3. FromFieldPath
                            enum:
                            - FromConnectionSecretKey
                            - FromFieldPath
                            - FromValue
                            type: string
                          value:
                            description: |-
                              Value that will be propagated to the connection secret of the composite
                              resource. May be set to inject a fixed, non-sensitive connection secret
                              value, for example a well-known port.
                            type: string
                        type: object
                      type: array
                    name:
                      description: |-
                        A Name uniquely identifies this entry within its Composition's resources
                        array. Names are optional but *strongly* recommended. When all entries in
                        the resources array are named entries may added, deleted, and reordered
                        as long as their names do not change. When entries are not named the
                        length and order of the resources array should be treated as immutable.
                        Either all or no entries must be named.
                      type: string
                    patches:
                      description: Patches will be applied as overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                    readinessChecks:
                      default:
                      - matchCondition:
                          status: "True"
                          type: Ready
                        type: MatchCondition
                      description: |-
                        ReadinessChecks allows users to define custom readiness checks. All checks
                        have to return true in order for resource to be considered ready. The
                        default readiness check is to have the "Ready" condition to be "True".
                      items:
                        description: |-
                          ReadinessCheck is used to indicate how to tell whether a resource is ready
                          for consumption.
                        properties:
                          fieldPath:
                            description: FieldPath shows the path of the field whose
                              value will be used.
                            type: string
                          matchCondition:
                            description: MatchCondition specifies the condition you'd
                              like to match if you're using "MatchCondition" type.
                            properties:
                              status:
                                default: "True"
                                description: Status is the status of the condition
                                  you'd like to match.
                                type: string
                              type:
                                default: Ready
                                description: Type indicates the type of condition
                                  you'd like to use.
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          matchInteger:
                            description: MatchInt is the value you'd like to match
                              if you're using "MatchInt" type.
                            format: int64
                            type: integer
                          matchString:
                            description: MatchString is the value you'd like to match
                              if you're using "MatchString" type.
                            type: string
                          type:
                            description: Type indicates the type of probe you'd like
                              to use.
                            enum:
                            - MatchString
                            - MatchInteger
                            - NonEmpty
                            - MatchCondition
                            - MatchTrue
                            - MatchFalse
                            - None
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                  required:
                  - base
                  type: object
                type: array
              revision:
                description: Revision number. Newer revisions have larger numbers.
                format: int64
                type: integer
              writeConnectionSecretsToNamespace:
                description: |-
                  WriteConnectionSecretsToNamespace specifies the namespace in which the
                  connection secrets of composite resource dynamically provisioned using
                  this composition will be created.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsWithStoreConfigRef. Currently, both could be
                  set independently and connection details would be published to both
                  without affecting each other as long as related fields at MR level
                  specified.
                type: string
            required:
            - compositeTypeRef
            - revision
            type: object
          status:
            description: |-
              CompositionRevisionStatus shows the observed state of the composition
              revision.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: CompositionRevision
    listKind: CompositionRevisionList
    plural: compositionrevisions
    shortNames:
    - comprev
    singular: compositionrevision
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: compositions.apiextensions.crossplane.io
  resourceVersion: "574"
  uid: a91e5136-230a-4d06-a452-a09cddf62e4f
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
    - crossplane
    kind: Composition
    listKind: CompositionList
    plural: compositions
    shortNames:
    - comp
    singular: composition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.compositeTypeRef.kind
      name: XR-KIND
      type: string
    - jsonPath: .spec.compositeTypeRef.apiVersion
      name: XR-APIVERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A Composition defines a collection of managed resources or functions that
          Crossplane uses to create and manage new composite resources.


          Read the Crossplane documentation for
          [more information about Compositions](https://docs.crossplane.io/latest/concepts/compositions).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CompositionSpec specifies desired state of a composition.
            properties:
              compositeTypeRef:
                description: |-
                  CompositeTypeRef specifies the type of composite resource that this
                  composition is compatible with.
                properties:
                  apiVersion:
                    description: APIVersion of the type.
                    type: string
                  kind:
                    description: Kind of the type.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              environment:
                description: |-
                  Environment configures the environment in which resources are rendered.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  defaultData:
                    additionalProperties:
                      x-kubernetes-preserve-unknown-fields: true
                    description: |-
                      DefaultData statically defines the initial state of the environment.
                      It has the same schema-less structure as the data field in
                      environment configs.
                      It is overwritten by the selected environment configs.
                    type: object
                  environmentConfigs:
                    description: |-
                      EnvironmentConfigs selects a list of `EnvironmentConfig`s. The resolved
                      resources are stored in the composite resource at
                      `spec.environmentConfigRefs` and is only updated if it is null.


                      The list of references is used to compute an in-memory environment at
                      compose time. The data of all object is merged in the order they are
                      listed, meaning the values of EnvironmentConfigs with a larger index take
                      priority over ones with smaller indices.


                      The computed environment can be accessed in a composition using
                      `FromEnvironmentFieldPath` and `CombineFromEnvironment` patches.
                    items:
                      description: EnvironmentSource selects a EnvironmentConfig resource.
                      properties:
                        ref:
                          description: |-
                            Ref is a named reference to a single EnvironmentConfig.
                            Either Ref or Selector is required.
                          properties:
                            name:
                              description: The name of the object.
                              type: string
                          required:
                          - name
                          type: object
                        selector:
                          description: Selector selects EnvironmentConfig(s) via labels.
                          properties:
                            matchLabels:
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              items:
                                description: |-
                                  An EnvironmentSourceSelectorLabelMatcher acts like a k8s label selector but
                                  can draw the label value from a different path.
                                properties:
                                  fromFieldPathPolicy:
                                    default: Required
                                    description: |-
                                      FromFieldPathPolicy specifies the policy for the valueFromFieldPath.
                                      The default is Required, meaning that an error will be returned if the
                                      field is not found in the composite resource.
                                      Optional means that if the field is not found in the composite resource,
                                      that label pair will just be skipped. N.B. other specified label
                                      matchers will still be used to retrieve the desired
                                      environment config, if any.
                                    enum:
                                    - Optional
                                    - Required
                                    type: string
                                  key:
                                    description: Key of the label to match.
                                    type: string
                                  type:
                                    default: FromCompositeFieldPath
                                    description: Type specifies where the value for
                                      a label comes from.
                                    enum:
                                    - FromCompositeFieldPath
                                    - Value
                                    type: string
                                  value:
                                    description: Value specifies a literal label value.
                                    type: string
                                  valueFromFieldPath:
                                    description: ValueFromFieldPath specifies the
                                      field path to look for the label value.
                                    type: string
                                required:
                                - key
                                type: object
                              type: array
                            maxMatch:
                              description: MaxMatch specifies the number of extracted
                                EnvironmentConfigs in Multiple mode, extracts all
                                if nil.
                              format: int64
                              type: integer
                            minMatch:
                              description: MinMatch specifies the required minimum
                                of extracted EnvironmentConfigs in Multiple mode.
                              format: int64
                              type: integer
                            mode:
                              default: Single
                              description: 'Mode specifies retrieval strategy: "Single"
                                or "Multiple".'
                              enum:
                              - Single
                              - Multiple
                              type: string
                            sortByFieldPath:
                              default: metadata.name
                              description: SortByFieldPath is the path to the field
                                based on which list of EnvironmentConfigs is alphabetically
                                sorted.
                              type: string
                          type: object
                        type:
                          default: Reference
                          description: |-
                            Type specifies the way the EnvironmentConfig is selected.
                            Default is `Reference`
                          enum:
                          - Reference
                          - Selector
                          type: string
                      type: object
                    type: array
                  patches:
                    description: |-
                      Patches is a list of environment patches that are executed before a
                      composition's resources are composed.
                    items:
                      description: EnvironmentPatch is a patch for a Composition environment.
                      properties:
                        combine:
                          description: |-
                            Combine is the patch configuration for a CombineFromComposite or
                            CombineToComposite patch.
                          properties:
                            strategy:
                              description: |-
                                Strategy defines the strategy to use to combine the input variable values.
                                Currently only string is supported.
                              enum:
                              - string
                              type: string
                            string:
                              description: |-
                                String declares that input variables should be combined into a single
                                string, using the relevant settings for formatting purposes.
                              properties:
                                fmt:
                                  description: |-
                                    Format the input using a Go format string. See
                                    https://golang.org/pkg/fmt/ for details.
                                  type: string
                              required:
                              - fmt
                              type: object
                            variables:
                              description: |-
                                Variables are the list of variables whose values will be retrieved and
                                combined.
                              items:
                                description: |-
                                  A CombineVariable defines the source of a value that is combined with
                                  others to form and patch an output value. Currently, this only supports
                                  retrieving values from a field path.
                                properties:
                                  fromFieldPath:
                                    description: |-
                                      FromFieldPath is the path of the field on the source whose value is
                                      to be used as input.
                                    type: string
                                required:
                                - fromFieldPath
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - strategy
                          - variables
                          type: object
                        fromFieldPath:
                          description: |-
                            FromFieldPath is the path of the field on the resource whose value is
                            to be used as input. Required when type is FromCompositeFieldPath or
                            ToCompositeFieldPath.
                          type: string
                        policy:
                          description: Policy configures the specifics of patching
                            behaviour.
                          properties:
                            fromFieldPath:
                              description: |-
                                FromFieldPath specifies how to patch from a field path. The default is
                                'Optional', which means the patch will be a no-op if the specified
                                fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                the specified path does not exist.
                              enum:
                              - Optional
                              - Required
                              type: string
                            mergeOptions:
                              description: MergeOptions Specifies merge options on
                                a field path.
                              properties:
                                appendSlice:
                                  description: Specifies that already existing elements
                                    in a merged slice should be preserved
                                  type: boolean
                                keepMapValues:
                                  description: Specifies that already existing values
                                    in a merged map should be preserved
                                  type: boolean
                              type: object
                          type: object
                        toFieldPath:
                          description: |-
                            ToFieldPath is the path of the field on the resource whose value will
                            be changed with the result of transforms. Leave empty if you'd like to
                            propagate to the same path as fromFieldPath.
                          type: string
                        transforms:
                          description: |-
                            Transforms are the list of functions that are used as a FIFO pipe for the
                            input to be transformed.
                          items:
                            description: |-
                              Transform is a unit of process whose input is transformed into an output with
                              the supplied configuration.
                            properties:
                              convert:
                                description: Convert is used to cast the input into
                                  the given output type.
                                properties:
                                  format:
                                    description: |-
                                      The expected input format.


                                      * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                      Only used during `string -> float64` conversions.
                                      * `json` - parses the input as a JSON string.
                                      Only used during `string -> object` or `string -> list` conversions.


                                      If this property is null, the default conversion is applied.
                                    enum:
                                    - none
                                    - quantity
                                    - json
                                    type: string
                                  toType:
                                    description: ToType is the type of the output
                                      of this transform.
                                    enum:
                                    - string
                                    - int
                                    - int64
                                    - bool
                                    - float64
                                    - object
                                    - array
                                    type: string
                                required:
                                - toType
                                type: object
                              map:
                                additionalProperties:
                                  x-kubernetes-preserve-unknown-fields: true
                                description: Map uses the input as a key in the given
                                  map and returns the value.
                                type: object
                              match:
                                description: Match is a more complex version of Map
                                  that matches a list of patterns.
                                properties:
                                  fallbackTo:
                                    default: Value
                                    description: Determines to what value the transform
                                      should fallback if no pattern matches.
                                    enum:
                                    - Value
                                    - Input
                                    type: string
                                  fallbackValue:
                                    description: |-
                                      The fallback value that should be returned by the transform if now pattern
                                      matches.
                                    x-kubernetes-preserve-unknown-fields: true
                                  patterns:
                                    description: |-
                                      The patterns that should be tested against the input string.
                                      Patterns are tested in order. The value of the first match is used as
                                      result of this transform.
                                    items:
                                      description: |-
                                        MatchTransformPattern is a transform that returns the value that matches a
                                        pattern.
                                      properties:
                                        literal:
                                          description: |-
                                            Literal exactly matches the input string (case sensitive).
                                            Is required if `type` is `literal`.
                                          type: string
                                        regexp:
                                          description: |-
                                            Regexp to match against the input string.
                                            Is required if `type` is `regexp`.
                                          type: string
                                        result:
                                          description: The value that is used as result
                                            of the transform if the pattern matches.
                                          x-kubernetes-preserve-unknown-fields: true
                                        type:
                                          default: literal
                                          description: |-
                                            Type specifies how the pattern matches the input.


                                            * `literal` - the pattern value has to exactly match (case sensitive) the
                                            input string. This is the default.


                                            * `regexp` - the pattern treated as a regular expression against
                                            which the input string is tested. Crossplane will throw an error if the
                                            key is not a valid regexp.
                                          enum:
                                          - literal
                                          - regexp
                                          type: string
                                      required:
                                      - result
                                      - type
                                      type: object
                                    type: array
                                type: object
                              math:
                                description: |-
                                  Math is used to transform the input via mathematical operations such as
                                  multiplication.
                                properties:
                                  clampMax:
                                    description: ClampMax makes sure that the value
                                      is not bigger than the given value.
                                    format: int64
                                    type: integer
                                  clampMin:
                                    description: ClampMin makes sure that the value
                                      is not smaller than the given value.
                                    format: int64
                                    type: integer
                                  multiply:
                                    description: Multiply the value.
                                    format: int64
                                    type: integer
                                  type:
                                    default: Multiply
                                    description: Type of the math transform to be
                                      run.
                                    enum:
                                    - Multiply
                                    - ClampMin
                                    - ClampMax
                                    type: string
                                type: object
                              string:
                                description: |-
                                  String is used to transform the input into a string or a different kind
                                  of string. Note that the input does not necessarily need to be a string.
                                properties:
                                  convert:
                                    description: |-
                                      Optional conversion method to be specified.
                                      `ToUpper` and `ToLower` change the letter case of the input string.
                                      `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                      `ToJson` converts any input value into its raw JSON representation.
                                      `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                      converted to JSON.
                                      `ToAdler32` generate a addler32 hash based on the input string.
                                    enum:
                                    - ToUpper
                                    - ToLower
                                    - ToBase64
                                    - FromBase64
                                    - ToJson
                                    - ToSha1
                                    - ToSha256
                                    - ToSha512
                                    - ToAdler32
                                    type: string
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                  join:
                                    description: Join defines parameters to join a
                                      slice of values to a string.
                                    properties:
                                      separator:
                                        description: |-
                                          Separator defines the character that should separate the values from each
                                          other in the joined string.
                                        type: string
                                    required:
                                    - separator
                                    type: object
                                  regexp:
                                    description: Extract a match from the input using
                                      a regular expression.
                                    properties:
                                      group:
                                        description: Group number to match. 0 (the
                                          default) matches the entire expression.
                                        type: integer
                                      match:
                                        description: |-
                                          Match string. May optionally include submatches, aka capture groups.
                                          See https://pkg.go.dev/regexp/ for details.
                                        type: string
                                    required:
                                    - match
                                    type: object
                                  trim:
                                    description: Trim the prefix or suffix from the
                                      input
                                    type: string
                                  type:
                                    default: Format
                                    description: Type of the string transform to be
                                      run.
                                    enum:
                                    - Format
                                    - Convert
                                    - TrimPrefix
                                    - TrimSuffix
                                    - Regexp
                                    - Join
                                    type: string
                                type: object
                              type:
                                description: Type of the transform to be run.
                                enum:
                                - map
                                - match
                                - math
                                - string
                                - convert
                                type: string
                            required:
                            - type
                            type: object
                          type: array
                        type:
                          default: FromCompositeFieldPath
                          description: |-
                            Type sets the patching behaviour to be used. Each patch type may require
                            its own fields to be set on the Patch object.
                          enum:
                          - FromCompositeFieldPath
                          - ToCompositeFieldPath
                          - CombineFromComposite
                          - CombineToComposite
                          type: string
                      type: object
                    type: array
                  policy:
                    description: |-
                      Policy represents the Resolve and Resolution policies which apply to
                      all EnvironmentSourceReferences in EnvironmentConfigs list.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                type: object
              mode:
                default: Resources
                description: |-
                  Mode controls what type or "mode" of Composition will be used.


                  "Resources" (the default) indicates that a Composition uses what is
                  commonly referred to as "Patch & Transform" or P&T composition. This mode
                  of Composition uses an array of resources, each a template for a composed
                  resource.


                  "Pipeline" indicates that a Composition specifies a pipeline
                  of Composition Functions, each of which is responsible for producing
                  composed resources that Crossplane should create or update. THE PIPELINE
                  MODE IS A BETA FEATURE. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                enum:
                - Resources
                - Pipeline
                type: string
              patchSets:
                description: |-
                  PatchSets define a named set of patches that may be included by any
                  resource in this Composition. PatchSets cannot themselves refer to other
                  PatchSets.


                  PatchSets are only used by the "Resources" mode of Composition. They
                  are ignored by other modes.
                items:
                  description: |-
                    A PatchSet is a set of patches that can be reused from all resources within
                    a Composition.
                  properties:
                    name:
                      description: Name of this PatchSet.
                      type: string
                    patches:
                      description: Patches will be applied as an overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  - patches
                  type: object
                type: array
              pipeline:
                description: |-
                  Pipeline is a list of composition function steps that will be used when a
                  composite resource referring to this composition is created. One of
                  resources and pipeline must be specified - you cannot specify both.


                  The Pipeline is only used by the "Pipeline" mode of Composition. It is
                  ignored by other modes.


                  THIS IS A BETA FIELD. It is not honored if the relevant Crossplane
                  feature flag is disabled.
                items:
                  description: A PipelineStep in a Composition Function pipeline.
                  properties:
                    credentials:
                      description: Credentials are optional credentials that the Composition
                        Function needs.
                      items:
                        description: |-
                          FunctionCredentials are optional credentials that a Composition Function
                          needs to run.
                        properties:
                          name:
                            description: Name of this set of credentials.
                            type: string
                          secretRef:
                            description: |-
                              A SecretRef is a reference to a secret containing credentials that should
                              be supplied to the function.
                            properties:
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the function credentials.
                            enum:
                            - None
                            - Secret
                            type: string
                        required:
                        - name
                        - source
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    functionRef:
                      description: |-
                        FunctionRef is a reference to the Composition Function this step should
                        execute.
                      properties:
                        name:
                          description: Name of the referenced Function.
                          type: string
                      required:
                      - name
                      type: object
                    input:
                      description: |-
                        Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                        with an apiVersion and kind) that will be passed to the Composition
                        Function as the 'input' of its RunFunctionRequest.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    step:
                      description: Step name. Must be unique within its Pipeline.
                      type: string
                  required:
                  - functionRef
                  - step
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - step
                x-kubernetes-list-type: map
              publishConnectionDetailsWithStoreConfigRef:
                default:
                  name: default
                description: |-
                  PublishConnectionDetailsWithStoreConfig specifies the secret store config
                  with which the connection details of composite resources dynamically
                  provisioned using this composition will be published.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                properties:
                  name:
                    description: Name of the referenced StoreConfig.
                    type: string
                required:
                - name
                type: object
              resources:
                description: |-
                  Resources is a list of resource templates that will be used when a
                  composite resource referring to this composition is created.


                  Resources are only used by the "Resources" mode of Composition. They are
                  ignored by other modes.
                items:
                  description: |-
                    ComposedTemplate is used to provide information about how the composed resource
                    should be processed.
                  properties:
                    base:
                      description: Base is the target resource that the patches will
                        be applied on.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    connectionDetails:
                      description: |-
                        ConnectionDetails lists the propagation secret keys from this target
                        resource to the composition instance connection secret.
                      items:
                        description: |-
                          ConnectionDetail includes the information about the propagation of the connection
                          information from one secret to another.
                        properties:
                          fromConnectionSecretKey:
                            description: |-
                              FromConnectionSecretKey is the key that will be used to fetch the value
                              from the composed resource's connection secret.
                            type: string
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the composed resource whose
                              value to be used as input. Name must be specified if the type is
                              FromFieldPath.
                            type: string
                          name:
                            description: |-
                              Name of the connection secret key that will be propagated to the
                              connection secret of the composition instance. Leave empty if you'd like
                              to use the same key name.
                            type: string
                          type:
                            description: |-
                              Type sets the connection detail fetching behaviour to be used. Each
                              connection detail type may require its own fields to be set on the
                              ConnectionDetail object. If the type is omitted Crossplane will attempt
                              to infer it based on which other fields were specified. If multiple
                              fields are specified the order of precedence is:
                              1. FromValue
                              2. FromConnectionSecretKey
                              3. FromFieldPath
                            enum:
                            - FromConnectionSecretKey
                            - FromFieldPath
                            - FromValue
                            type: string
                          value:
                            description: |-
                              Value that will be propagated to the connection secret of the composite
                              resource. May be set to inject a fixed, non-sensitive connection secret
                              value, for example a well-known port.
                            type: string
                        type: object
                      type: array
                    name:
                      description: |-
                        A Name uniquely identifies this entry within its Composition's resources
                        array. Names are optional but *strongly* recommended. When all entries in
                        the resources array are named entries may added, deleted, and reordered
                        as long as their names do not change. When entries are not named the
                        length and order of the resources array should be treated as immutable.
                        Either all or no entries must be named.
                      type: string
                    patches:
                      description: Patches will be applied as overlay to the base
                        resource.
                      items:
                        description: |-
                          Patch objects are applied between composite and composed resources. Their
                          behaviour depends on the Type selected. The default Type,
                          FromCompositeFieldPath, copies a value from the composite resource to
                          the composed resource, applying any defined transformers.
                        properties:
                          combine:
                            description: |-
                              Combine is the patch configuration for a CombineFromComposite,
                              CombineFromEnvironment, CombineToComposite or CombineToEnvironment patch.
                            properties:
                              strategy:
                                description: |-
                                  Strategy defines the strategy to use to combine the input variable values.
                                  Currently only string is supported.
                                enum:
                                - string
                                type: string
                              string:
                                description: |-
                                  String declares that input variables should be combined into a single
                                  string, using the relevant settings for formatting purposes.
                                properties:
                                  fmt:
                                    description: |-
                                      Format the input using a Go format string. See
                                      https://golang.org/pkg/fmt/ for details.
                                    type: string
                                required:
                                - fmt
                                type: object
                              variables:
                                description: |-
                                  Variables are the list of variables whose values will be retrieved and
                                  combined.
                                items:
                                  description: |-
                                    A CombineVariable defines the source of a value that is combined with
                                    others to form and patch an output value. Currently, this only supports
                                    retrieving values from a field path.
                                  properties:
                                    fromFieldPath:
                                      description: |-
                                        FromFieldPath is the path of the field on the source whose value is
                                        to be used as input.
                                      type: string
                                  required:
                                  - fromFieldPath
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - strategy
                            - variables
                            type: object
                          fromFieldPath:
                            description: |-
                              FromFieldPath is the path of the field on the resource whose value is
                              to be used as input. Required when type is FromCompositeFieldPath,
                              FromEnvironmentFieldPath, ToCompositeFieldPath, ToEnvironmentFieldPath.
                            type: string
                          patchSetName:
                            description: PatchSetName to include patches from. Required
                              when type is PatchSet.
                            type: string
                          policy:
                            description: Policy configures the specifics of patching
                              behaviour.
                            properties:
                              fromFieldPath:
                                description: |-
                                  FromFieldPath specifies how to patch from a field path. The default is
                                  'Optional', which means the patch will be a no-op if the specified
                                  fromFieldPath does not exist. Use 'Required' if the patch should fail if
                                  the specified path does not exist.
                                enum:
                                - Optional
                                - Required
                                type: string
                              mergeOptions:
                                description: MergeOptions Specifies merge options
                                  on a field path.
                                properties:
                                  appendSlice:
                                    description: Specifies that already existing elements
                                      in a merged slice should be preserved
                                    type: boolean
                                  keepMapValues:
                                    description: Specifies that already existing values
                                      in a merged map should be preserved
                                    type: boolean
                                type: object
                            type: object
                          toFieldPath:
                            description: |-
                              ToFieldPath is the path of the field on the resource whose value will
                              be changed with the result of transforms. Leave empty if you'd like to
                              propagate to the same path as fromFieldPath.
                            type: string
                          transforms:
                            description: |-
                              Transforms are the list of functions that are used as a FIFO pipe for the
                              input to be transformed.
                            items:
                              description: |-
                                Transform is a unit of process whose input is transformed into an output with
                                the supplied configuration.
                              properties:
                                convert:
                                  description: Convert is used to cast the input into
                                    the given output type.
                                  properties:
                                    format:
                                      description: |-
                                        The expected input format.


                                        * `quantity` - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                        Only used during `string -> float64` conversions.
                                        * `json` - parses the input as a JSON string.
                                        Only used during `string -> object` or `string -> list` conversions.


                                        If this property is null, the default conversion is applied.
                                      enum:
                                      - none
                                      - quantity
                                      - json
                                      type: string
                                    toType:
                                      description: ToType is the type of the output
                                        of this transform.
                                      enum:
                                      - string
                                      - int
                                      - int64
                                      - bool
                                      - float64
                                      - object
                                      - array
                                      type: string
                                  required:
                                  - toType
                                  type: object
                                map:
                                  additionalProperties:
                                    x-kubernetes-preserve-unknown-fields: true
                                  description: Map uses the input as a key in the
                                    given map and returns the value.
                                  type: object
                                match:
                                  description: Match is a more complex version of
                                    Map that matches a list of patterns.
                                  properties:
                                    fallbackTo:
                                      default: Value
                                      description: Determines to what value the transform
                                        should fallback if no pattern matches.
                                      enum:
                                      - Value
                                      - Input
                                      type: string
                                    fallbackValue:
                                      description: |-
                                        The fallback value that should be returned by the transform if now pattern
                                        matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patterns:
                                      description: |-
                                        The patterns that should be tested against the input string.
                                        Patterns are tested in order. The value of the first match is used as
                                        result of this transform.
                                      items:
                                        description: |-
                                          MatchTransformPattern is a transform that returns the value that matches a
                                          pattern.
                                        properties:
                                          literal:
                                            description: |-
                                              Literal exactly matches the input string (case sensitive).
                                              Is required if `type` is `literal`.
                                            type: string
                                          regexp:
                                            description: |-
                                              Regexp to match against the input string.
                                              Is required if `type` is `regexp`.
                                            type: string
                                          result:
                                            description: The value that is used as
                                              result of the transform if the pattern
                                              matches.
                                            x-kubernetes-preserve-unknown-fields: true
                                          type:
                                            default: literal
                                            description: |-
                                              Type specifies how the pattern matches the input.


                                              * `literal` - the pattern value has to exactly match (case sensitive) the
                                              input string. This is the default.


                                              * `regexp` - the pattern treated as a regular expression against
                                              which the input string is tested. Crossplane will throw an error if the
                                              key is not a valid regexp.
                                            enum:
                                            - literal
                                            - regexp
                                            type: string
                                        required:
                                        - result
                                        - type
                                        type: object
                                      type: array
                                  type: object
                                math:
                                  description: |-
                                    Math is used to transform the input via mathematical operations such as
                                    multiplication.
                                  properties:
                                    clampMax:
                                      description: ClampMax makes sure that the value
                                        is not bigger than the given value.
                                      format: int64
                                      type: integer
                                    clampMin:
                                      description: ClampMin makes sure that the value
                                        is not smaller than the given value.
                                      format: int64
                                      type: integer
                                    multiply:
                                      description: Multiply the value.
                                      format: int64
                                      type: integer
                                    type:
                                      default: Multiply
                                      description: Type of the math transform to be
                                        run.
                                      enum:
                                      - Multiply
                                      - ClampMin
                                      - ClampMax
                                      type: string
                                  type: object
                                string:
                                  description: |-
                                    String is used to transform the input into a string or a different kind
                                    of string. Note that the input does not necessarily need to be a string.
                                  properties:
                                    convert:
                                      description: |-
                                        Optional conversion method to be specified.
                                        `ToUpper` and `ToLower` change the letter case of the input string.
                                        `ToBase64` and `FromBase64` perform a base64 conversion based on the input string.
                                        `ToJson` converts any input value into its raw JSON representation.
                                        `ToSha1`, `ToSha256` and `ToSha512` generate a hash value based on the input
                                        converted to JSON.
                                        `ToAdler32` generate a addler32 hash based on the input string.
                                      enum:
                                      - ToUpper
                                      - ToLower
                                      - ToBase64
                                      - FromBase64
                                      - ToJson
                                      - ToSha1
                                      - ToSha256
                                      - ToSha512
                                      - ToAdler32
                                      type: string
                                    fmt:
                                      description: |-
                                        Format the input using a Go format string. See
                                        https://golang.org/pkg/fmt/ for details.
                                      type: string
                                    join:
                                      description: Join defines parameters to join
                                        a slice of values to a string.
                                      properties:
                                        separator:
                                          description: |-
                                            Separator defines the character that should separate the values from each
                                            other in the joined string.
                                          type: string
                                      required:
                                      - separator
                                      type: object
                                    regexp:
                                      description: Extract a match from the input
                                        using a regular expression.
                                      properties:
                                        group:
                                          description: Group number to match. 0 (the
                                            default) matches the entire expression.
                                          type: integer
                                        match:
                                          description: |-
                                            Match string. May optionally include submatches, aka capture groups.
                                            See https://pkg.go.dev/regexp/ for details.
                                          type: string
                                      required:
                                      - match
                                      type: object
                                    trim:
                                      description: Trim the prefix or suffix from
                                        the input
                                      type: string
                                    type:
                                      default: Format
                                      description: Type of the string transform to
                                        be run.
                                      enum:
                                      - Format
                                      - Convert
                                      - TrimPrefix
                                      - TrimSuffix
                                      - Regexp
                                      - Join
                                      type: string
                                  type: object
                                type:
                                  description: Type of the transform to be run.
                                  enum:
                                  - map
                                  - match
                                  - math
                                  - string
                                  - convert
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          type:
                            default: FromCompositeFieldPath
                            description: |-
                              Type sets the patching behaviour to be used. Each patch type may require
                              its own fields to be set on the Patch object.
                            enum:
                            - FromCompositeFieldPath
                            - FromEnvironmentFieldPath
                            - PatchSet
                            - ToCompositeFieldPath
                            - ToEnvironmentFieldPath
                            - CombineFromEnvironment
                            - CombineFromComposite
                            - CombineToComposite
                            - CombineToEnvironment
                            type: string
                        type: object
                      type: array
                    readinessChecks:
                      default:
                      - matchCondition:
                          status: "True"
                          type: Ready
                        type: MatchCondition
                      description: |-
                        ReadinessChecks allows users to define custom readiness checks. All checks
                        have to return true in order for resource to be considered ready. The
                        default readiness check is to have the "Ready" condition to be "True".
                      items:
                        description: |-
                          ReadinessCheck is used to indicate how to tell whether a resource is ready
                          for consumption.
                        properties:
                          fieldPath:
                            description: FieldPath shows the path of the field whose
                              value will be used.
                            type: string
                          matchCondition:
                            description: MatchCondition specifies the condition you'd
                              like to match if you're using "MatchCondition" type.
                            properties:
                              status:
                                default: "True"
                                description: Status is the status of the condition
                                  you'd like to match.
                                type: string
                              type:
                                default: Ready
                                description: Type indicates the type of condition
                                  you'd like to use.
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          matchInteger:
                            description: MatchInt is the value you'd like to match
                              if you're using "MatchInt" type.
                            format: int64
                            type: integer
                          matchString:
                            description: MatchString is the value you'd like to match
                              if you're using "MatchString" type.
                            type: string
                          type:
                            description: Type indicates the type of probe you'd like
                              to use.
                            enum:
                            - MatchString
                            - MatchInteger
                            - NonEmpty
                            - MatchCondition
                            - MatchTrue
                            - MatchFalse
                            - None
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                  required:
                  - base
                  type: object
                type: array
              writeConnectionSecretsToNamespace:
                description: |-
                  WriteConnectionSecretsToNamespace specifies the namespace in which the
                  connection secrets of composite resource dynamically provisioned using
                  this composition will be created.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsWithStoreConfigRef. Currently, both could be
                  set independently and connection details would be published to both
                  without affecting each other as long as related fields at MR level
                  specified.
                type: string
            required:
            - compositeTypeRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: Composition
    listKind: CompositionList
    plural: compositions
    shortNames:
    - comp
    singular: composition
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:10:26Z"
  generation: 1
  name: configmaps.demo03.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xconfigmaps.demo03.suin.jp
    uid: 248225cb-f875-4e62-96e9-c65a76c6b0b6
  resourceVersion: "1003"
  uid: b616bb54-8f4c-4f79-a446-b05d2f24d890
spec:
  conversion:
    strategy: None
  group: demo03.suin.jp
  names:
    categories:
    - claim
    kind: ConfigMap
    listKind: ConfigMapList
    plural: configmaps
    singular: configmap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.writeConnectionSecretToRef.name
      name: CONNECTION-SECRET
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              compositeDeletePolicy:
                default: Background
                enum:
                - Background
                - Foreground
                type: string
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                enum:
                - Automatic
                - Manual
                type: string
              data:
                additionalProperties:
                  type: string
                type: object
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - data
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - claim
    kind: ConfigMap
    listKind: ConfigMapList
    plural: configmaps
    singular: configmap
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: configurationrevisions.pkg.crossplane.io
  resourceVersion: "578"
  uid: 1c02c071-d3bd-4e04-bdb0-fc4d71cebaf8
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkgrev
    kind: ConfigurationRevision
    listKind: ConfigurationRevisionList
    plural: configurationrevisions
    singular: configurationrevision
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.revision
      name: REVISION
      type: string
    - jsonPath: .spec.image
      name: IMAGE
      type: string
    - jsonPath: .spec.desiredState
      name: STATE
      type: string
    - jsonPath: .status.foundDependencies
      name: DEP-FOUND
      type: string
    - jsonPath: .status.installedDependencies
      name: DEP-INSTALLED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A ConfigurationRevision represents a revision of a Configuration. Crossplane
          creates new revisions when there are changes to a Configuration.


          Crossplane creates and manages ConfigurationRevision. Don't directly edit
          ConfigurationRevisions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PackageRevisionSpec specifies the desired state of a PackageRevision.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              desiredState:
                description: DesiredState of the PackageRevision. Can be either Active
                  or Inactive.
                type: string
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              image:
                description: Package image used by install Pod to extract package
                  contents.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package. It is also
                  applied to any images pulled for the package, such as a provider's
                  controller image.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be
                  used to fetch packages from private registries. They are also applied to
                  any images pulled for the package, such as a provider's controller image.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revision:
                description: |-
                  Revision number. Indicates when the revision will be garbage collected
                  based on the parent's RevisionHistoryLimit.
                format: int64
                type: integer
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
            required:
            - desiredState
            - image
            - revision
            type: object
          status:
            description: PackageRevisionStatus represents the observed state of a
              PackageRevision.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              foundDependencies:
                description: Dependency information.
                format: int64
                type: integer
              installedDependencies:
                format: int64
                type: integer
              invalidDependencies:
                format: int64
                type: integer
              objectRefs:
                description: References to objects owned by PackageRevision.
                items:
                  description: |-
                    A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                    commonly used to reference cluster-scoped objects or objects where the
                    namespace is already known.
                  properties:
                    apiVersion:
                      description: APIVersion of the referenced object.
                      type: string
                    kind:
                      description: Kind of the referenced object.
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                    uid:
                      description: UID of the referenced object.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
              permissionRequests:
                description: |-
                  PermissionRequests made by this package. The package declares that its
                  controller needs these permissions to run. The RBAC manager is
                  responsible for granting them.
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names
                        that the rule applies to.  An empty set means that everything
                        is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the
                        ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkgrev
    kind: ConfigurationRevision
    listKind: ConfigurationRevisionList
    plural: configurationrevisions
    singular: configurationrevision
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: configurations.pkg.crossplane.io
  resourceVersion: "579"
  uid: 96552224-6962-4186-9789-b53778532088
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkg
    kind: Configuration
    listKind: ConfigurationList
    plural: configurations
    singular: configuration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Installed')].status
      name: INSTALLED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.package
      name: PACKAGE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A Configuration installs an OCI compatible Crossplane package, extending
          Crossplane with support for new kinds of CompositeResourceDefinitions and
          Compositions.


          Read the Crossplane documentation for
          [more information about Configuration packages](https://docs.crossplane.io/latest/concepts/packages).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ConfigurationSpec specifies details about a request to install a
              configuration to Crossplane.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              package:
                description: Package is the name of the package that is being requested.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be used
                  to fetch packages from private registries.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revisionActivationPolicy:
                default: Automatic
                description: |-
                  RevisionActivationPolicy specifies how the package controller should
                  update from one revision to the next. Options are Automatic or Manual.
                  Default is Automatic.
                type: string
              revisionHistoryLimit:
                default: 1
                description: |-
                  RevisionHistoryLimit dictates how the package controller cleans up old
                  inactive package revisions.
                  Defaults to 1. Can be disabled by explicitly setting to 0.
                format: int64
                type: integer
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
            required:
            - package
            type: object
          status:
            description: ConfigurationStatus represents the observed state of a Configuration.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentIdentifier:
                description: |-
                  CurrentIdentifier is the most recent package source that was used to
                  produce a revision. The package manager uses this field to determine
                  whether to check for package updates for a given source when
                  packagePullPolicy is set to IfNotPresent. Manually removing this field
                  will cause the package manager to check that the current revision is
                  correct for the given package source.
                type: string
              currentRevision:
                description: |-
                  CurrentRevision is the name of the current package revision. It will
                  reflect the most up to date revision, whether it has been activated or
                  not.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkg
    kind: Configuration
    listKind: ConfigurationList
    plural: configurations
    singular: configuration
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: controllerconfigs.pkg.crossplane.io
  resourceVersion: "588"
  uid: 293595c2-bcfe-47be-a6ee-054a65eedac4
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    kind: ControllerConfig
    listKind: ControllerConfigList
    plural: controllerconfigs
    singular: controllerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    deprecated: true
    deprecationWarning: ControllerConfig.pkg.crossplane.io/v1alpha1 is deprecated.
      Use DeploymentRuntimeConfig from pkg.crossplane.io/v1beta1 instead.
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A ControllerConfig applies settings to controllers like Provider pods.
          Deprecated: Use the
          [DeploymentRuntimeConfig](https://docs.crossplane.io/latest/concepts/providers#runtime-configuration)
          instead.


          Read the
          [Package Runtime Configuration](https://github.com/crossplane/crossplane/blob/11bbe13ea3604928cc4e24e8d0d18f3f5f7e847c/design/one-pager-package-runtime-config.md)
          design document for more details.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ControllerConfigSpec specifies the configuration for a packaged controller.
              Values provided will override package manager defaults. Labels and
              annotations are passed to both the controller Deployment and ServiceAccount.
            properties:
              affinity:
                description: If specified, the pod's scheduling constraints
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              args:
                description: |-
                  Arguments to the entrypoint.
                  The docker image's CMD is used if this is not provided.
                  Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                  cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax
                  can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                  regardless of whether the variable exists or not.
                  Cannot be updated.
                  More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                items:
                  type: string
                type: array
              env:
                description: |-
                  List of environment variables to set in the container.
                  Cannot be updated.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                description: |-
                  List of sources to populate environment variables in the container.
                  The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                  will be reported as an event when the container is starting. When a key exists in multiple
                  sources, the value associated with the last source will take precedence.
                  Values defined by an Env with a duplicate key will take precedence.
                  Cannot be updated.
                items:
                  description: EnvFromSource represents the source of a set of ConfigMaps
                  properties:
                    configMapRef:
                      description: The ConfigMap to select from
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    prefix:
                      description: An optional identifier to prepend to each key in
                        the ConfigMap. Must be a C_IDENTIFIER.
                      type: string
                    secretRef:
                      description: The Secret to select from
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              image:
                description: |-
                  Docker image name.
                  More info: https://kubernetes.io/docs/concepts/containers/images
                  This field is optional to allow higher level config management to default or override
                  container images in workload controllers like Deployments and StatefulSets.
                type: string
              imagePullPolicy:
                description: |-
                  Image pull policy.
                  One of Always, Never, IfNotPresent.
                  Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                  Cannot be updated.
                  More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                type: string
              imagePullSecrets:
                description: |-
                  ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                  If specified, these secrets will be passed to individual puller implementations for them to use. For example,
                  in the case of docker, only DockerConfig type secrets are honored.
                  More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                  Setting ImagePullSecrets will replace any secrets that have been
                  propagated to a controller Deployment, typically via packagePullSecrets.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              metadata:
                description: Metadata that will be added to the provider Pod.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Map of string keys and values that can be used to organize and
                      categorize (scope and select) objects. This will only affect
                      labels on the pod, not the pod selector. Labels will be merged
                      with internal labels used by crossplane, and labels with a
                      crossplane.io key might be overwritten.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                    type: object
                type: object
              nodeName:
                description: |-
                  NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
                  the scheduler simply schedules this pod onto that node, assuming that it fits resource
                  requirements.
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector is a selector which must be true for the pod to fit on a node.
                  Selector which must match a node's labels for the pod to be scheduled on that node.
                  More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                type: object
              podSecurityContext:
                description: |-
                  PodSecurityContext holds pod-level security attributes and common container settings.
                  Optional: Defaults to empty.  See type description for default values of each field.
                properties:
                  fsGroup:
                    description: |-
                      A special supplemental group that applies to all containers in a pod.
                      Some volume types allow the Kubelet to change the ownership of that volume
                      to be owned by the pod:


                      1. The owning GID will be the FSGroup
                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                      3. The permission bits are OR'd with rw-rw----


                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: |-
                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                      before being exposed inside Pod. This field will only apply to
                      volume types which support fsGroup based ownership(and permissions).
                      It will have no effect on ephemeral volume types such as: secret, configmaps
                      and emptydir.
                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process.
                      Uses runtime default if unset.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user.
                      If true, the Kubelet will validate the image at runtime to ensure that it
                      does not run as UID 0 (root) and fail to start the container if it does.
                      If unset or false, no such validation will be performed.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to all containers.
                      If unspecified, the container runtime will allocate a random SELinux context for each
                      container.  May also be set in SecurityContext.  If set in
                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                      takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by the containers in this pod.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be used.
                          The profile must be preconfigured on the node to work.
                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                          Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied.
                          Valid options are:


                          Localhost - a profile defined in a file on the node should be used.
                          RuntimeDefault - the container runtime default profile should be used.
                          Unconfined - no profile should be applied.
                        type: string
                    required:
                    - type
                    type: object
                  supplementalGroups:
                    description: |-
                      A list of groups applied to the first process run in each container, in addition
                      to the container's primary GID, the fsGroup (if specified), and group memberships
                      defined in the container image for the uid of the container process. If unspecified,
                      no additional groups are added to any container. Note that group memberships
                      defined in the container image for the uid of the container process are still effective,
                      even if they are not included in this list.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                  sysctls:
                    description: |-
                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                      sysctls (by the container runtime) might fail to launch.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      description: Sysctl defines a kernel parameter to be set
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers.
                      If unspecified, the options within a container's SecurityContext will be used.
                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                          GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process' container.
                          All of a Pod's containers must have the same effective HostProcess value
                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process.
                          Defaults to the user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext. If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              ports:
                description: List of container ports to expose on the container
                items:
                  description: ContainerPort represents a network port in a single
                    container.
                  properties:
                    containerPort:
                      description: |-
                        Number of port to expose on the pod's IP address.
                        This must be a valid port number, 0 < x < 65536.
                      format: int32
                      type: integer
                    hostIP:
                      description: What host IP to bind the external port to.
                      type: string
                    hostPort:
                      description: |-
                        Number of port to expose on the host.
                        If specified, this must be a valid port number, 0 < x < 65536.
                        If HostNetwork is specified, this must match ContainerPort.
                        Most containers do not need this.
                      format: int32
                      type: integer
                    name:
                      description: |-
                        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                        named port in a pod must have a unique name. Name for the port that can be
                        referred to by services.
                      type: string
                    protocol:
                      default: TCP
                      description: |-
                        Protocol for port. Must be UDP, TCP, or SCTP.
                        Defaults to "TCP".
                      type: string
                  required:
                  - containerPort
                  type: object
                type: array
              priorityClassName:
                description: |-
                  If specified, indicates the pod's priority. "system-node-critical" and
                  "system-cluster-critical" are two special keywords which indicate the
                  highest priorities with the former being the highest priority. Any other
                  name must be defined by creating a PriorityClass object with that name.
                  If not specified, the pod priority will be default or zero if there is no
                  default.
                type: string
              replicas:
                description: |-
                  Number of desired pods. This is a pointer to distinguish between explicit
                  zero and not specified. Defaults to 1.
                  Note: If more than 1 replica is set and leader election is not enabled then
                  controllers could conflict. Environment variable "LEADER_ELECTION" can be
                  used to enable leader election process.
                format: int32
                type: integer
              resources:
                description: |-
                  Compute Resources required by this container.
                  Cannot be updated.
                  More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              runtimeClassName:
                description: |-
                  RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                  to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                  If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                  empty definition that uses the default runtime handler.
                  More info: https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/585-runtime-class/README.md
                  This is a beta feature as of Kubernetes v1.14.
                type: string
              securityContext:
                description: |-
                  SecurityContext holds container-level security attributes and common container settings.
                  Optional: Defaults to empty.  See type description for default values of each field.
                properties:
                  allowPrivilegeEscalation:
                    description: |-
                      AllowPrivilegeEscalation controls whether a process can gain more
                      privileges than its parent process. This bool directly controls if
                      the no_new_privs flag will be set on the container process.
                      AllowPrivilegeEscalation is true always when the container is:
                      1) run as Privileged
                      2) has CAP_SYS_ADMIN
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  capabilities:
                    description: |-
                      The capabilities to add/drop when running containers.
                      Defaults to the default set of capabilities granted by the container runtime.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: |-
                      Run container in privileged mode.
                      Processes in privileged containers are essentially equivalent to root on the host.
                      Defaults to false.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  procMount:
                    description: |-
                      procMount denotes the type of proc mount to use for the containers.
                      The default is DefaultProcMount which uses the container runtime defaults for
                      readonly paths and masked paths.
                      This requires the ProcMountType feature flag to be enabled.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: |-
                      Whether this container has a read-only root filesystem.
                      Default is false.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process.
                      Uses runtime default if unset.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user.
                      If true, the Kubelet will validate the image at runtime to ensure that it
                      does not run as UID 0 (root) and fail to start the container if it does.
                      If unset or false, no such validation will be performed.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to the container.
                      If unspecified, the container runtime will allocate a random SELinux context for each
                      container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by this container. If seccomp options are
                      provided at both the pod & container level, the container options
                      override the pod options.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be used.
                          The profile must be preconfigured on the node to work.
                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                          Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied.
                          Valid options are:


                          Localhost - a profile defined in a file on the node should be used.
                          RuntimeDefault - the container runtime default profile should be used.
                          Unconfined - no profile should be applied.
                        type: string
                    required:
                    - type
                    type: object
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers.
                      If unspecified, the options from the PodSecurityContext will be used.
                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                          GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process' container.
                          All of a Pod's containers must have the same effective HostProcess value
                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process.
                          Defaults to the user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext. If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              serviceAccountName:
                description: |-
                  ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                  If specified, a ServiceAccount named this ServiceAccountName will be used for
                  the spec.serviceAccountName field in Pods to be created and for the subjects.name field
                  in a ClusterRoleBinding to be created.
                  If there is no ServiceAccount named this ServiceAccountName, a new ServiceAccount
                  will be created.
                  If there is a pre-existing ServiceAccount named this ServiceAccountName, the ServiceAccount
                  will be used. The annotations in the ControllerConfig will be copied to the ServiceAccount
                  and pre-existing annotations will be kept.
                  Regardless of whether there is a ServiceAccount created by Crossplane or is in place already,
                  the ServiceAccount will be deleted once the Provider and ControllerConfig are deleted.
                type: string
              tolerations:
                description: If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              volumeMounts:
                description: |-
                  List of VolumeMounts to mount into the container's filesystem.
                  Cannot be updated.
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  List of volumes that can be mounted by containers belonging to the pod.
                  More info: https://kubernetes.io/docs/concepts/storage/volumes
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  properties:
                    awsElasticBlockStore:
                      description: |-
                        awsElasticBlockStore represents an AWS Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        partition:
                          description: |-
                            partition is the partition in the volume that you want to mount.
                            If omitted, the default is to mount by volume name.
                            Examples: For volume /dev/sda1, you specify the partition as "1".
                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                          format: int32
                          type: integer
                        readOnly:
                          description: |-
                            readOnly value true will force the readOnly setting in VolumeMounts.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          type: boolean
                        volumeID:
                          description: |-
                            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          type: string
                      required:
                      - volumeID
                      type: object
                    azureDisk:
                      description: azureDisk represents an Azure Data Disk mount on
                        the host and bind mount to the pod.
                      properties:
                        cachingMode:
                          description: 'cachingMode is the Host Caching mode: None,
                            Read Only, Read Write.'
                          type: string
                        diskName:
                          description: diskName is the Name of the data disk in the
                            blob storage
                          type: string
                        diskURI:
                          description: diskURI is the URI of data disk in the blob
                            storage
                          type: string
                        fsType:
                          description: |-
                            fsType is Filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        kind:
                          description: 'kind expected values are Shared: multiple
                            blob disks per storage account  Dedicated: single blob
                            disk per storage account  Managed: azure managed data
                            disk (only in managed availability set). defaults to shared'
                          type: string
                        readOnly:
                          description: |-
                            readOnly Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                      required:
                      - diskName
                      - diskURI
                      type: object
                    azureFile:
                      description: azureFile represents an Azure File Service mount
                        on the host and bind mount to the pod.
                      properties:
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretName:
                          description: secretName is the  name of secret that contains
                            Azure Storage Account Name and Key
                          type: string
                        shareName:
                          description: shareName is the azure share Name
                          type: string
                      required:
                      - secretName
                      - shareName
                      type: object
                    cephfs:
                      description: cephFS represents a Ceph FS mount on the host that
                        shares a pod's lifetime
                      properties:
                        monitors:
                          description: |-
                            monitors is Required: Monitors is a collection of Ceph monitors
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          items:
                            type: string
                          type: array
                        path:
                          description: 'path is Optional: Used as the mounted root,
                            rather than the full Ceph tree, default is /'
                          type: string
                        readOnly:
                          description: |-
                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: boolean
                        secretFile:
                          description: |-
                            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: string
                        secretRef:
                          description: |-
                            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        user:
                          description: |-
                            user is optional: User is the rados user name, default is admin
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: string
                      required:
                      - monitors
                      type: object
                    cinder:
                      description: |-
                        cinder represents a cinder volume attached and mounted on kubelets host machine.
                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is optional: points to a secret object containing parameters used to connect
                            to OpenStack.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        volumeID:
                          description: |-
                            volumeID used to identify the volume in cinder.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: string
                      required:
                      - volumeID
                      type: object
                    configMap:
                      description: configMap represents a configMap that should populate
                        this volume
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items if unspecified, each key-value pair in the Data field of the referenced
                            ConfigMap will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the ConfigMap,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                        optional:
                          description: optional specify whether the ConfigMap or its
                            keys must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    csi:
                      description: csi (Container Storage Interface) represents ephemeral
                        storage that is handled by certain external CSI drivers (Beta
                        feature).
                      properties:
                        driver:
                          description: |-
                            driver is the name of the CSI driver that handles this volume.
                            Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: |-
                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                            If not provided, the empty value is passed to the associated CSI driver
                            which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: |-
                            nodePublishSecretRef is a reference to the secret object containing
                            sensitive information to pass to the CSI driver to complete the CSI
                            NodePublishVolume and NodeUnpublishVolume calls.
                            This field is optional, and  may be empty if no secret is required. If the
                            secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        readOnly:
                          description: |-
                            readOnly specifies a read-only configuration for the volume.
                            Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: |-
                            volumeAttributes stores driver-specific properties that are passed to the CSI
                            driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    downwardAPI:
                      description: downwardAPI represents downward API about the pod
                        that should populate this volume
                      properties:
                        defaultMode:
                          description: |-
                            Optional: mode bits to use on created files by default. Must be a
                            Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: Items is a list of downward API volume file
                          items:
                            description: DownwardAPIVolumeFile represents information
                              to create the file containing the pod field
                            properties:
                              fieldRef:
                                description: 'Required: Selects a field of the pod:
                                  only annotations, labels, name and namespace are
                                  supported.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              mode:
                                description: |-
                                  Optional: mode bits used to set permissions on this file, must be an octal value
                                  between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: 'Required: Path is  the relative path
                                  name of the file to be created. Must not be absolute
                                  or contain the ''..'' path. Must be utf-8 encoded.
                                  The first item of the relative path must not start
                                  with ''..'''
                                type: string
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - path
                            type: object
                          type: array
                      type: object
                    emptyDir:
                      description: |-
                        emptyDir represents a temporary directory that shares a pod's lifetime.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                      properties:
                        medium:
                          description: |-
                            medium represents what type of storage medium should back this directory.
                            The default is "" which means to use the node's default medium.
                            Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                            The size limit is also applicable for memory medium.
                            The maximum usage on memory medium EmptyDir would be the minimum value between
                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                            The default is nil which means that the limit is undefined.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    ephemeral:
                      description: |-
                        ephemeral represents a volume that is handled by a cluster storage driver.
                        The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                        and deleted when the pod is removed.


                        Use this if:
                        a) the volume is only needed while the pod runs,
                        b) features of normal volumes like restoring from snapshot or capacity
                           tracking are needed,
                        c) the storage driver is specified through a storage class, and
                        d) the storage driver supports dynamic volume provisioning through
                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                           information on the connection between this volume type
                           and PersistentVolumeClaim).


                        Use PersistentVolumeClaim or one of the vendor-specific
                        APIs for volumes that persist for longer than the lifecycle
                        of an individual pod.


                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                        be used that way - see the documentation of the driver for
                        more information.


                        A pod can use both types of ephemeral volumes and
                        persistent volumes at the same time.
                      properties:
                        volumeClaimTemplate:
                          description: |-
                            Will be used to create a stand-alone PVC to provision the volume.
                            The pod in which this EphemeralVolumeSource is embedded will be the
                            owner of the PVC, i.e. the PVC will be deleted together with the
                            pod.  The name of the PVC will be `<pod name>-<volume name>` where
                            `<volume name>` is the name from the `PodSpec.Volumes` array
                            entry. Pod validation will reject the pod if the concatenated name
                            is not valid for a PVC (for example, too long).


                            An existing PVC with that name that is not owned by the pod
                            will *not* be used for the pod to avoid using an unrelated
                            volume by mistake. Starting the pod is then blocked until
                            the unrelated PVC is removed. If such a pre-created PVC is
                            meant to be used by the pod, the PVC has to updated with an
                            owner reference to the pod once the pod exists. Normally
                            this should not be necessary, but it may be useful when
                            manually reconstructing a broken cluster.


                            This field is read-only and no changes will be made by Kubernetes
                            to the PVC after it has been created.


                            Required, must not be nil.
                          properties:
                            metadata:
                              description: |-
                                May contain labels and annotations that will be copied into the PVC
                                when creating it. No other fields are allowed and will be rejected during
                                validation.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: |-
                                The specification for the PersistentVolumeClaim. The entire content is
                                copied unchanged into the PVC that gets created from this
                                template. The same fields as in a PersistentVolumeClaim
                                are also valid here.
                              properties:
                                accessModes:
                                  description: |-
                                    accessModes contains the desired access modes the volume should have.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: |-
                                    dataSource field can be used to specify either:
                                    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim)
                                    If the provisioner or an external controller can support the specified data source,
                                    it will create a new volume based on the contents of the specified data source.
                                    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                    If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                  properties:
                                    apiGroup:
                                      description: |-
                                        APIGroup is the group for the resource being referenced.
                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                        For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                dataSourceRef:
                                  description: |-
                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                    volume is desired. This may be any object from a non-empty API group (non
                                    core object) or a PersistentVolumeClaim object.
                                    When this field is specified, volume binding will only succeed if the type of
                                    the specified object matches some installed volume populator or dynamic
                                    provisioner.
                                    This field will replace the functionality of the dataSource field and as such
                                    if both fields are non-empty, they must have the same value. For backwards
                                    compatibility, when namespace isn't specified in dataSourceRef,
                                    both fields (dataSource and dataSourceRef) will be set to the same
                                    value automatically if one of them is empty and the other is non-empty.
                                    When namespace is specified in dataSourceRef,
                                    dataSource isn't set to the same value and must be empty.
                                    There are three important differences between dataSource and dataSourceRef:
                                    * While dataSource only allows two specific types of objects, dataSourceRef
                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                      preserves all values, and generates an error if a disallowed value is
                                      specified.
                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                      in any namespaces.
                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  properties:
                                    apiGroup:
                                      description: |-
                                        APIGroup is the group for the resource being referenced.
                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                        For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of resource being referenced
                                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: |-
                                    resources represents the minimum resources the volume should have.
                                    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                    that are lower than previous value but must still be higher than capacity recorded in the
                                    status field of the claim.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                selector:
                                  description: selector is a label query over volumes
                                    to consider for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                storageClassName:
                                  description: |-
                                    storageClassName is the name of the StorageClass required by the claim.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                  type: string
                                volumeAttributesClassName:
                                  description: |-
                                    volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                    If specified, the CSI driver will create or update the volume with the attributes defined
                                    in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                    it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                    will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                    If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                    will be set by the persistentvolume controller if it exists.
                                    If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                    set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                    exists.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                    (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                  type: string
                                volumeMode:
                                  description: |-
                                    volumeMode defines what type of volume is required by the claim.
                                    Value of Filesystem is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: volumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          required:
                          - spec
                          type: object
                      type: object
                    fc:
                      description: fc represents a Fibre Channel resource that is
                        attached to a kubelet's host machine and then exposed to the
                        pod.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        lun:
                          description: 'lun is Optional: FC target lun number'
                          format: int32
                          type: integer
                        readOnly:
                          description: |-
                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        targetWWNs:
                          description: 'targetWWNs is Optional: FC target worldwide
                            names (WWNs)'
                          items:
                            type: string
                          type: array
                        wwids:
                          description: |-
                            wwids Optional: FC volume world wide identifiers (wwids)
                            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                          items:
                            type: string
                          type: array
                      type: object
                    flexVolume:
                      description: |-
                        flexVolume represents a generic volume resource that is
                        provisioned/attached using an exec based plugin.
                      properties:
                        driver:
                          description: driver is the name of the driver to use for
                            this volume.
                          type: string
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: 'options is Optional: this field holds extra
                            command options if any.'
                          type: object
                        readOnly:
                          description: |-
                            readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is Optional: secretRef is reference to the secret object containing
                            sensitive information to pass to the plugin scripts. This may be
                            empty if no secret object is specified. If the secret object
                            contains more than one secret, all secrets are passed to the plugin
                            scripts.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - driver
                      type: object
                    flocker:
                      description: flocker represents a Flocker volume attached to
                        a kubelet's host machine. This depends on the Flocker control
                        service being running
                      properties:
                        datasetName:
                          description: |-
                            datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                            should be considered as deprecated
                          type: string
                        datasetUUID:
                          description: datasetUUID is the UUID of the dataset. This
                            is unique identifier of a Flocker dataset
                          type: string
                      type: object
                    gcePersistentDisk:
                      description: |-
                        gcePersistentDisk represents a GCE Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                      properties:
                        fsType:
                          description: |-
                            fsType is filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        partition:
                          description: |-
                            partition is the partition in the volume that you want to mount.
                            If omitted, the default is to mount by volume name.
                            Examples: For volume /dev/sda1, you specify the partition as "1".
                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          format: int32
                          type: integer
                        pdName:
                          description: |-
                            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          type: boolean
                      required:
                      - pdName
                      type: object
                    gitRepo:
                      description: |-
                        gitRepo represents a git repository at a particular revision.
                        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                        EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                        into the Pod's container.
                      properties:
                        directory:
                          description: |-
                            directory is the target directory name.
                            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                            git repository.  Otherwise, if specified, the volume will contain the git repository in
                            the subdirectory with the given name.
                          type: string
                        repository:
                          description: repository is the URL
                          type: string
                        revision:
                          description: revision is the commit hash for the specified
                            revision.
                          type: string
                      required:
                      - repository
                      type: object
                    glusterfs:
                      description: |-
                        glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                        More info: https://examples.k8s.io/volumes/glusterfs/README.md
                      properties:
                        endpoints:
                          description: |-
                            endpoints is the endpoint name that details Glusterfs topology.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: string
                        path:
                          description: |-
                            path is the Glusterfs volume path.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                            Defaults to false.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: boolean
                      required:
                      - endpoints
                      - path
                      type: object
                    hostPath:
                      description: |-
                        hostPath represents a pre-existing file or directory on the host
                        machine that is directly exposed to the container. This is generally
                        used for system agents or other privileged things that are allowed
                        to see the host machine. Most containers will NOT need this.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        ---
                        TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
                        mount host directories as read/write.
                      properties:
                        path:
                          description: |-
                            path of the directory on the host.
                            If the path is a symlink, it will follow the link to the real path.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          type: string
                        type:
                          description: |-
                            type for HostPath Volume
                            Defaults to ""
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          type: string
                      required:
                      - path
                      type: object
                    iscsi:
                      description: |-
                        iscsi represents an ISCSI Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://examples.k8s.io/volumes/iscsi/README.md
                      properties:
                        chapAuthDiscovery:
                          description: chapAuthDiscovery defines whether support iSCSI
                            Discovery CHAP authentication
                          type: boolean
                        chapAuthSession:
                          description: chapAuthSession defines whether support iSCSI
                            Session CHAP authentication
                          type: boolean
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        initiatorName:
                          description: |-
                            initiatorName is the custom iSCSI Initiator Name.
                            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                            <target portal>:<volume name> will be created for the connection.
                          type: string
                        iqn:
                          description: iqn is the target iSCSI Qualified Name.
                          type: string
                        iscsiInterface:
                          description: |-
                            iscsiInterface is the interface Name that uses an iSCSI transport.
                            Defaults to 'default' (tcp).
                          type: string
                        lun:
                          description: lun represents iSCSI Target Lun number.
                          format: int32
                          type: integer
                        portals:
                          description: |-
                            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                            is other than default (typically TCP ports 860 and 3260).
                          items:
                            type: string
                          type: array
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                          type: boolean
                        secretRef:
                          description: secretRef is the CHAP Secret for iSCSI target
                            and initiator authentication
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        targetPortal:
                          description: |-
                            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                            is other than default (typically TCP ports 860 and 3260).
                          type: string
                      required:
                      - iqn
                      - lun
                      - targetPortal
                      type: object
                    name:
                      description: |-
                        name of the volume.
                        Must be a DNS_LABEL and unique within the pod.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    nfs:
                      description: |-
                        nfs represents an NFS mount on the host that shares a pod's lifetime
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                      properties:
                        path:
                          description: |-
                            path that is exported by the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the NFS export to be mounted with read-only permissions.
                            Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: boolean
                        server:
                          description: |-
                            server is the hostname or IP address of the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                      required:
                      - path
                      - server
                      type: object
                    persistentVolumeClaim:
                      description: |-
                        persistentVolumeClaimVolumeSource represents a reference to a
                        PersistentVolumeClaim in the same namespace.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        claimName:
                          description: |-
                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          type: string
                        readOnly:
                          description: |-
                            readOnly Will force the ReadOnly setting in VolumeMounts.
                            Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                    photonPersistentDisk:
                      description: photonPersistentDisk represents a PhotonController
                        persistent disk attached and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        pdID:
                          description: pdID is the ID that identifies Photon Controller
                            persistent disk
                          type: string
                      required:
                      - pdID
                      type: object
                    portworxVolume:
                      description: portworxVolume represents a portworx volume attached
                        and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fSType represents the filesystem type to mount
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        volumeID:
                          description: volumeID uniquely identifies a Portworx volume
                          type: string
                      required:
                      - volumeID
                      type: object
                    projected:
                      description: projected items for all in one resources secrets,
                        configmaps, and downward API
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode are the mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        sources:
                          description: sources is the list of volume projections
                          items:
                            description: Projection that may be projected along with
                              other supported volume types
                            properties:
                              clusterTrustBundle:
                                description: |-
                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                  of ClusterTrustBundle objects in an auto-updating file.


                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.


                                  ClusterTrustBundle objects can either be selected by name, or by the
                                  combination of signer name and a label selector.


                                  Kubelet performs aggressive normalization of the PEM contents written
                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                  comments and block headers are stripped.  Certificates are deduplicated.
                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                  may change the order over time.
                                properties:
                                  labelSelector:
                                    description: |-
                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                      everything".
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  name:
                                    description: |-
                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                      with signerName and labelSelector.
                                    type: string
                                  optional:
                                    description: |-
                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                      allowed not to exist.  If using signerName, then the combination of
                                      signerName and labelSelector is allowed to match zero
                                      ClusterTrustBundles.
                                    type: boolean
                                  path:
                                    description: Relative path from the volume root
                                      to write the bundle.
                                    type: string
                                  signerName:
                                    description: |-
                                      Select all ClusterTrustBundles that match this signer name.
                                      Mutually-exclusive with name.  The contents of all selected
                                      ClusterTrustBundles will be unified and deduplicated.
                                    type: string
                                required:
                                - path
                                type: object
                              configMap:
                                description: configMap information about the configMap
                                  data to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      ConfigMap will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the ConfigMap,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: optional specify whether the ConfigMap
                                      or its keys must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              downwardAPI:
                                description: downwardAPI information about the downwardAPI
                                  data to project
                                properties:
                                  items:
                                    description: Items is a list of DownwardAPIVolume
                                      file
                                    items:
                                      description: DownwardAPIVolumeFile represents
                                        information to create the file containing
                                        the pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field
                                            of the pod: only annotations, labels,
                                            name and namespace are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        mode:
                                          description: |-
                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative
                                            path name of the file to be created. Must
                                            not be absolute or contain the ''..''
                                            path. Must be utf-8 encoded. The first
                                            item of the relative path must not start
                                            with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - path
                                      type: object
                                    type: array
                                type: object
                              secret:
                                description: secret information about the secret data
                                  to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      Secret will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the Secret,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: optional field specify whether the
                                      Secret or its key must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceAccountToken:
                                description: serviceAccountToken is information about
                                  the serviceAccountToken data to project
                                properties:
                                  audience:
                                    description: |-
                                      audience is the intended audience of the token. A recipient of a token
                                      must identify itself with an identifier specified in the audience of the
                                      token, and otherwise should reject the token. The audience defaults to the
                                      identifier of the apiserver.
                                    type: string
                                  expirationSeconds:
                                    description: |-
                                      expirationSeconds is the requested duration of validity of the service
                                      account token. As the token approaches expiration, the kubelet volume
                                      plugin will proactively rotate the service account token. The kubelet will
                                      start trying to rotate the token if the token is older than 80 percent of
                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                      and must be at least 10 minutes.
                                    format: int64
                                    type: integer
                                  path:
                                    description: |-
                                      path is the path relative to the mount point of the file to project the
                                      token into.
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                          type: array
                      type: object
                    quobyte:
                      description: quobyte represents a Quobyte mount on the host
                        that shares a pod's lifetime
                      properties:
                        group:
                          description: |-
                            group to map volume access to
                            Default is no group
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                            Defaults to false.
                          type: boolean
                        registry:
                          description: |-
                            registry represents a single or multiple Quobyte Registry services
                            specified as a string as host:port pair (multiple entries are separated with commas)
                            which acts as the central registry for volumes
                          type: string
                        tenant:
                          description: |-
                            tenant owning the given Quobyte volume in the Backend
                            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                          type: string
                        user:
                          description: |-
                            user to map volume access to
                            Defaults to serivceaccount user
                          type: string
                        volume:
                          description: volume is a string that references an already
                            created Quobyte volume by name.
                          type: string
                      required:
                      - registry
                      - volume
                      type: object
                    rbd:
                      description: |-
                        rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                        More info: https://examples.k8s.io/volumes/rbd/README.md
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        image:
                          description: |-
                            image is the rados image name.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        keyring:
                          description: |-
                            keyring is the path to key ring for RBDUser.
                            Default is /etc/ceph/keyring.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        monitors:
                          description: |-
                            monitors is a collection of Ceph monitors.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          items:
                            type: string
                          type: array
                        pool:
                          description: |-
                            pool is the rados pool name.
                            Default is rbd.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is name of the authentication secret for RBDUser. If provided
                            overrides keyring.
                            Default is nil.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        user:
                          description: |-
                            user is the rados user name.
                            Default is admin.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                      required:
                      - image
                      - monitors
                      type: object
                    scaleIO:
                      description: scaleIO represents a ScaleIO persistent volume
                        attached and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs".
                            Default is "xfs".
                          type: string
                        gateway:
                          description: gateway is the host address of the ScaleIO
                            API Gateway.
                          type: string
                        protectionDomain:
                          description: protectionDomain is the name of the ScaleIO
                            Protection Domain for the configured storage.
                          type: string
                        readOnly:
                          description: |-
                            readOnly Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef references to the secret for ScaleIO user and other
                            sensitive information. If this is not provided, Login operation will fail.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        sslEnabled:
                          description: sslEnabled Flag enable/disable SSL communication
                            with Gateway, default false
                          type: boolean
                        storageMode:
                          description: |-
                            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                            Default is ThinProvisioned.
                          type: string
                        storagePool:
                          description: storagePool is the ScaleIO Storage Pool associated
                            with the protection domain.
                          type: string
                        system:
                          description: system is the name of the storage system as
                            configured in ScaleIO.
                          type: string
                        volumeName:
                          description: |-
                            volumeName is the name of a volume already created in the ScaleIO system
                            that is associated with this volume source.
                          type: string
                      required:
                      - gateway
                      - secretRef
                      - system
                      type: object
                    secret:
                      description: |-
                        secret represents a secret that should populate this volume.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values
                            for mode bits. Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items If unspecified, each key-value pair in the Data field of the referenced
                            Secret will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the Secret,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        optional:
                          description: optional field specify whether the Secret or
                            its keys must be defined
                          type: boolean
                        secretName:
                          description: |-
                            secretName is the name of the secret in the pod's namespace to use.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          type: string
                      type: object
                    storageos:
                      description: storageOS represents a StorageOS volume attached
                        and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef specifies the secret to use for obtaining the StorageOS API
                            credentials.  If not specified, default values will be attempted.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        volumeName:
                          description: |-
                            volumeName is the human-readable name of the StorageOS volume.  Volume
                            names are only unique within a namespace.
                          type: string
                        volumeNamespace:
                          description: |-
                            volumeNamespace specifies the scope of the volume within StorageOS.  If no
                            namespace is specified then the Pod's namespace will be used.  This allows the
                            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                            Set VolumeName to any name to override the default behaviour.
                            Set to "default" if you are not using namespaces within StorageOS.
                            Namespaces that do not pre-exist within StorageOS will be created.
                          type: string
                      type: object
                    vsphereVolume:
                      description: vsphereVolume represents a vSphere volume attached
                        and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fsType is filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        storagePolicyID:
                          description: storagePolicyID is the storage Policy Based
                            Management (SPBM) profile ID associated with the StoragePolicyName.
                          type: string
                        storagePolicyName:
                          description: storagePolicyName is the storage Policy Based
                            Management (SPBM) profile name.
                          type: string
                        volumePath:
                          description: volumePath is the path that identifies vSphere
                            volume vmdk
                          type: string
                      required:
                      - volumePath
                      type: object
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ControllerConfig
    listKind: ControllerConfigList
    plural: controllerconfigs
    singular: controllerconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: defaultbranches.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1133"
  uid: 99d7f5df-730a-4298-9bbf-70d2b33dc3f6
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: DefaultBranch
    listKind: DefaultBranchList
    plural: defaultbranches
    singular: defaultbranch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DefaultBranch is the Schema for the DefaultBranchs API. Provides
          a GitHub branch default for a given repository.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DefaultBranchSpec defines the desired state of DefaultBranch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DefaultBranchStatus defines the observed state of DefaultBranch.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: DefaultBranch
    listKind: DefaultBranchList
    plural: defaultbranches
    singular: defaultbranch
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: deploykeys.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1109"
  uid: 8507c770-4ff2-4436-b9da-8f5c71011ae7
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: DeployKey
    listKind: DeployKeyList
    plural: deploykeys
    singular: deploykey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeployKey is the Schema for the DeployKeys API. Provides a GitHub
          repository deploy key resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeployKeySpec defines the desired state of DeployKey
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  keySecretRef:
                    description: |-
                      A SSH key.
                      A SSH key.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.keySecretRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.keySecretRef)'
            - message: spec.forProvider.title is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.title)
                || (has(self.initProvider) && has(self.initProvider.title))'
          status:
            description: DeployKeyStatus defines the observed state of DeployKey.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: DeployKey
    listKind: DeployKeyList
    plural: deploykeys
    singular: deploykey
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: deploymentruntimeconfigs.pkg.crossplane.io
  resourceVersion: "605"
  uid: aee985af-5ae8-4d7c-8e4b-e94f58f541bf
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    kind: DeploymentRuntimeConfig
    listKind: DeploymentRuntimeConfigList
    plural: deploymentruntimeconfigs
    singular: deploymentruntimeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          The DeploymentRuntimeConfig provides settings for the Kubernetes Deployment
          of a Provider or composition function package.


          Read the Crossplane documentation for
          [more information about DeploymentRuntimeConfigs](https://docs.crossplane.io/latest/concepts/providers/#runtime-configuration).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              DeploymentRuntimeConfigSpec specifies the configuration for a packaged controller.
              Values provided will override package manager defaults. Labels and
              annotations are passed to both the controller Deployment and ServiceAccount.
            properties:
              deploymentTemplate:
                description: DeploymentTemplate is the template for the Deployment
                  object.
                properties:
                  metadata:
                    description: Metadata contains the configurable metadata fields
                      for the Deployment.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that
                          may be set by external tools to store and retrieve arbitrary metadata.
                          They are not queryable and should be preserved when modifying objects.
                          More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. Labels will be merged with internal labels
                          used by crossplane, and labels with a crossplane.io key might be
                          overwritten.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                        type: object
                      name:
                        description: Name is the name of the object.
                        type: string
                    type: object
                  spec:
                    description: Spec contains the configurable spec fields for the
                      Deployment object.
                    properties:
                      minReadySeconds:
                        description: |-
                          Minimum number of seconds for which a newly created pod should be ready
                          without any of its container crashing, for it to be considered available.
                          Defaults to 0 (pod will be considered available as soon as it is ready)
                        format: int32
                        type: integer
                      paused:
                        description: Indicates that the deployment is paused.
                        type: boolean
                      progressDeadlineSeconds:
                        description: |-
                          The maximum time in seconds for a deployment to make progress before it
                          is considered to be failed. The deployment controller will continue to
                          process failed deployments and a condition with a ProgressDeadlineExceeded
                          reason will be surfaced in the deployment status. Note that progress will
                          not be estimated during the time a deployment is paused. Defaults to 600s.
                        format: int32
                        type: integer
                      replicas:
                        description: |-
                          Number of desired pods. This is a pointer to distinguish between explicit
                          zero and not specified. Defaults to 1.
                        format: int32
                        type: integer
                      revisionHistoryLimit:
                        description: |-
                          The number of old ReplicaSets to retain to allow rollback.
                          This is a pointer to distinguish between explicit zero and not specified.
                          Defaults to 10.
                        format: int32
                        type: integer
                      selector:
                        description: |-
                          Label selector for pods. Existing ReplicaSets whose pods are
                          selected by this will be the ones affected by this deployment.
                          It must match the pod template's labels.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      strategy:
                        description: The deployment strategy to use to replace existing
                          pods with new ones.
                        properties:
                          rollingUpdate:
                            description: |-
                              Rolling update config params. Present only if DeploymentStrategyType =
                              RollingUpdate.
                              ---
                              TODO: Update this to follow our convention for oneOf, whatever we decide it
                              to be.
                            properties:
                              maxSurge:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The maximum number of pods that can be scheduled above the desired number of
                                  pods.
                                  Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                  This can not be 0 if MaxUnavailable is 0.
                                  Absolute number is calculated from percentage by rounding up.
                                  Defaults to 25%.
                                  Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                                  the rolling update starts, such that the total number of old and new pods do not exceed
                                  130% of desired pods. Once old pods have been killed,
                                  new ReplicaSet can be scaled up further, ensuring that total number of pods running
                                  at any time during the update is at most 130% of desired pods.
                                x-kubernetes-int-or-string: true
                              maxUnavailable:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The maximum number of pods that can be unavailable during the update.
                                  Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                  Absolute number is calculated from percentage by rounding down.
                                  This can not be 0 if MaxSurge is 0.
                                  Defaults to 25%.
                                  Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                                  immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                                  can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                                  that the total number of pods available at all times during the update is at
                                  least 70% of desired pods.
                                x-kubernetes-int-or-string: true
                            type: object
                          type:
                            description: Type of deployment. Can be "Recreate" or
                              "RollingUpdate". Default is RollingUpdate.
                            type: string
                        type: object
                      template:
                        description: |-
                          Template describes the pods that will be created.
                          The only allowed template.spec.restartPolicy value is "Always".
                        properties:
                          metadata:
                            description: |-
                              Standard object's metadata.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          spec:
                            description: |-
                              Specification of the desired behavior of the pod.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                            properties:
                              activeDeadlineSeconds:
                                description: |-
                                  Optional duration in seconds the pod may be active on the node relative to
                                  StartTime before the system will actively try to mark it failed and kill associated containers.
                                  Value must be a positive integer.
                                format: int64
                                type: integer
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: |-
                                            An empty preferred scheduling term matches all objects with implicit weight 0
                                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to an update), the system
                                          may or may not try to eventually evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: |-
                                                A null or empty node selector term matches no objects. The requirements of
                                                them are ANDed.
                                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the anti-affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the anti-affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the anti-affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containers:
                                description: |-
                                  List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod.
                                  Cannot be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              dnsConfig:
                                description: |-
                                  Specifies the DNS parameters of a pod.
                                  Parameters specified here will be merged to the generated DNS
                                  configuration based on DNSPolicy.
                                properties:
                                  nameservers:
                                    description: |-
                                      A list of DNS name server IP addresses.
                                      This will be appended to the base nameservers generated from DNSPolicy.
                                      Duplicated nameservers will be removed.
                                    items:
                                      type: string
                                    type: array
                                  options:
                                    description: |-
                                      A list of DNS resolver options.
                                      This will be merged with the base options generated from DNSPolicy.
                                      Duplicated entries will be removed. Resolution options given in Options
                                      will override those that appear in the base DNSPolicy.
                                    items:
                                      description: PodDNSConfigOption defines DNS
                                        resolver options of a pod.
                                      properties:
                                        name:
                                          description: Required.
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  searches:
                                    description: |-
                                      A list of DNS search domains for host-name lookup.
                                      This will be appended to the base search paths generated from DNSPolicy.
                                      Duplicated search paths will be removed.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              dnsPolicy:
                                description: |-
                                  Set DNS policy for the pod.
                                  Defaults to "ClusterFirst".
                                  Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                  DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                  To have DNS options set along with hostNetwork, you have to specify DNS policy
                                  explicitly to 'ClusterFirstWithHostNet'.
                                type: string
                              enableServiceLinks:
                                description: |-
                                  EnableServiceLinks indicates whether information about services should be injected into pod's
                                  environment variables, matching the syntax of Docker links.
                                  Optional: Defaults to true.
                                type: boolean
                              ephemeralContainers:
                                description: |-
                                  List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                                  pod to perform user-initiated actions such as debugging. This list cannot be specified when
                                  creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                                  ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                                items:
                                  description: |-
                                    An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                    user-initiated activities such as debugging. Ephemeral containers have no resource or
                                    scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                    removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                    Pod to exceed its resource allocation.


                                    To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                    Pod. Ephemeral containers may not be removed or restarted.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: Lifecycle is not allowed for ephemeral
                                        containers.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the ephemeral container specified as a DNS_LABEL.
                                        This name must be unique among all containers, init containers and ephemeral containers.
                                      type: string
                                    ports:
                                      description: Ports are not allowed for ephemeral
                                        containers.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                        already allocated to the pod.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        Restart policy for the container to manage the restart behavior of each
                                        container within a pod.
                                        This may only be set for init containers. You cannot set this field on
                                        ephemeral containers.
                                      type: string
                                    securityContext:
                                      description: |-
                                        Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    targetContainerName:
                                      description: |-
                                        If set, the name of the container from PodSpec that this ephemeral container targets.
                                        The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                        If not set then the ephemeral container uses the namespaces configured in the Pod spec.


                                        The container runtime must implement support for this feature. If the runtime does not
                                        support namespace targeting then the result of setting this field is undefined.
                                      type: string
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              hostAliases:
                                description: |-
                                  HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                                  file if specified. This is only valid for non-hostNetwork pods.
                                items:
                                  description: |-
                                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                    pod's hosts file.
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      items:
                                        type: string
                                      type: array
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                  type: object
                                type: array
                              hostIPC:
                                description: |-
                                  Use the host's ipc namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostNetwork:
                                description: |-
                                  Host networking requested for this pod. Use the host's network namespace.
                                  If this option is set, the ports that will be used must be specified.
                                  Default to false.
                                type: boolean
                              hostPID:
                                description: |-
                                  Use the host's pid namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostUsers:
                                description: |-
                                  Use the host's user namespace.
                                  Optional: Default to true.
                                  If set to true or not present, the pod will be run in the host user namespace, useful
                                  for when the pod needs a feature only available to the host user namespace, such as
                                  loading a kernel module with CAP_SYS_MODULE.
                                  When set to false, a new userns is created for the pod. Setting false is useful for
                                  mitigating container breakout vulnerabilities even allowing users to run their
                                  containers as root without actually having root privileges on the host.
                                  This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                                type: boolean
                              hostname:
                                description: |-
                                  Specifies the hostname of the Pod
                                  If not specified, the pod's hostname will be set to a system-defined value.
                                type: string
                              imagePullSecrets:
                                description: |-
                                  ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual puller implementations for them to use.
                                  More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                                items:
                                  description: |-
                                    LocalObjectReference contains enough information to let you locate the
                                    referenced object inside the same namespace.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: |-
                                  List of initialization containers belonging to the pod.
                                  Init containers are executed in order prior to containers being started. If any
                                  init container fails, the pod is considered to have failed and is handled according
                                  to its restartPolicy. The name for an init container or normal container must be
                                  unique among all containers.
                                  Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                                  The resourceRequirements of an init container are taken into account during scheduling
                                  by finding the highest request/limit for each resource type, and then using the max of
                                  of that value or the sum of the normal containers. Limits are applied to init containers
                                  in a similar fashion.
                                  Init containers cannot currently be added or removed.
                                  Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents the duration
                                                that the container should sleep before
                                                being terminated.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for the backward compatibility. There are no validation of this field and
                                                lifecycle hooks will fail in runtime when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              nodeName:
                                description: |-
                                  NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
                                  the scheduler simply schedules this pod onto that node, assuming that it fits resource
                                  requirements.
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  NodeSelector is a selector which must be true for the pod to fit on a node.
                                  Selector which must match a node's labels for the pod to be scheduled on that node.
                                  More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                type: object
                                x-kubernetes-map-type: atomic
                              os:
                                description: |-
                                  Specifies the OS of the containers in the pod.
                                  Some pod and container fields are restricted if this is set.


                                  If the OS field is set to linux, the following fields must be unset:
                                  -securityContext.windowsOptions


                                  If the OS field is set to windows, following fields must be unset:
                                  - spec.hostPID
                                  - spec.hostIPC
                                  - spec.hostUsers
                                  - spec.securityContext.seLinuxOptions
                                  - spec.securityContext.seccompProfile
                                  - spec.securityContext.fsGroup
                                  - spec.securityContext.fsGroupChangePolicy
                                  - spec.securityContext.sysctls
                                  - spec.shareProcessNamespace
                                  - spec.securityContext.runAsUser
                                  - spec.securityContext.runAsGroup
                                  - spec.securityContext.supplementalGroups
                                  - spec.containers[*].securityContext.seLinuxOptions
                                  - spec.containers[*].securityContext.seccompProfile
                                  - spec.containers[*].securityContext.capabilities
                                  - spec.containers[*].securityContext.readOnlyRootFilesystem
                                  - spec.containers[*].securityContext.privileged
                                  - spec.containers[*].securityContext.allowPrivilegeEscalation
                                  - spec.containers[*].securityContext.procMount
                                  - spec.containers[*].securityContext.runAsUser
                                  - spec.containers[*].securityContext.runAsGroup
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the operating system. The currently supported values are linux and windows.
                                      Additional value may be defined in future and can be one of:
                                      https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                      Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                    type: string
                                required:
                                - name
                                type: object
                              overhead:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                                  This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                                  the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                                  The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                                  set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                                  defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                                type: object
                              preemptionPolicy:
                                description: |-
                                  PreemptionPolicy is the Policy for preempting pods with lower priority.
                                  One of Never, PreemptLowerPriority.
                                  Defaults to PreemptLowerPriority if unset.
                                type: string
                              priority:
                                description: |-
                                  The priority value. Various system components use this field to find the
                                  priority of the pod. When Priority Admission Controller is enabled, it
                                  prevents users from setting this field. The admission controller populates
                                  this field from PriorityClassName.
                                  The higher the value, the higher the priority.
                                format: int32
                                type: integer
                              priorityClassName:
                                description: |-
                                  If specified, indicates the pod's priority. "system-node-critical" and
                                  "system-cluster-critical" are two special keywords which indicate the
                                  highest priorities with the former being the highest priority. Any other
                                  name must be defined by creating a PriorityClass object with that name.
                                  If not specified, the pod priority will be default or zero if there is no
                                  default.
                                type: string
                              readinessGates:
                                description: |-
                                  If specified, all readiness gates will be evaluated for pod readiness.
                                  A pod is ready when all its containers are ready AND
                                  all conditions specified in the readiness gates have status equal to "True"
                                  More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                                items:
                                  description: PodReadinessGate contains the reference
                                    to a pod condition
                                  properties:
                                    conditionType:
                                      description: ConditionType refers to a condition
                                        in the pod's condition list with matching
                                        type.
                                      type: string
                                  required:
                                  - conditionType
                                  type: object
                                type: array
                              resourceClaims:
                                description: |-
                                  ResourceClaims defines which ResourceClaims must be allocated
                                  and reserved before the Pod is allowed to start. The resources
                                  will be made available to those containers which consume them
                                  by name.


                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.


                                  This field is immutable.
                                items:
                                  description: |-
                                    PodResourceClaim references exactly one ResourceClaim through a ClaimSource.
                                    It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                    Containers that need access to the ResourceClaim reference it with this name.
                                  properties:
                                    name:
                                      description: |-
                                        Name uniquely identifies this resource claim inside the pod.
                                        This must be a DNS_LABEL.
                                      type: string
                                    source:
                                      description: Source describes where to find
                                        the ResourceClaim.
                                      properties:
                                        resourceClaimName:
                                          description: |-
                                            ResourceClaimName is the name of a ResourceClaim object in the same
                                            namespace as this pod.
                                          type: string
                                        resourceClaimTemplateName:
                                          description: |-
                                            ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                            object in the same namespace as this pod.


                                            The template will be used to create a new ResourceClaim, which will
                                            be bound to this pod. When this pod is deleted, the ResourceClaim
                                            will also be deleted. The pod name and resource name, along with a
                                            generated component, will be used to form a unique name for the
                                            ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.


                                            This field is immutable and no changes will be made to the
                                            corresponding ResourceClaim by the control plane after creating the
                                            ResourceClaim.
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              restartPolicy:
                                description: |-
                                  Restart policy for all containers within the pod.
                                  One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                                  Default to Always.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                                type: string
                              runtimeClassName:
                                description: |-
                                  RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                                  to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                                  If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                                  empty definition that uses the default runtime handler.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                                type: string
                              schedulerName:
                                description: |-
                                  If specified, the pod will be dispatched by specified scheduler.
                                  If not specified, the pod will be dispatched by default scheduler.
                                type: string
                              schedulingGates:
                                description: |-
                                  SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                                  If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                                  scheduler will not attempt to schedule the pod.


                                  SchedulingGates can only be set at pod creation time, and be removed only afterwards.


                                  This is a beta feature enabled by the PodSchedulingReadiness feature gate.
                                items:
                                  description: PodSchedulingGate is associated to
                                    a Pod to guard its scheduling.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the scheduling gate.
                                        Each scheduling gate must have a unique name field.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              securityContext:
                                description: |-
                                  SecurityContext holds pod-level security attributes and common container settings.
                                  Optional: Defaults to empty.  See type description for default values of each field.
                                properties:
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod.
                                      Some volume types allow the Kubelet to change the ownership of that volume
                                      to be owned by the pod:


                                      1. The owning GID will be the FSGroup
                                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                      3. The permission bits are OR'd with rw-rw----


                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: |-
                                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                      before being exposed inside Pod. This field will only apply to
                                      volume types which support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types such as: secret, configmaps
                                      and emptydir.
                                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to all containers.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                      takes precedence for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:


                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: |-
                                      A list of groups applied to the first process run in each container, in addition
                                      to the container's primary GID, the fsGroup (if specified), and group memberships
                                      defined in the container image for the uid of the container process. If unspecified,
                                      no additional groups are added to any container. Note that group memberships
                                      defined in the container image for the uid of the container process are still effective,
                                      even if they are not included in this list.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: |-
                                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail to launch.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccount:
                                description: |-
                                  DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
                                  Deprecated: Use serviceAccountName instead.
                                type: string
                              serviceAccountName:
                                description: |-
                                  ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                type: string
                              setHostnameAsFQDN:
                                description: |-
                                  If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                                  In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                                  In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                                  If a pod does not have FQDN, this has no effect.
                                  Default to false.
                                type: boolean
                              shareProcessNamespace:
                                description: |-
                                  Share a single process namespace between all of the containers in a pod.
                                  When this is set containers will be able to view and signal processes from other containers
                                  in the same pod, and the first process in each container will not be assigned PID 1.
                                  HostPID and ShareProcessNamespace cannot both be set.
                                  Optional: Default to false.
                                type: boolean
                              subdomain:
                                description: |-
                                  If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                  If not specified, the pod will not have a domainname at all.
                                type: string
                              terminationGracePeriodSeconds:
                                description: |-
                                  Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                                  Value must be non-negative integer. The value zero indicates stop immediately via
                                  the kill signal (no opportunity to shut down).
                                  If this value is nil, the default grace period will be used instead.
                                  The grace period is the duration in seconds after the processes running in the pod are sent
                                  a termination signal and the time when the processes are forcibly halted with a kill signal.
                                  Set this value longer than the expected cleanup time for your process.
                                  Defaults to 30 seconds.
                                format: int64
                                type: integer
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: |-
                                    The pod this Toleration is attached to tolerates any taint that matches
                                    the triple <key,value,effect> using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: |-
                                        Effect indicates the taint effect to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: |-
                                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                      type: string
                                    operator:
                                      description: |-
                                        Operator represents a key's relationship to the value.
                                        Valid operators are Exists and Equal. Defaults to Equal.
                                        Exists is equivalent to wildcard for value, so that a pod can
                                        tolerate all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: |-
                                        TolerationSeconds represents the period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                                        negative values will be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: |-
                                        Value is the taint value the toleration matches to.
                                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                              topologySpreadConstraints:
                                description: |-
                                  TopologySpreadConstraints describes how a group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods in a way which abides by the constraints.
                                  All topologySpreadConstraints are ANDed.
                                items:
                                  description: TopologySpreadConstraint specifies
                                    how to spread matching pods among the given topology.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        LabelSelector is used to find matching pods.
                                        Pods that match this label selector are counted to determine the number of pods
                                        in their corresponding topology domain.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select the pods over which
                                        spreading will be calculated. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are ANDed with labelSelector
                                        to select the group of existing pods over which spreading will be calculated
                                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        Keys that don't exist in the incoming pod labels will
                                        be ignored. A null or empty list means only match against labelSelector.


                                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    maxSkew:
                                      description: |-
                                        MaxSkew describes the degree to which pods may be unevenly distributed.
                                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                        between the number of matching pods in the target topology and the global minimum.
                                        The global minimum is the minimum number of matching pods in an eligible domain
                                        or zero if the number of eligible domains is less than MinDomains.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 2/2/1:
                                        In this case, the global minimum is 1.
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |   P   |
                                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                        violate MaxSkew(1).
                                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                        to topologies that satisfy it.
                                        It's a required field. Default value is 1 and 0 is not allowed.
                                      format: int32
                                      type: integer
                                    minDomains:
                                      description: |-
                                        MinDomains indicates a minimum number of eligible domains.
                                        When the number of eligible domains with matching topology keys is less than minDomains,
                                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                        this value has no effect on scheduling.
                                        As a result, when the number of eligible domains is less than minDomains,
                                        scheduler won't schedule more than maxSkew Pods to those domains.
                                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                        Valid values are integers greater than 0.
                                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.


                                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                        labelSelector spread as 2/2/2:
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |  P P  |
                                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                        In this situation, new pod with the same labelSelector cannot be scheduled,
                                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                        it will violate MaxSkew.


                                        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
                                      format: int32
                                      type: integer
                                    nodeAffinityPolicy:
                                      description: |-
                                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                        when calculating pod topology spread skew. Options are:
                                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.


                                        If this value is nil, the behavior is equivalent to the Honor policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    nodeTaintsPolicy:
                                      description: |-
                                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                                        pod topology spread skew. Options are:
                                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                        has a toleration, are included.
                                        - Ignore: node taints are ignored. All nodes are included.


                                        If this value is nil, the behavior is equivalent to the Ignore policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    topologyKey:
                                      description: |-
                                        TopologyKey is the key of node labels. Nodes that have a label with this key
                                        and identical values are considered to be in the same topology.
                                        We consider each <key, value> as a "bucket", and try to put balanced number
                                        of pods into each bucket.
                                        We define a domain as a particular instance of a topology.
                                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                        nodeAffinityPolicy and nodeTaintsPolicy.
                                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                        It's a required field.
                                      type: string
                                    whenUnsatisfiable:
                                      description: |-
                                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                        the spread constraint.
                                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                          but giving higher precedence to topologies that would help reduce the
                                          skew.
                                        A constraint is considered "Unsatisfiable" for an incoming pod
                                        if and only if every possible node assignment for that pod would violate
                                        "MaxSkew" on some topology.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 3/1/1:
                                        | zone1 | zone2 | zone3 |
                                        | P P P |   P   |   P   |
                                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                        won't make it *more* imbalanced.
                                        It's a required field.
                                      type: string
                                  required:
                                  - maxSkew
                                  - topologyKey
                                  - whenUnsatisfiable
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - topologyKey
                                - whenUnsatisfiable
                                x-kubernetes-list-type: map
                              volumes:
                                description: |-
                                  List of volumes that can be mounted by containers belonging to the pod.
                                  More info: https://kubernetes.io/docs/concepts/storage/volumes
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: |-
                                        awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            TODO: how do we prevent errors in the filesystem from compromising the machine
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly value true will force the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: boolean
                                        volumeID:
                                          description: |-
                                            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: azureDisk represents an Azure Data
                                        Disk mount on the host and bind mount to the
                                        pod.
                                      properties:
                                        cachingMode:
                                          description: 'cachingMode is the Host Caching
                                            mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType is Filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: 'kind expected values are Shared:
                                            multiple blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: azureFile represents an Azure File
                                        Service mount on the host and bind mount to
                                        the pod.
                                      properties:
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: cephFS represents a Ceph FS mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        monitors:
                                          description: |-
                                            monitors is Required: Monitors is a collection of Ceph monitors
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: boolean
                                        secretFile:
                                          description: |-
                                            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: |-
                                            user is optional: User is the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: |-
                                        cinder represents a cinder volume attached and mounted on kubelets host machine.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is optional: points to a secret object containing parameters used to connect
                                            to OpenStack.
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeID:
                                          description: |-
                                            volumeID used to identify the volume in cinder.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items if unspecified, each key-value pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the ConfigMap,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers (Beta feature).
                                      properties:
                                        driver:
                                          description: |-
                                            driver is the name of the CSI driver that handles this volume.
                                            Consult with your admin for the correct name as registered in the cluster.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                            If not provided, the empty value is passed to the associated CSI driver
                                            which will determine the default filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: |-
                                            nodePublishSecretRef is a reference to the secret object containing
                                            sensitive information to pass to the CSI driver to complete the CSI
                                            NodePublishVolume and NodeUnpublishVolume calls.
                                            This field is optional, and  may be empty if no secret is required. If the
                                            secret object contains more than one secret, all secret references are passed.
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        readOnly:
                                          description: |-
                                            readOnly specifies a read-only configuration for the volume.
                                            Defaults to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            volumeAttributes stores driver-specific properties that are passed to the CSI
                                            driver. Consult your driver's documentation for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            Optional: mode bits to use on created files by default. Must be a
                                            Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: |-
                                                  Optional: mode bits used to set permissions on this file, must be an octal value
                                                  between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                            - path
                                            type: object
                                          type: array
                                      type: object
                                    emptyDir:
                                      description: |-
                                        emptyDir represents a temporary directory that shares a pod's lifetime.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      properties:
                                        medium:
                                          description: |-
                                            medium represents what type of storage medium should back this directory.
                                            The default is "" which means to use the node's default medium.
                                            Must be an empty string (default) or Memory.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                            The size limit is also applicable for memory medium.
                                            The maximum usage on memory medium EmptyDir would be the minimum value between
                                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                            The default is nil which means that the limit is undefined.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: |-
                                        ephemeral represents a volume that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                        and deleted when the pod is removed.


                                        Use this if:
                                        a) the volume is only needed while the pod runs,
                                        b) features of normal volumes like restoring from snapshot or capacity
                                           tracking are needed,
                                        c) the storage driver is specified through a storage class, and
                                        d) the storage driver supports dynamic volume provisioning through
                                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                           information on the connection between this volume type
                                           and PersistentVolumeClaim).


                                        Use PersistentVolumeClaim or one of the vendor-specific
                                        APIs for volumes that persist for longer than the lifecycle
                                        of an individual pod.


                                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                        be used that way - see the documentation of the driver for
                                        more information.


                                        A pod can use both types of ephemeral volumes and
                                        persistent volumes at the same time.
                                      properties:
                                        volumeClaimTemplate:
                                          description: |-
                                            Will be used to create a stand-alone PVC to provision the volume.
                                            The pod in which this EphemeralVolumeSource is embedded will be the
                                            owner of the PVC, i.e. the PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                            `<volume name>` is the name from the `PodSpec.Volumes` array
                                            entry. Pod validation will reject the pod if the concatenated name
                                            is not valid for a PVC (for example, too long).


                                            An existing PVC with that name that is not owned by the pod
                                            will *not* be used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is then blocked until
                                            the unrelated PVC is removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has to updated with an
                                            owner reference to the pod once the pod exists. Normally
                                            this should not be necessary, but it may be useful when
                                            manually reconstructing a broken cluster.


                                            This field is read-only and no changes will be made by Kubernetes
                                            to the PVC after it has been created.


                                            Required, must not be nil.
                                          properties:
                                            metadata:
                                              description: |-
                                                May contain labels and annotations that will be copied into the PVC
                                                when creating it. No other fields are allowed and will be rejected during
                                                validation.
                                              properties:
                                                annotations:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                finalizers:
                                                  items:
                                                    type: string
                                                  type: array
                                                labels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                            spec:
                                              description: |-
                                                The specification for the PersistentVolumeClaim. The entire content is
                                                copied unchanged into the PVC that gets created from this
                                                template. The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: |-
                                                    accessModes contains the desired access modes the volume should have.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                  items:
                                                    type: string
                                                  type: array
                                                dataSource:
                                                  description: |-
                                                    dataSource field can be used to specify either:
                                                    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external controller can support the specified data source,
                                                    it will create a new volume based on the contents of the specified data source.
                                                    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                    If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                dataSourceRef:
                                                  description: |-
                                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                    volume is desired. This may be any object from a non-empty API group (non
                                                    core object) or a PersistentVolumeClaim object.
                                                    When this field is specified, volume binding will only succeed if the type of
                                                    the specified object matches some installed volume populator or dynamic
                                                    provisioner.
                                                    This field will replace the functionality of the dataSource field and as such
                                                    if both fields are non-empty, they must have the same value. For backwards
                                                    compatibility, when namespace isn't specified in dataSourceRef,
                                                    both fields (dataSource and dataSourceRef) will be set to the same
                                                    value automatically if one of them is empty and the other is non-empty.
                                                    When namespace is specified in dataSourceRef,
                                                    dataSource isn't set to the same value and must be empty.
                                                    There are three important differences between dataSource and dataSourceRef:
                                                    * While dataSource only allows two specific types of objects, dataSourceRef
                                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                      preserves all values, and generates an error if a disallowed value is
                                                      specified.
                                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                                      in any namespaces.
                                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: |-
                                                        Namespace is the namespace of resource being referenced
                                                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: |-
                                                    resources represents the minimum resources the volume should have.
                                                    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                    that are lower than previous value but must still be higher than capacity recorded in the
                                                    status field of the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Limits describes the maximum amount of compute resources allowed.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Requests describes the minimum amount of compute resources required.
                                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                storageClassName:
                                                  description: |-
                                                    storageClassName is the name of the StorageClass required by the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                  type: string
                                                volumeAttributesClassName:
                                                  description: |-
                                                    volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                    If specified, the CSI driver will create or update the volume with the attributes defined
                                                    in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                    it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                    will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                    If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                    will be set by the persistentvolume controller if it exists.
                                                    If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                    set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                    exists.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                                    (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                                  type: string
                                                volumeMode:
                                                  description: |-
                                                    volumeMode defines what type of volume is required by the claim.
                                                    Value of Filesystem is implied when not included in claim spec.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            TODO: how do we prevent errors in the filesystem from compromising the machine
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                        wwids:
                                          description: |-
                                            wwids Optional: FC volume world wide identifiers (wwids)
                                            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    flexVolume:
                                      description: |-
                                        flexVolume represents a generic volume resource that is
                                        provisioned/attached using an exec based plugin.
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: secretRef is reference to the secret object containing
                                            sensitive information to pass to the plugin scripts. This may be
                                            empty if no secret object is specified. If the secret object
                                            contains more than one secret, all secrets are passed to the plugin
                                            scripts.
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: flocker represents a Flocker volume
                                        attached to a kubelet's host machine. This
                                        depends on the Flocker control service being
                                        running
                                      properties:
                                        datasetName:
                                          description: |-
                                            datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                            should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: |-
                                        gcePersistentDisk represents a GCE Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            TODO: how do we prevent errors in the filesystem from compromising the machine
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: |-
                                            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: |-
                                        gitRepo represents a git repository at a particular revision.
                                        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                                        EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                        into the Pod's container.
                                      properties:
                                        directory:
                                          description: |-
                                            directory is the target directory name.
                                            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                            git repository.  Otherwise, if specified, the volume will contain the git repository in
                                            the subdirectory with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: |-
                                        glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                      properties:
                                        endpoints:
                                          description: |-
                                            endpoints is the endpoint name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        path:
                                          description: |-
                                            path is the Glusterfs volume path.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: |-
                                        hostPath represents a pre-existing file or directory on the host
                                        machine that is directly exposed to the container. This is generally
                                        used for system agents or other privileged things that are allowed
                                        to see the host machine. Most containers will NOT need this.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        ---
                                        TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
                                        mount host directories as read/write.
                                      properties:
                                        path:
                                          description: |-
                                            path of the directory on the host.
                                            If the path is a symlink, it will follow the link to the real path.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                        type:
                                          description: |-
                                            type for HostPath Volume
                                            Defaults to ""
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    iscsi:
                                      description: |-
                                        iscsi represents an ISCSI Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            TODO: how do we prevent errors in the filesystem from compromising the machine
                                          type: string
                                        initiatorName:
                                          description: |-
                                            initiatorName is the custom iSCSI Initiator Name.
                                            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                            <target portal>:<volume name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          description: |-
                                            iscsiInterface is the interface Name that uses an iSCSI transport.
                                            Defaults to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: |-
                                            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        targetPortal:
                                          description: |-
                                            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: |-
                                        name of the volume.
                                        Must be a DNS_LABEL and unique within the pod.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    nfs:
                                      description: |-
                                        nfs represents an NFS mount on the host that shares a pod's lifetime
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      properties:
                                        path:
                                          description: |-
                                            path that is exported by the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the NFS export to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: boolean
                                        server:
                                          description: |-
                                            server is the hostname or IP address of the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: |-
                                        persistentVolumeClaimVolumeSource represents a reference to a
                                        PersistentVolumeClaim in the same namespace.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      properties:
                                        claimName:
                                          description: |-
                                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Will force the ReadOnly setting in VolumeMounts.
                                            Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: photonPersistentDisk represents
                                        a PhotonController persistent disk attached
                                        and mounted on kubelets host machine
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: portworxVolume represents a portworx
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: |-
                                            fSType represents the filesystem type to mount
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode are the mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              clusterTrustBundle:
                                                description: |-
                                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                                  of ClusterTrustBundle objects in an auto-updating file.


                                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.


                                                  ClusterTrustBundle objects can either be selected by name, or by the
                                                  combination of signer name and a label selector.


                                                  Kubelet performs aggressive normalization of the PEM contents written
                                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                                  comments and block headers are stripped.  Certificates are deduplicated.
                                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                                  may change the order over time.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                                      everything".
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  name:
                                                    description: |-
                                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                      with signerName and labelSelector.
                                                    type: string
                                                  optional:
                                                    description: |-
                                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                                      allowed not to exist.  If using signerName, then the combination of
                                                      signerName and labelSelector is allowed to match zero
                                                      ClusterTrustBundles.
                                                    type: boolean
                                                  path:
                                                    description: Relative path from
                                                      the volume root to write the
                                                      bundle.
                                                    type: string
                                                  signerName:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this signer name.
                                                      Mutually-exclusive with name.  The contents of all selected
                                                      ClusterTrustBundles will be unified and deduplicated.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      ConfigMap will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the ConfigMap,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: |-
                                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: |-
                                                            Selects a resource of the container: only resources limits and requests
                                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      Secret will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the Secret,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: |-
                                                      audience is the intended audience of the token. A recipient of a token
                                                      must identify itself with an identifier specified in the audience of the
                                                      token, and otherwise should reject the token. The audience defaults to the
                                                      identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: |-
                                                      expirationSeconds is the requested duration of validity of the service
                                                      account token. As the token approaches expiration, the kubelet volume
                                                      plugin will proactively rotate the service account token. The kubelet will
                                                      start trying to rotate the token if the token is older than 80 percent of
                                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                      and must be at least 10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: |-
                                                      path is the path relative to the mount point of the file to project the
                                                      token into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    quobyte:
                                      description: quobyte represents a Quobyte mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        group:
                                          description: |-
                                            group to map volume access to
                                            Default is no group
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                            Defaults to false.
                                          type: boolean
                                        registry:
                                          description: |-
                                            registry represents a single or multiple Quobyte Registry services
                                            specified as a string as host:port pair (multiple entries are separated with commas)
                                            which acts as the central registry for volumes
                                          type: string
                                        tenant:
                                          description: |-
                                            tenant owning the given Quobyte volume in the Backend
                                            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                          type: string
                                        user:
                                          description: |-
                                            user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: |-
                                        rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            TODO: how do we prevent errors in the filesystem from compromising the machine
                                          type: string
                                        image:
                                          description: |-
                                            image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        keyring:
                                          description: |-
                                            keyring is the path to key ring for RBDUser.
                                            Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        monitors:
                                          description: |-
                                            monitors is a collection of Ceph monitors.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                        pool:
                                          description: |-
                                            pool is the rados pool name.
                                            Default is rbd.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is name of the authentication secret for RBDUser. If provided
                                            overrides keyring.
                                            Default is nil.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: |-
                                            user is the rados user name.
                                            Default is admin.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: scaleIO represents a ScaleIO persistent
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs".
                                            Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef references to the secret for ScaleIO user and other
                                            sensitive information. If this is not provided, Login operation will fail.
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          description: |-
                                            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                            Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: |-
                                            volumeName is the name of a volume already created in the ScaleIO system
                                            that is associated with this volume source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: |-
                                        secret represents a secret that should populate this volume.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values
                                            for mode bits. Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items If unspecified, each key-value pair in the Data field of the referenced
                                            Secret will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the Secret,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: |-
                                            secretName is the name of the secret in the pod's namespace to use.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                          type: string
                                      type: object
                                    storageos:
                                      description: storageOS represents a StorageOS
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef specifies the secret to use for obtaining the StorageOS API
                                            credentials.  If not specified, default values will be attempted.
                                          properties:
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeName:
                                          description: |-
                                            volumeName is the human-readable name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: |-
                                            volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                            namespace is specified then the Pod's namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                            Set VolumeName to any name to override the default behaviour.
                                            Set to "default" if you are not using namespaces within StorageOS.
                                            Namespaces that do not pre-exist within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: vsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                        type: object
                    required:
                    - selector
                    - template
                    type: object
                type: object
              serviceAccountTemplate:
                description: ServiceAccountTemplate is the template for the ServiceAccount
                  object.
                properties:
                  metadata:
                    description: Metadata contains the configurable metadata fields
                      for the ServiceAccount.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that
                          may be set by external tools to store and retrieve arbitrary metadata.
                          They are not queryable and should be preserved when modifying objects.
                          More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. Labels will be merged with internal labels
                          used by crossplane, and labels with a crossplane.io key might be
                          overwritten.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                        type: object
                      name:
                        description: Name is the name of the object.
                        type: string
                    type: object
                type: object
              serviceTemplate:
                description: ServiceTemplate is the template for the Service object.
                properties:
                  metadata:
                    description: Metadata contains the configurable metadata fields
                      for the Service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that
                          may be set by external tools to store and retrieve arbitrary metadata.
                          They are not queryable and should be preserved when modifying objects.
                          More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. Labels will be merged with internal labels
                          used by crossplane, and labels with a crossplane.io key might be
                          overwritten.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                        type: object
                      name:
                        description: Name is the name of the object.
                        type: string
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: DeploymentRuntimeConfig
    listKind: DeploymentRuntimeConfigList
    plural: deploymentruntimeconfigs
    singular: deploymentruntimeconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: emugroupmappings.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1161"
  uid: 967ceea2-79ba-4c06-b2af-57cd86cd3ced
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: EmuGroupMapping
    listKind: EmuGroupMappingList
    plural: emugroupmappings
    singular: emugroupmapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EmuGroupMapping is the Schema for the EmuGroupMappings API. Manages
          mappings between external groups for enterprise managed users.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EmuGroupMappingSpec defines the desired state of EmuGroupMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    type: number
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                  teamSlugRef:
                    description: Reference to a Team to populate teamSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSlugSelector:
                    description: Selector for a Team to populate teamSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    type: number
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                  teamSlugRef:
                    description: Reference to a Team to populate teamSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSlugSelector:
                    description: Selector for a Team to populate teamSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.groupId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupId)
                || (has(self.initProvider) && has(self.initProvider.groupId))'
          status:
            description: EmuGroupMappingStatus defines the observed state of EmuGroupMapping.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    type: number
                  id:
                    type: string
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: EmuGroupMapping
    listKind: EmuGroupMappingList
    plural: emugroupmappings
    singular: emugroupmapping
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: environmentconfigs.apiextensions.crossplane.io
  resourceVersion: "575"
  uid: 90e01df4-7a2e-4665-8367-038e453d0e11
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
    - crossplane
    kind: EnvironmentConfig
    listKind: EnvironmentConfigList
    plural: environmentconfigs
    shortNames:
    - envcfg
    singular: environmentconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          An EnvironmentConfig contains user-defined unstructured values for
          use in a Composition.


          Read the Crossplane documentation for
          [more information about EnvironmentConfigs](https://docs.crossplane.io/latest/concepts/environment-configs).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          data:
            additionalProperties:
              x-kubernetes-preserve-unknown-fields: true
            description: |-
              The data of this EnvironmentConfig.
              This may contain any kind of structure that can be serialized into JSON.
            type: object
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: EnvironmentConfig
    listKind: EnvironmentConfigList
    plural: environmentconfigs
    shortNames:
    - envcfg
    singular: environmentconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: functionrevisions.pkg.crossplane.io
  resourceVersion: "606"
  uid: 6ee59c53-bf97-4194-9c44-72e69bc027d8
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkgrev
    kind: FunctionRevision
    listKind: FunctionRevisionList
    plural: functionrevisions
    singular: functionrevision
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.revision
      name: REVISION
      type: string
    - jsonPath: .spec.image
      name: IMAGE
      type: string
    - jsonPath: .spec.desiredState
      name: STATE
      type: string
    - jsonPath: .status.foundDependencies
      name: DEP-FOUND
      type: string
    - jsonPath: .status.installedDependencies
      name: DEP-INSTALLED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          A FunctionRevision represents a revision of a Function. Crossplane
          creates new revisions when there are changes to the Function.


          Crossplane creates and manages FunctionRevisions. Don't directly edit
          FunctionRevisions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionRevisionSpec specifies configuration for a FunctionRevision.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              controllerConfigRef:
                description: |-
                  ControllerConfigRef references a ControllerConfig resource that will be
                  used to configure the packaged controller Deployment.
                  Deprecated: Use RuntimeConfigReference instead.
                properties:
                  name:
                    description: Name of the ControllerConfig.
                    type: string
                required:
                - name
                type: object
              desiredState:
                description: DesiredState of the PackageRevision. Can be either Active
                  or Inactive.
                type: string
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              image:
                description: Package image used by install Pod to extract package
                  contents.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package. It is also
                  applied to any images pulled for the package, such as a provider's
                  controller image.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be
                  used to fetch packages from private registries. They are also applied to
                  any images pulled for the package, such as a provider's controller image.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revision:
                description: |-
                  Revision number. Indicates when the revision will be garbage collected
                  based on the parent's RevisionHistoryLimit.
                format: int64
                type: integer
              runtimeConfigRef:
                default:
                  name: default
                description: |-
                  RuntimeConfigRef references a RuntimeConfig resource that will be used
                  to configure the package runtime.
                properties:
                  apiVersion:
                    default: pkg.crossplane.io/v1beta1
                    description: API version of the referent.
                    type: string
                  kind:
                    default: DeploymentRuntimeConfig
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the RuntimeConfig.
                    type: string
                required:
                - name
                type: object
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
              tlsClientSecretName:
                description: |-
                  TLSClientSecretName is the name of the TLS Secret that stores client
                  certificates of the Provider.
                type: string
              tlsServerSecretName:
                description: |-
                  TLSServerSecretName is the name of the TLS Secret that stores server
                  certificates of the Provider.
                type: string
            required:
            - desiredState
            - image
            - revision
            type: object
          status:
            description: FunctionRevisionStatus represents the observed state of a
              FunctionRevision.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              endpoint:
                description: |-
                  Endpoint is the gRPC endpoint where Crossplane will send
                  RunFunctionRequests.
                type: string
              foundDependencies:
                description: Dependency information.
                format: int64
                type: integer
              installedDependencies:
                format: int64
                type: integer
              invalidDependencies:
                format: int64
                type: integer
              objectRefs:
                description: References to objects owned by PackageRevision.
                items:
                  description: |-
                    A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                    commonly used to reference cluster-scoped objects or objects where the
                    namespace is already known.
                  properties:
                    apiVersion:
                      description: APIVersion of the referenced object.
                      type: string
                    kind:
                      description: Kind of the referenced object.
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                    uid:
                      description: UID of the referenced object.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
              permissionRequests:
                description: |-
                  PermissionRequests made by this package. The package declares that its
                  controller needs these permissions to run. The RBAC manager is
                  responsible for granting them.
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names
                        that the rule applies to.  An empty set means that everything
                        is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the
                        ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkgrev
    kind: FunctionRevision
    listKind: FunctionRevisionList
    plural: functionrevisions
    singular: functionrevision
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: functions.pkg.crossplane.io
  resourceVersion: "607"
  uid: e36ae6fb-11a1-4323-a1ba-73b2520a0292
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkg
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Installed')].status
      name: INSTALLED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.package
      name: PACKAGE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          A Function installs an OCI compatible Crossplane package, extending
          Crossplane with support for a new kind of composition function.


          Read the Crossplane documentation for
          [more information about Functions](https://docs.crossplane.io/latest/concepts/composition-functions).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec specifies the configuration of a Function.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              controllerConfigRef:
                description: |-
                  ControllerConfigRef references a ControllerConfig resource that will be
                  used to configure the packaged controller Deployment.
                  Deprecated: Use RuntimeConfigReference instead.
                properties:
                  name:
                    description: Name of the ControllerConfig.
                    type: string
                required:
                - name
                type: object
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              package:
                description: Package is the name of the package that is being requested.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be used
                  to fetch packages from private registries.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revisionActivationPolicy:
                default: Automatic
                description: |-
                  RevisionActivationPolicy specifies how the package controller should
                  update from one revision to the next. Options are Automatic or Manual.
                  Default is Automatic.
                type: string
              revisionHistoryLimit:
                default: 1
                description: |-
                  RevisionHistoryLimit dictates how the package controller cleans up old
                  inactive package revisions.
                  Defaults to 1. Can be disabled by explicitly setting to 0.
                format: int64
                type: integer
              runtimeConfigRef:
                default:
                  name: default
                description: |-
                  RuntimeConfigRef references a RuntimeConfig resource that will be used
                  to configure the package runtime.
                properties:
                  apiVersion:
                    default: pkg.crossplane.io/v1beta1
                    description: API version of the referent.
                    type: string
                  kind:
                    default: DeploymentRuntimeConfig
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the RuntimeConfig.
                    type: string
                required:
                - name
                type: object
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
            required:
            - package
            type: object
          status:
            description: FunctionStatus represents the observed state of a Function.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentIdentifier:
                description: |-
                  CurrentIdentifier is the most recent package source that was used to
                  produce a revision. The package manager uses this field to determine
                  whether to check for package updates for a given source when
                  packagePullPolicy is set to IfNotPresent. Manually removing this field
                  will cause the package manager to check that the current revision is
                  correct for the given package source.
                type: string
              currentRevision:
                description: |-
                  CurrentRevision is the name of the current package revision. It will
                  reflect the most up to date revision, whether it has been activated or
                  not.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkg
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: "2024-08-14T07:11:21Z"
  generation: 1
  name: kclinputs.template.fn.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: FunctionRevision
    name: function-kcl-0bd316c25ddd
    uid: d9362509-a810-4419-941c-3c0a7cc604c2
  - apiVersion: pkg.crossplane.io/v1beta1
    blockOwnerDeletion: true
    controller: false
    kind: Function
    name: function-kcl
    uid: 97ce673b-2815-42f1-94e3-a0f67a967638
  resourceVersion: "1534"
  uid: 9c334f23-ebf7-4d33-b6b9-a2b4b65f6013
spec:
  conversion:
    strategy: None
  group: template.fn.crossplane.io
  names:
    categories:
    - crossplane
    kind: KCLInput
    listKind: KCLInputList
    plural: kclinputs
    singular: kclinput
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: KCLInput can be used to provide input to this Function.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RunSpec defines the desired state of Crossplane KCL function.
            properties:
              config:
                description: Config is the compile config.
                properties:
                  arguments:
                    description: Arguments is the list of top level dynamic arguments
                      for the kcl option function, e.g., env="prod"
                    items:
                      type: string
                    type: array
                  debug:
                    description: Debug denotes running kcl in debug mode.
                    type: boolean
                  disableNone:
                    description: DisableNone denotes running kcl and disable dumping
                      None values.
                    type: boolean
                  overrides:
                    description: Overrides is the list of override paths and values,
                      e.g., app.image="v2"
                    items:
                      type: string
                    type: array
                  pathSelectors:
                    description: PathSelectors is the list of path selectors to select
                      output result, e.g., a.b.c
                    items:
                      type: string
                    type: array
                  settings:
                    description: Settings is the list of kcl setting files including
                      all of the CLI config.
                    items:
                      type: string
                    type: array
                  showHidden:
                    description: ShowHidden denotes output the hidden attribute in
                      the result.
                    type: boolean
                  sortKeys:
                    description: SortKeys denotes sorting the output result keys,
                      e.g., `{b = 1, a = 2} => {a = 2, b = 1}`.
                    type: boolean
                  strictRangeCheck:
                    description: StrictRangeCheck performs the 32-bit strict numeric
                      range checks on numbers.
                    type: boolean
                  vendor:
                    description: Vendor denotes running kcl in the vendor mode.
                    type: boolean
                type: object
              credentials:
                description: Credentials for remote locations
                properties:
                  password:
                    type: string
                  url:
                    type: string
                  username:
                    type: string
                required:
                - password
                - username
                type: object
              dependencies:
                description: |-
                  Dependencies are the external dependencies for the KCL code.
                  The format of the `dependencies` field is same as the `[dependencies]` in the `kcl.mod` file
                type: string
              params:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                description: Params are the parameters in key-value pairs format.
                type: object
              resources:
                description: |-
                  Resources is a list of resources to patch and create
                  This is utilized when a Target is set to PatchResources
                items:
                  properties:
                    base:
                      description: |-
                        Base of the composed resource that patches will be applied to.
                        According to the patches and transforms functions, this may be ommited on
                        occassion by a previous pipeline
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      description: Name is a unique identifier for this entry in a
                        ResourceList
                      type: string
                  required:
                  - name
                  type: object
                type: array
              source:
                description: Source is a required field for providing a KCL script
                  inline.
                type: string
              target:
                default: Resources
                description: Target determines what object the export output should
                  be applied to
                enum:
                - Default
                - PatchDesired
                - PatchResources
                - Resources
                - XR
                type: string
            required:
            - source
            - target
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    categories:
    - crossplane
    kind: KCLInput
    listKind: KCLInputList
    plural: kclinputs
    singular: kclinput
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:21Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:21Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: locks.pkg.crossplane.io
  resourceVersion: "608"
  uid: 8ab4a2e2-1d03-42ed-81dd-e7a003754c11
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    kind: Lock
    listKind: LockList
    plural: locks
    singular: lock
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Lock is the CRD type that tracks package dependencies.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          packages:
            items:
              description: LockPackage is a package that is in the lock.
              properties:
                dependencies:
                  description: |-
                    Dependencies are the list of dependencies of this package. The order of
                    the dependencies will dictate the order in which they are resolved.
                  items:
                    description: A Dependency is a dependency of a package in the
                      lock.
                    properties:
                      constraints:
                        description: |-
                          Constraints is a valid semver range, which will be used to select a valid
                          dependency version.
                        type: string
                      package:
                        description: Package is the OCI image name without a tag or
                          digest.
                        type: string
                      type:
                        description: Type is the type of package. Can be either Configuration
                          or Provider.
                        type: string
                    required:
                    - constraints
                    - package
                    - type
                    type: object
                  type: array
                name:
                  description: Name corresponds to the name of the package revision
                    for this package.
                  type: string
                source:
                  description: Source is the OCI image name without a tag or digest.
                  type: string
                type:
                  description: Type is the type of package. Can be either Configuration
                    or Provider.
                  type: string
                version:
                  description: Version is the tag or digest of the OCI image.
                  type: string
              required:
              - dependencies
              - name
              - source
              - type
              - version
              type: object
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: Lock
    listKind: LockList
    plural: locks
    singular: lock
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: memberships.user.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1183"
  uid: 27de92fb-ab77-455b-abc2-ba4c4a8b6e73
spec:
  conversion:
    strategy: None
  group: user.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Membership
    listKind: MembershipList
    plural: memberships
    singular: membership
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Membership is the Schema for the Memberships API. Provides a
          GitHub membership resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MembershipSpec defines the desired state of Membership
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.username is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.username)
                || (has(self.initProvider) && has(self.initProvider.username))'
          status:
            description: MembershipStatus defines the observed state of Membership.
            properties:
              atProvider:
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  etag:
                    type: string
                  id:
                    type: string
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: Membership
    listKind: MembershipList
    plural: memberships
    singular: membership
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:18Z"
  generation: 1
  name: objects.kubernetes.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-kubernetes-101d5a6d80d3
    uid: de2f467c-5c35-4e92-ac8c-31c92be7400a
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-kubernetes
    uid: 05b49394-1de4-4c54-a724-94365a2e22d3
  resourceVersion: "856"
  uid: 4b05cc8b-ce6c-42d3-a46a-0ec6820aa521
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQyVENDQXNHZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTRNVFF3TnpFd01UZGFGdzB6Ck5EQTRNVFF3TnpFd01UZGFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDc1BRSWlxWE9LCldickJFRVYybUphYjlaV0JMaTg1RnAyUFVwSFBDaktUQXJYU04zY2hJRnljK1B1Q2V2OXhUc1JWb0dtbTM4eU8KNFZnL2p1dmYyNjBnU2d5emREUThCaCszVWVheGJGSGF4YzJyOUx0c1o2UlBqeTRJVTJ0MEJXU3Btd3lCeVZHSworaGFDTnV6eFd0c1RhUTQ1a2ZGbSs5ODlvS2hPTEM3aENtU09LTGhXTWkzUXdNZDVpRkFoeHNLNGh3OXRjUEIwCkpPSjZUWEFBRVdhSElQSjlKZ25RWmpJOVpwYm05YnQrOVJ2cmRML0hqbmVIUkpjeTFTRVVPQS9rZkpoOWpYT0YKNERKZjNYSUJiZm90ckpNcFFmL0FRY1RTM0pvUnh6WXRzN01HYS9WUjB1QTdJbEFYSjZFU3VIY0F1RC9HNlBsUwpGZXA5QmdlUWJNb0ZBZ01CQUFHamdhZ3dnYVV3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Y0FZRFZSMFJCR2t3WjRJVGNISnZkbWxrWlhJdGEzVmkKWlhKdVpYUmxjNElsY0hKdmRtbGtaWEl0YTNWaVpYSnVaWFJsY3k1amNtOXpjM0JzWVc1bExYTjVjM1JsYllJcApjSEp2ZG1sa1pYSXRhM1ZpWlhKdVpYUmxjeTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTFR1RXUwVFo0eVowRjVyanFGb09uY0d3ZTBreHBVRXNZeVZqYVU5ZWRUamFvQVIKdzk4ZCtBVWl0VldTS0I4am5iWFUyREJNV25vOGJCTTV5ZkFjNmVjcUtpcDRmTUhyK0lEeWNvWjNWSm04ZThWdQpFeXY1WFA5K0d6RmxRcnk5SHovOGNYNkJ3dHViaWNGWW02TEZPa2tDc2lYYkYrd3FWTE9ESC9tZkhyTXFpUHR5ClpralZJNmc2aXZSU0s0MGtpSHZTOHltKzFkaVBNTk9GcGxLQlQyZzNSQkt2cTRjQlZ1QlZPMERmdDhaRUtNNzYKNWdYTWl2U29ZU2txa0QrT1I5UnQzZXpjMFdPU1VGWEtVQkdDMHk3KytnWE5kOFBEYkFQSCtVc3ByeUhMdElEMQpPcWtKd2JNYTlKenhrWUJIM05OK1pQRUl6TmtaZWNpU3Z5QU40YVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: provider-kubernetes
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: kubernetes.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: Object
    listKind: ObjectList
    plural: objects
    singular: object
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.manifest.kind
      name: KIND
      type: string
    - jsonPath: .spec.forProvider.manifest.apiVersion
      name: APIVERSION
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.name
      name: METANAME
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.namespace
      name: METANAMESPACE
      priority: 1
      type: string
    - jsonPath: .spec.providerConfigRef.name
      name: PROVIDERCONFIG
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    deprecated: true
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A Object is an provider Kubernetes API type
          Deprecated: v1alpha1.Object is deprecated in favor of v1alpha2.Object
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ObjectSpec defines the desired state of a Object.
            properties:
              connectionDetails:
                items:
                  description: ConnectionDetail represents an entry in the connection
                    secret for an Object
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    toConnectionSecretKey:
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicy
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ObjectParameters are the configurable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the kubernetes object
                      to be created.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - manifest
                type: object
              managementPolicy:
                default: Default
                description: |-
                  A ManagementPolicy determines what should happen to the underlying external
                  resource when a managed resource is created, updated, deleted, or observed.
                enum:
                - Default
                - ObserveCreateUpdate
                - ObserveDelete
                - Observe
                type: string
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: |-
                  ProviderReference specifies the provider that will be used to create,
                  observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              readiness:
                description: |-
                  Readiness defines how the object's readiness condition should be computed,
                  if not specified it will be considered ready as soon as the underlying external
                  resource is considered up-to-date.
                properties:
                  policy:
                    default: SuccessfulCreate
                    description: Policy defines how the Object's readiness condition
                      should be computed.
                    enum:
                    - SuccessfulCreate
                    - DeriveFromObject
                    - AllTrue
                    type: string
                type: object
              references:
                items:
                  description: |-
                    Reference refers to an Object or arbitrary Kubernetes resource and optionally
                    patch values from that resource to the current Object.
                  properties:
                    dependsOn:
                      description: |-
                        DependsOn is used to declare dependency on other Object or arbitrary
                        Kubernetes resource.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    patchesFrom:
                      description: |-
                        PatchesFrom is used to declare dependency on other Object or arbitrary
                        Kubernetes resource, and also patch fields from this object.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        fieldPath:
                          description: |-
                            FieldPath is the path of the field on the resource whose value is to be
                            used as input.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - fieldPath
                      - name
                      type: object
                    toFieldPath:
                      description: |-
                        ToFieldPath is the path of the field on the resource whose value will
                        be changed with the result of transforms. Leave empty if you'd like to
                        propagate to the same path as patchesFrom.fieldPath.
                      type: string
                  type: object
                type: array
              watch:
                default: false
                description: |-
                  Watch enables watching the referenced or managed kubernetes resources.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless "watches" feature gate is enabled, and may be changed or removed
                  without notice.
                type: boolean
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ObjectStatus represents the observed state of a Object.
            properties:
              atProvider:
                description: ObjectObservation are the observable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the remote object.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.manifest.kind
      name: KIND
      type: string
    - jsonPath: .spec.forProvider.manifest.apiVersion
      name: APIVERSION
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.name
      name: METANAME
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.manifest.metadata.namespace
      name: METANAMESPACE
      priority: 1
      type: string
    - jsonPath: .spec.providerConfigRef.name
      name: PROVIDERCONFIG
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: A Object is an provider Kubernetes API type
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ObjectSpec defines the desired state of a Object.
            properties:
              connectionDetails:
                items:
                  description: ConnectionDetail represents an entry in the connection
                    secret for an Object
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    toConnectionSecretKey:
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ObjectParameters are the configurable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the kubernetes object
                      to be created.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - manifest
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              readiness:
                description: |-
                  Readiness defines how the object's readiness condition should be computed,
                  if not specified it will be considered ready as soon as the underlying external
                  resource is considered up-to-date.
                properties:
                  celQuery:
                    description: |-
                      CelQuery defines a cel query to evaluate the readiness. The
                      observed object is passed to the cel query with the word `object`.
                      Cel macros are available to be used, see https://github.com/google/cel-spec/blob/master/doc/langdef.md#macros
                      for more information.
                      Examples:
                       `object.status.isReady == true`: checks for a boolean field called isReady on status.
                       `object.status.conditions.all(x, x.status == "True")` mimics the behavior of the AllTrue readiness policy
                       `object.status.conditions.exists(c, c.type == "condition1" && c.status == "True" )` checks just one condition
                    type: string
                  policy:
                    default: SuccessfulCreate
                    description: Policy defines how the Object's readiness condition
                      should be computed.
                    enum:
                    - SuccessfulCreate
                    - DeriveFromObject
                    - AllTrue
                    - DeriveFromCelQuery
                    type: string
                type: object
                x-kubernetes-validations:
                - message: celQuery must be set if policy is DeriveFromCelQuery
                  rule: self.policy != 'DeriveFromCelQuery' || (self.policy == 'DeriveFromCelQuery'
                    && size(self.celQuery) > 0)
              references:
                items:
                  description: |-
                    Reference refers to an Object or arbitrary Kubernetes resource and optionally
                    patch values from that resource to the current Object.
                  properties:
                    dependsOn:
                      description: |-
                        DependsOn is used to declare dependency on other Object or arbitrary
                        Kubernetes resource.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    patchesFrom:
                      description: |-
                        PatchesFrom is used to declare dependency on other Object or arbitrary
                        Kubernetes resource, and also patch fields from this object.
                      properties:
                        apiVersion:
                          default: kubernetes.crossplane.io/v1alpha1
                          description: APIVersion of the referenced object.
                          type: string
                        fieldPath:
                          description: |-
                            FieldPath is the path of the field on the resource whose value is to be
                            used as input.
                          type: string
                        kind:
                          default: Object
                          description: Kind of the referenced object.
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object.
                          type: string
                      required:
                      - fieldPath
                      - name
                      type: object
                    toFieldPath:
                      description: |-
                        ToFieldPath is the path of the field on the resource whose value will
                        be changed with the result of transforms. Leave empty if you'd like to
                        propagate to the same path as patchesFrom.fieldPath.
                      type: string
                  type: object
                type: array
              watch:
                default: false
                description: |-
                  Watch enables watching the referenced or managed kubernetes resources.


                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless "watches" feature gate is enabled, and may be changed or removed
                  without notice.
                type: boolean
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ObjectStatus represents the observed state of a Object.
            properties:
              atProvider:
                description: ObjectObservation are the observable fields of a Object.
                properties:
                  manifest:
                    description: Raw JSON representation of the remote object.
                    type: object
                    x-kubernetes-embedded-resource: true
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: Object
    listKind: ObjectList
    plural: objects
    singular: object
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:18Z"
  generation: 1
  name: observedobjectcollections.kubernetes.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-kubernetes-101d5a6d80d3
    uid: de2f467c-5c35-4e92-ac8c-31c92be7400a
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-kubernetes
    uid: 05b49394-1de4-4c54-a724-94365a2e22d3
  resourceVersion: "858"
  uid: 796192b1-8de7-448e-ae43-b4e5889f4b99
spec:
  conversion:
    strategy: None
  group: kubernetes.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: ObservedObjectCollection
    listKind: ObservedObjectCollectionList
    plural: observedobjectcollections
    singular: observedobjectcollection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.kind
      name: KIND
      type: string
    - jsonPath: .spec.apiVersion
      name: APIVERSION
      priority: 1
      type: string
    - jsonPath: .spec.providerConfigRef.name
      name: PROVIDERCONFIG
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A ObservedObjectCollection is a provider Kubernetes API type
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ObservedObjectCollectionSpec defines the desired state of
              ObservedObjectCollection
            properties:
              objectTemplate:
                description: Template when defined is used for creating Object instances
                properties:
                  metadata:
                    description: Objects metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations of an object
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels of an object
                        type: object
                    type: object
                type: object
              observeObjects:
                description: |-
                  ObserveObjects declares what criteria object need to fulfil
                  to become a member of this collection
                properties:
                  apiVersion:
                    description: APIVersion of objects that should be matched by the
                      selector
                    minLength: 1
                    type: string
                  kind:
                    description: Kind of objects that should be matched by the selector
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace where to look for objects.
                      If omitted, search is performed across all namespaces.
                      For cluster-scoped objects, omit it.
                    type: string
                  selector:
                    description: Selector defines the criteria for including objects
                      into the collection
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - apiVersion
                - kind
                - selector
                type: object
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
            required:
            - observeObjects
            type: object
          status:
            description: ObservedObjectCollectionStatus represents the observed state
              of a ObservedObjectCollection
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              membershipLabel:
                additionalProperties:
                  type: string
                description: |-
                  MembershipLabel is the label set on each member of this collection
                  and can be used for fetching them.
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: metadata.name max length is 63
          rule: size(self.metadata.name) < 64
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - kubernetes
    kind: ObservedObjectCollection
    listKind: ObservedObjectCollectionList
    plural: observedobjectcollections
    singular: observedobjectcollection
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: organizationrulesets.enterprise.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1168"
  uid: 071e217a-6437-452f-a5b9-a98eb30de27c
spec:
  conversion:
    strategy: None
  group: enterprise.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationRuleset
    listKind: OrganizationRulesetList
    plural: organizationrulesets
    singular: organizationruleset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationRuleset is the Schema for the OrganizationRulesets
          API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationRulesetSpec defines the desired state of OrganizationRuleset
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          type: number
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            type: number
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                type: number
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      type: number
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: Possible values are `branch` and `tag`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          type: number
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            type: number
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                type: number
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      type: number
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: Possible values are `branch` and `tag`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.enforcement is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.enforcement)
                || (has(self.initProvider) && has(self.initProvider.enforcement))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rules is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rules)
                || (has(self.initProvider) && has(self.initProvider.rules))'
            - message: spec.forProvider.target is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.target)
                || (has(self.initProvider) && has(self.initProvider.target))'
          status:
            description: OrganizationRulesetStatus defines the observed state of OrganizationRuleset.
            properties:
              atProvider:
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          type: number
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            type: number
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  nodeId:
                    description: GraphQL global node id for use with v4 API.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                type: number
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      type: number
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  rulesetId:
                    description: GitHub ID for the ruleset.
                    type: number
                  target:
                    description: Possible values are `branch` and `tag`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationRuleset
    listKind: OrganizationRulesetList
    plural: organizationrulesets
    singular: organizationruleset
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: organizations.enterprise.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1140"
  uid: 9d34e055-376c-48a6-8827-c57d5b47bb19
spec:
  conversion:
    strategy: None
  group: enterprise.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Organization is the Schema for the Organizations API. Create
          and manages a GitHub enterprise organization.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationSpec defines the desired state of Organization
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.adminLogins is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.adminLogins)
                || (has(self.initProvider) && has(self.initProvider.adminLogins))'
            - message: spec.forProvider.billingEmail is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.billingEmail)
                || (has(self.initProvider) && has(self.initProvider.billingEmail))'
            - message: spec.forProvider.enterpriseId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.enterpriseId)
                || (has(self.initProvider) && has(self.initProvider.enterpriseId))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: OrganizationStatus defines the observed state of Organization.
            properties:
              atProvider:
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  id:
                    description: The ID of the organization.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: providerconfigs.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1143"
  uid: 21cf1ae6-b296-4688-b76a-c6c8df6866f5
spec:
  conversion:
    strategy: None
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - template
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentials.secretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProviderConfig configures how the provider will connect to Github.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              credentials:
                description: Credentials required to authenticate to this provider.
                properties:
                  env:
                    description: |-
                      Env is a reference to an environment variable that contains credentials
                      that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: |-
                      Fs is a reference to a filesystem location that contains credentials that
                      must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: |-
                      A SecretRef is a reference to a secret key that contains the credentials
                      that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
            required:
            - credentials
            type: object
          status:
            description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - provider
    - template
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:18Z"
  generation: 1
  name: providerconfigs.kubernetes.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-kubernetes-101d5a6d80d3
    uid: de2f467c-5c35-4e92-ac8c-31c92be7400a
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-kubernetes
    uid: 05b49394-1de4-4c54-a724-94365a2e22d3
  resourceVersion: "838"
  uid: 021c677e-a123-4ddc-857f-668a8aa57430
spec:
  conversion:
    strategy: None
  group: kubernetes.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - kubernetes
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentials.secretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A ProviderConfig configures a Template provider.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              credentials:
                description: |-
                  Credentials used to connect to the Kubernetes API. Typically a
                  kubeconfig file. Use InjectedIdentity for in-cluster config.
                properties:
                  env:
                    description: |-
                      Env is a reference to an environment variable that contains credentials
                      that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: |-
                      Fs is a reference to a filesystem location that contains credentials that
                      must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: |-
                      A SecretRef is a reference to a secret key that contains the credentials
                      that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
              identity:
                description: |-
                  Identity used to authenticate to the Kubernetes API. The identity
                  credentials can be used to supplement kubeconfig 'credentials', for
                  example by configuring a bearer token source such as OAuth.
                properties:
                  env:
                    description: |-
                      Env is a reference to an environment variable that contains credentials
                      that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: |-
                      Fs is a reference to a filesystem location that contains credentials that
                      must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: |-
                      A SecretRef is a reference to a secret key that contains the credentials
                      that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                  type:
                    description: Type of identity.
                    enum:
                    - GoogleApplicationCredentials
                    - AzureServicePrincipalCredentials
                    - AzureWorkloadIdentityCredentials
                    - UpboundTokens
                    type: string
                required:
                - source
                - type
                type: object
            required:
            - credentials
            type: object
          status:
            description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - provider
    - kubernetes
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: providerconfigusages.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1128"
  uid: 8265357b-4529-432a-b12c-b3855bc95435
spec:
  conversion:
    strategy: None
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - github
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: |-
                      Resolution specifies whether resolution of this reference is required.
                      The default is 'Required', which means the reconcile will fail if the
                      reference cannot be resolved. 'Optional' means this reference will be
                      a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: |-
                      Resolve specifies when this reference should be resolved. The default
                      is 'IfNotPresent', which will attempt to resolve the reference only when
                      the corresponding field is not present. Use 'Always' to resolve the
                      reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - provider
    - github
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:18Z"
  generation: 1
  name: providerconfigusages.kubernetes.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-kubernetes-101d5a6d80d3
    uid: de2f467c-5c35-4e92-ac8c-31c92be7400a
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-kubernetes
    uid: 05b49394-1de4-4c54-a724-94365a2e22d3
  resourceVersion: "831"
  uid: 06465d48-7e55-4694-891b-1c754f97e2ee
spec:
  conversion:
    strategy: None
  group: kubernetes.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - kubernetes
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: |-
                      Resolution specifies whether resolution of this reference is required.
                      The default is 'Required', which means the reconcile will fail if the
                      reference cannot be resolved. 'Optional' means this reference will be
                      a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: |-
                      Resolve specifies when this reference should be resolved. The default
                      is 'IfNotPresent', which will attempt to resolve the reference only when
                      the corresponding field is not present. Use 'Always' to resolve the
                      reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - provider
    - kubernetes
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:18Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: providerrevisions.pkg.crossplane.io
  resourceVersion: "609"
  uid: fdc5138b-50d3-4152-ac29-a34633cf5630
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkgrev
    kind: ProviderRevision
    listKind: ProviderRevisionList
    plural: providerrevisions
    singular: providerrevision
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.revision
      name: REVISION
      type: string
    - jsonPath: .spec.image
      name: IMAGE
      type: string
    - jsonPath: .spec.desiredState
      name: STATE
      type: string
    - jsonPath: .status.foundDependencies
      name: DEP-FOUND
      type: string
    - jsonPath: .status.installedDependencies
      name: DEP-INSTALLED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A ProviderRevision represents a revision of a Provider. Crossplane
          creates new revisions when there are changes to a Provider.


          Crossplane creates and manages ProviderRevisions. Don't directly edit
          ProviderRevisions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProviderRevisionSpec specifies configuration for a ProviderRevision.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              controllerConfigRef:
                description: |-
                  ControllerConfigRef references a ControllerConfig resource that will be
                  used to configure the packaged controller Deployment.
                  Deprecated: Use RuntimeConfigReference instead.
                properties:
                  name:
                    description: Name of the ControllerConfig.
                    type: string
                required:
                - name
                type: object
              desiredState:
                description: DesiredState of the PackageRevision. Can be either Active
                  or Inactive.
                type: string
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              image:
                description: Package image used by install Pod to extract package
                  contents.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package. It is also
                  applied to any images pulled for the package, such as a provider's
                  controller image.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be
                  used to fetch packages from private registries. They are also applied to
                  any images pulled for the package, such as a provider's controller image.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revision:
                description: |-
                  Revision number. Indicates when the revision will be garbage collected
                  based on the parent's RevisionHistoryLimit.
                format: int64
                type: integer
              runtimeConfigRef:
                default:
                  name: default
                description: |-
                  RuntimeConfigRef references a RuntimeConfig resource that will be used
                  to configure the package runtime.
                properties:
                  apiVersion:
                    default: pkg.crossplane.io/v1beta1
                    description: API version of the referent.
                    type: string
                  kind:
                    default: DeploymentRuntimeConfig
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the RuntimeConfig.
                    type: string
                required:
                - name
                type: object
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
              tlsClientSecretName:
                description: |-
                  TLSClientSecretName is the name of the TLS Secret that stores client
                  certificates of the Provider.
                type: string
              tlsServerSecretName:
                description: |-
                  TLSServerSecretName is the name of the TLS Secret that stores server
                  certificates of the Provider.
                type: string
            required:
            - desiredState
            - image
            - revision
            type: object
          status:
            description: PackageRevisionStatus represents the observed state of a
              PackageRevision.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              foundDependencies:
                description: Dependency information.
                format: int64
                type: integer
              installedDependencies:
                format: int64
                type: integer
              invalidDependencies:
                format: int64
                type: integer
              objectRefs:
                description: References to objects owned by PackageRevision.
                items:
                  description: |-
                    A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                    commonly used to reference cluster-scoped objects or objects where the
                    namespace is already known.
                  properties:
                    apiVersion:
                      description: APIVersion of the referenced object.
                      type: string
                    kind:
                      description: Kind of the referenced object.
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                    uid:
                      description: UID of the referenced object.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
              permissionRequests:
                description: |-
                  PermissionRequests made by this package. The package declares that its
                  controller needs these permissions to run. The RBAC manager is
                  responsible for granting them.
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names
                        that the rule applies to.  An empty set means that everything
                        is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the
                        ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkgrev
    kind: ProviderRevision
    listKind: ProviderRevisionList
    plural: providerrevisions
    singular: providerrevision
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: providers.pkg.crossplane.io
  resourceVersion: "610"
  uid: acb121ee-b745-4c2a-afdc-9178798639d4
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
    - crossplane
    - pkg
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Installed')].status
      name: INSTALLED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Healthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .spec.package
      name: PACKAGE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          A Provider installs an OCI compatible Crossplane package, extending
          Crossplane with support for new kinds of managed resources.


          Read the Crossplane documentation for
          [more information about Providers](https://docs.crossplane.io/latest/concepts/providers).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ProviderSpec specifies details about a request to install a provider to
              Crossplane.
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: |-
                  Map of string keys and values that can be used to organize and categorize
                  (scope and select) objects. May match selectors of replication controllers
                  and services.
                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                type: object
              controllerConfigRef:
                description: |-
                  ControllerConfigRef references a ControllerConfig resource that will be
                  used to configure the packaged controller Deployment.
                  Deprecated: Use RuntimeConfigReference instead.
                properties:
                  name:
                    description: Name of the ControllerConfig.
                    type: string
                required:
                - name
                type: object
              ignoreCrossplaneConstraints:
                default: false
                description: |-
                  IgnoreCrossplaneConstraints indicates to the package manager whether to
                  honor Crossplane version constrains specified by the package.
                  Default is false.
                type: boolean
              package:
                description: Package is the name of the package that is being requested.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: |-
                  PackagePullPolicy defines the pull policy for the package.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: |-
                  PackagePullSecrets are named secrets in the same namespace that can be used
                  to fetch packages from private registries.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              revisionActivationPolicy:
                default: Automatic
                description: |-
                  RevisionActivationPolicy specifies how the package controller should
                  update from one revision to the next. Options are Automatic or Manual.
                  Default is Automatic.
                type: string
              revisionHistoryLimit:
                default: 1
                description: |-
                  RevisionHistoryLimit dictates how the package controller cleans up old
                  inactive package revisions.
                  Defaults to 1. Can be disabled by explicitly setting to 0.
                format: int64
                type: integer
              runtimeConfigRef:
                default:
                  name: default
                description: |-
                  RuntimeConfigRef references a RuntimeConfig resource that will be used
                  to configure the package runtime.
                properties:
                  apiVersion:
                    default: pkg.crossplane.io/v1beta1
                    description: API version of the referent.
                    type: string
                  kind:
                    default: DeploymentRuntimeConfig
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the RuntimeConfig.
                    type: string
                required:
                - name
                type: object
              skipDependencyResolution:
                default: false
                description: |-
                  SkipDependencyResolution indicates to the package manager whether to skip
                  resolving dependencies for a package. Setting this value to true may have
                  unintended consequences.
                  Default is false.
                type: boolean
            required:
            - package
            type: object
          status:
            description: ProviderStatus represents the observed state of a Provider.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentIdentifier:
                description: |-
                  CurrentIdentifier is the most recent package source that was used to
                  produce a revision. The package manager uses this field to determine
                  whether to check for package updates for a given source when
                  packagePullPolicy is set to IfNotPresent. Manually removing this field
                  will cause the package manager to check that the current revision is
                  correct for the given package source.
                type: string
              currentRevision:
                description: |-
                  CurrentRevision is the name of the current package revision. It will
                  reflect the most up to date revision, whether it has been activated or
                  not.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - pkg
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: pullrequests.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1173"
  uid: 67b96140-f6f4-4920-a496-2474ea0e0489
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PullRequest is the Schema for the PullRequests API. Get information
          on a single GitHub Pull Request.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PullRequestSpec defines the desired state of PullRequest
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseRepositoryRef:
                    description: Reference to a Repository in repo to populate baseRepository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  baseRepositorySelector:
                    description: Selector for a Repository in repo to populate baseRepository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headRefRef:
                    description: Reference to a Branch in repo to populate headRef.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  headRefSelector:
                    description: Selector for a Branch in repo to populate headRef.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseRepositoryRef:
                    description: Reference to a Repository in repo to populate baseRepository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  baseRepositorySelector:
                    description: Selector for a Repository in repo to populate baseRepository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headRefRef:
                    description: Reference to a Branch in repo to populate headRef.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  headRefSelector:
                    description: Selector for a Branch in repo to populate headRef.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.baseRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.baseRef)
                || (has(self.initProvider) && has(self.initProvider.baseRef))'
            - message: spec.forProvider.title is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.title)
                || (has(self.initProvider) && has(self.initProvider.title))'
          status:
            description: PullRequestStatus defines the observed state of PullRequest.
            properties:
              atProvider:
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseSha:
                    description: |-
                      Head commit SHA of the Pull Request base.
                      Head commit SHA of the Pull Request base.
                    type: string
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  draft:
                    description: |-
                      Indicates Whether this Pull Request is a draft.
                      Indicates Whether this Pull Request is a draft.
                    type: boolean
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headSha:
                    description: |-
                      Head commit SHA of the Pull Request head.
                      Head commit SHA of the Pull Request head.
                    type: string
                  id:
                    type: string
                  labels:
                    description: |-
                      List of label names set on the Pull Request.
                      List of names of labels on the PR
                    items:
                      type: string
                    type: array
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  number:
                    description: |-
                      The number of the Pull Request within the repository.
                      The number of the Pull Request within the repository.
                    type: number
                  openedAt:
                    description: |-
                      Unix timestamp indicating the Pull Request creation time.
                      Unix timestamp indicating the Pull Request creation time.
                    type: number
                  openedBy:
                    description: |-
                      GitHub login of the user who opened the Pull Request.
                      Username of the PR creator
                    type: string
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  state:
                    description: |-
                      the current Pull Request state - can be "open", "closed" or "merged".
                      The current Pull Request state - can be 'open', 'closed' or 'merged'.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                  updatedAt:
                    description: |-
                      The timestamp of the last Pull Request update.
                      The timestamp of the last Pull Request update.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: repositories.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1184"
  uid: 0f08ec9f-1557-4c45-8b0b-5349ed703083
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositorys API. Creates and
          manages repositories within GitHub organizations or personal accounts
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      Set to false to disable merge commits on the repository.
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      Set to false to disable squash merges on the repository.
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      Set to false to disable merge commits on the repository.
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      Set to false to disable squash merges on the repository.
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: RepositoryStatus defines the observed state of Repository.
            properties:
              atProvider:
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      Set to false to disable merge commits on the repository.
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      Set to false to disable squash merges on the repository.
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  etag:
                    type: string
                  fullName:
                    description: |-
                      A string of the form "orgname/reponame".
                      A string of the form 'orgname/reponame'.
                    type: string
                  gitCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository anonymously via the git protocol.
                      URL that can be provided to 'git clone' to clone the repository anonymously via the git protocol.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  htmlUrl:
                    description: |-
                      URL to the repository on the web.
                      URL to the repository on the web.
                    type: string
                  httpCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository via HTTPS.
                      URL that can be provided to 'git clone' to clone the repository via HTTPS.
                    type: string
                  id:
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  nodeId:
                    description: |-
                      GraphQL global node id for use with v4 API
                      GraphQL global node id for use with v4 API.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        custom404:
                          description: |-
                            Whether the rendered GitHub Pages site has a custom 404 page.
                            Whether the rendered GitHub Pages site has a custom 404 page
                          type: boolean
                        htmlUrl:
                          description: |-
                            URL to the repository on the web.
                            URL to the repository on the web.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                        status:
                          description: |-
                            Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                            The GitHub Pages site's build status e.g. building or built.
                          type: string
                        url:
                          type: string
                      type: object
                    type: array
                  primaryLanguage:
                    description: The primary language used in the repository.
                    type: string
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  repoId:
                    description: |-
                      GitHub ID for the repository
                      GitHub ID for the repository.
                    type: number
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  sshCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository via SSH.
                      URL that can be provided to 'git clone' to clone the repository via SSH.
                    type: string
                  svnUrl:
                    description: |-
                      URL that can be provided to svn checkout to check out the repository via GitHub's Subversion protocol emulation.
                      URL that can be provided to 'svn checkout' to check out the repository via GitHub's Subversion protocol emulation.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: repositoryfiles.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1163"
  uid: 0ac228c6-cfd6-49f8-bfea-688941edcf96
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryFile
    listKind: RepositoryFileList
    plural: repositoryfiles
    singular: repositoryfile
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryFile is the Schema for the RepositoryFiles API. Creates
          and manages files within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryFileSpec defines the desired state of RepositoryFile
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  branchRef:
                    description: Reference to a Branch to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      Commit message when adding or updating the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  branchRef:
                    description: Reference to a Branch to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      Commit message when adding or updating the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.content is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.content)
                || (has(self.initProvider) && has(self.initProvider.content))'
            - message: spec.forProvider.file is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.file)
                || (has(self.initProvider) && has(self.initProvider.file))'
          status:
            description: RepositoryFileStatus defines the observed state of RepositoryFile.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      Commit message when adding or updating the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  commitSha:
                    description: |-
                      The SHA of the commit that modified the file.
                      The SHA of the commit that modified the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  id:
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  ref:
                    description: |-
                      The name of the commit/branch/tag.
                      The name of the commit/branch/tag
                    type: string
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  sha:
                    description: |-
                      The SHA blob of the file.
                      The blob SHA of the file
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryFile
    listKind: RepositoryFileList
    plural: repositoryfiles
    singular: repositoryfile
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: repositorywebhooks.repo.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1177"
  uid: fffbadf7-8697-497a-9bbd-b65061f2de05
spec:
  conversion:
    strategy: None
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryWebhook
    listKind: RepositoryWebhookList
    plural: repositorywebhooks
    singular: repositorywebhook
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryWebhook is the Schema for the RepositoryWebhooks API.
          Creates and manages repository webhooks within GitHub organizations or personal
          accounts
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryWebhookSpec defines the desired state of RepositoryWebhook
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                        secretSecretRef:
                          description: |-
                            The shared secret for the webhook. See API documentation.
                            The shared secret for the webhook
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        urlSecretRef:
                          description: |-
                            The URL of the webhook.
                            The URL of the webhook.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - urlSecretRef
                      type: object
                    type: array
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    type: string
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                      type: object
                    type: array
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    type: string
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.events is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.events)
                || (has(self.initProvider) && has(self.initProvider.events))'
          status:
            description: RepositoryWebhookStatus defines the observed state of RepositoryWebhook.
            properties:
              atProvider:
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                      type: object
                    type: array
                  etag:
                    type: string
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  name:
                    type: string
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  url:
                    description: |-
                      URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
                      Configuration block for the webhook
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryWebhook
    listKind: RepositoryWebhookList
    plural: repositorywebhooks
    singular: repositorywebhook
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  creationTimestamp: "2024-08-14T07:11:09Z"
  generation: 1
  name: resources.pt.fn.crossplane.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: FunctionRevision
    name: function-patch-and-transform-201f894df2f6
    uid: ecdb7a7f-621b-4d75-91f9-a35374a9f708
  - apiVersion: pkg.crossplane.io/v1beta1
    blockOwnerDeletion: true
    controller: false
    kind: Function
    name: function-patch-and-transform
    uid: 2a836f31-f149-47ad-876b-34d7cb5098cc
  resourceVersion: "1385"
  uid: 522a1163-92bf-4f73-9075-e6cdfd805d34
spec:
  conversion:
    strategy: None
  group: pt.fn.crossplane.io
  names:
    categories:
    - crossplane
    kind: Resources
    listKind: ResourcesList
    plural: resources
    singular: resources
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Resources specifies Patch & Transform resource templates.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          environment:
            description: "Environment represents the Composition environment. \n THIS
              IS AN ALPHA FIELD. Do not use it in production. It may be changed or
              removed without notice."
            properties:
              patches:
                description: Patches is a list of environment patches that are executed
                  before a composition's resources are composed. These patches are
                  between the XR and the Environment. Either from the Environment
                  to the XR, or vice versa.
                items:
                  description: Patch objects are applied between composite and composed
                    resources. Their behaviour depends on the Type selected. The default
                    Type, FromCompositeFieldPath, copies a value from the composite
                    resource to the composed resource, applying any defined transformers.
                  properties:
                    combine:
                      description: Combine is the patch configuration for a CombineFromComposite,
                        CombineToComposite patch.
                      properties:
                        strategy:
                          description: Strategy defines the strategy to use to combine
                            the input variable values. Currently only string is supported.
                          enum:
                          - string
                          type: string
                        string:
                          description: String declares that input variables should
                            be combined into a single string, using the relevant settings
                            for formatting purposes.
                          properties:
                            fmt:
                              description: Format the input using a Go format string.
                                See https://golang.org/pkg/fmt/ for details.
                              type: string
                          required:
                          - fmt
                          type: object
                        variables:
                          description: Variables are the list of variables whose values
                            will be retrieved and combined.
                          items:
                            description: A CombineVariable defines the source of a
                              value that is combined with others to form and patch
                              an output value. Currently, this only supports retrieving
                              values from a field path.
                            properties:
                              fromFieldPath:
                                description: FromFieldPath is the path of the field
                                  on the source whose value is to be used as input.
                                type: string
                            required:
                            - fromFieldPath
                            type: object
                          minItems: 1
                          type: array
                      required:
                      - strategy
                      - variables
                      type: object
                    fromFieldPath:
                      description: FromFieldPath is the path of the field on the resource
                        whose value is to be used as input. Required when type is
                        FromCompositeFieldPath or ToCompositeFieldPath.
                      type: string
                    patchSetName:
                      description: PatchSetName to include patches from. Required
                        when type is PatchSet.
                      type: string
                    policy:
                      description: Policy configures the specifics of patching behaviour.
                      properties:
                        fromFieldPath:
                          description: FromFieldPath specifies how to patch from a
                            field path. The default is 'Optional', which means the
                            patch will be a no-op if the specified fromFieldPath does
                            not exist. Use 'Required' if the patch should fail if
                            the specified path does not exist.
                          enum:
                          - Optional
                          - Required
                          type: string
                      type: object
                    toFieldPath:
                      description: ToFieldPath is the path of the field on the resource
                        whose value will be changed with the result of transforms.
                        Leave empty if you'd like to propagate to the same path as
                        fromFieldPath.
                      type: string
                    transforms:
                      description: Transforms are the list of functions that are used
                        as a FIFO pipe for the input to be transformed.
                      items:
                        description: Transform is a unit of process whose input is
                          transformed into an output with the supplied configuration.
                        properties:
                          convert:
                            description: Convert is used to cast the input into the
                              given output type.
                            properties:
                              format:
                                description: "The expected input format. \n * `quantity`
                                  - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                  Only used during `string -> float64` conversions.
                                  * `json` - parses the input as a JSON string. Only
                                  used during `string -> object` or `string -> list`
                                  conversions. \n If this property is null, the default
                                  conversion is applied."
                                enum:
                                - none
                                - quantity
                                - json
                                type: string
                              toType:
                                description: ToType is the type of the output of this
                                  transform.
                                enum:
                                - string
                                - int
                                - int64
                                - bool
                                - float64
                                - object
                                - array
                                type: string
                            required:
                            - toType
                            type: object
                          map:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            description: Map uses the input as a key in the given
                              map and returns the value.
                            type: object
                          match:
                            description: Match is a more complex version of Map that
                              matches a list of patterns.
                            properties:
                              fallbackTo:
                                default: Value
                                description: Determines to what value the transform
                                  should fallback if no pattern matches.
                                enum:
                                - Value
                                - Input
                                type: string
                              fallbackValue:
                                description: The fallback value that should be returned
                                  by the transform if now pattern matches.
                                x-kubernetes-preserve-unknown-fields: true
                              patterns:
                                description: The patterns that should be tested against
                                  the input string. Patterns are tested in order.
                                  The value of the first match is used as result of
                                  this transform.
                                items:
                                  description: MatchTransformPattern is a transform
                                    that returns the value that matches a pattern.
                                  properties:
                                    literal:
                                      description: Literal exactly matches the input
                                        string (case sensitive). Is required if `type`
                                        is `literal`.
                                      type: string
                                    regexp:
                                      description: Regexp to match against the input
                                        string. Is required if `type` is `regexp`.
                                      type: string
                                    result:
                                      description: The value that is used as result
                                        of the transform if the pattern matches.
                                      x-kubernetes-preserve-unknown-fields: true
                                    type:
                                      default: literal
                                      description: "Type specifies how the pattern
                                        matches the input. \n * `literal` - the pattern
                                        value has to exactly match (case sensitive)
                                        the input string. This is the default. \n
                                        * `regexp` - the pattern treated as a regular
                                        expression against which the input string
                                        is tested. Crossplane will throw an error
                                        if the key is not a valid regexp."
                                      enum:
                                      - literal
                                      - regexp
                                      type: string
                                  required:
                                  - result
                                  - type
                                  type: object
                                type: array
                            type: object
                          math:
                            description: Math is used to transform the input via mathematical
                              operations such as multiplication.
                            properties:
                              clampMax:
                                description: ClampMax makes sure that the value is
                                  not bigger than the given value.
                                format: int64
                                type: integer
                              clampMin:
                                description: ClampMin makes sure that the value is
                                  not smaller than the given value.
                                format: int64
                                type: integer
                              multiply:
                                description: Multiply the value.
                                format: int64
                                type: integer
                              type:
                                default: Multiply
                                description: Type of the math transform to be run.
                                enum:
                                - Multiply
                                - ClampMin
                                - ClampMax
                                type: string
                            type: object
                          string:
                            description: String is used to transform the input into
                              a string or a different kind of string. Note that the
                              input does not necessarily need to be a string.
                            properties:
                              convert:
                                description: Optional conversion method to be specified.
                                  `ToUpper` and `ToLower` change the letter case of
                                  the input string. `ToBase64` and `FromBase64` perform
                                  a base64 conversion based on the input string. `ToJson`
                                  converts any input value into its raw JSON representation.
                                  `ToSha1`, `ToSha256` and `ToSha512` generate a hash
                                  value based on the input converted to JSON.
                                enum:
                                - ToUpper
                                - ToLower
                                - ToBase64
                                - FromBase64
                                - ToJson
                                - ToSha1
                                - ToSha256
                                - ToSha512
                                type: string
                              fmt:
                                description: Format the input using a Go format string.
                                  See https://golang.org/pkg/fmt/ for details.
                                type: string
                              regexp:
                                description: Extract a match from the input using
                                  a regular expression.
                                properties:
                                  group:
                                    description: Group number to match. 0 (the default)
                                      matches the entire expression.
                                    type: integer
                                  match:
                                    description: Match string. May optionally include
                                      submatches, aka capture groups. See https://pkg.go.dev/regexp/
                                      for details.
                                    type: string
                                required:
                                - match
                                type: object
                              trim:
                                description: Trim the prefix or suffix from the input
                                type: string
                              type:
                                default: Format
                                description: Type of the string transform to be run.
                                enum:
                                - Format
                                - Convert
                                - TrimPrefix
                                - TrimSuffix
                                - Regexp
                                type: string
                            type: object
                          type:
                            description: Type of the transform to be run.
                            enum:
                            - map
                            - match
                            - math
                            - string
                            - convert
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                    type:
                      default: FromCompositeFieldPath
                      description: Type sets the patching behaviour to be used. Each
                        patch type may require its own fields to be set on the Patch
                        object.
                      enum:
                      - FromCompositeFieldPath
                      - PatchSet
                      - ToCompositeFieldPath
                      - CombineFromComposite
                      - CombineToComposite
                      type: string
                  type: object
                type: array
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          patchSets:
            description: PatchSets define a named set of patches that may be included
              by any resource. PatchSets cannot themselves refer to other PatchSets.
            items:
              description: A PatchSet is a set of patches that can be reused from
                all resources.
              properties:
                name:
                  description: Name of this PatchSet.
                  type: string
                patches:
                  description: Patches will be applied as an overlay to the base resource.
                  items:
                    description: Patch objects are applied between composite and composed
                      resources. Their behaviour depends on the Type selected. The
                      default Type, FromCompositeFieldPath, copies a value from the
                      composite resource to the composed resource, applying any defined
                      transformers.
                    properties:
                      combine:
                        description: Combine is the patch configuration for a CombineFromComposite,
                          CombineToComposite patch.
                        properties:
                          strategy:
                            description: Strategy defines the strategy to use to combine
                              the input variable values. Currently only string is
                              supported.
                            enum:
                            - string
                            type: string
                          string:
                            description: String declares that input variables should
                              be combined into a single string, using the relevant
                              settings for formatting purposes.
                            properties:
                              fmt:
                                description: Format the input using a Go format string.
                                  See https://golang.org/pkg/fmt/ for details.
                                type: string
                            required:
                            - fmt
                            type: object
                          variables:
                            description: Variables are the list of variables whose
                              values will be retrieved and combined.
                            items:
                              description: A CombineVariable defines the source of
                                a value that is combined with others to form and patch
                                an output value. Currently, this only supports retrieving
                                values from a field path.
                              properties:
                                fromFieldPath:
                                  description: FromFieldPath is the path of the field
                                    on the source whose value is to be used as input.
                                  type: string
                              required:
                              - fromFieldPath
                              type: object
                            minItems: 1
                            type: array
                        required:
                        - strategy
                        - variables
                        type: object
                      fromFieldPath:
                        description: FromFieldPath is the path of the field on the
                          resource whose value is to be used as input. Required when
                          type is FromCompositeFieldPath or ToCompositeFieldPath.
                        type: string
                      patchSetName:
                        description: PatchSetName to include patches from. Required
                          when type is PatchSet.
                        type: string
                      policy:
                        description: Policy configures the specifics of patching behaviour.
                        properties:
                          fromFieldPath:
                            description: FromFieldPath specifies how to patch from
                              a field path. The default is 'Optional', which means
                              the patch will be a no-op if the specified fromFieldPath
                              does not exist. Use 'Required' if the patch should fail
                              if the specified path does not exist.
                            enum:
                            - Optional
                            - Required
                            type: string
                        type: object
                      toFieldPath:
                        description: ToFieldPath is the path of the field on the resource
                          whose value will be changed with the result of transforms.
                          Leave empty if you'd like to propagate to the same path
                          as fromFieldPath.
                        type: string
                      transforms:
                        description: Transforms are the list of functions that are
                          used as a FIFO pipe for the input to be transformed.
                        items:
                          description: Transform is a unit of process whose input
                            is transformed into an output with the supplied configuration.
                          properties:
                            convert:
                              description: Convert is used to cast the input into
                                the given output type.
                              properties:
                                format:
                                  description: "The expected input format. \n * `quantity`
                                    - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                    Only used during `string -> float64` conversions.
                                    * `json` - parses the input as a JSON string.
                                    Only used during `string -> object` or `string
                                    -> list` conversions. \n If this property is null,
                                    the default conversion is applied."
                                  enum:
                                  - none
                                  - quantity
                                  - json
                                  type: string
                                toType:
                                  description: ToType is the type of the output of
                                    this transform.
                                  enum:
                                  - string
                                  - int
                                  - int64
                                  - bool
                                  - float64
                                  - object
                                  - array
                                  type: string
                              required:
                              - toType
                              type: object
                            map:
                              additionalProperties:
                                x-kubernetes-preserve-unknown-fields: true
                              description: Map uses the input as a key in the given
                                map and returns the value.
                              type: object
                            match:
                              description: Match is a more complex version of Map
                                that matches a list of patterns.
                              properties:
                                fallbackTo:
                                  default: Value
                                  description: Determines to what value the transform
                                    should fallback if no pattern matches.
                                  enum:
                                  - Value
                                  - Input
                                  type: string
                                fallbackValue:
                                  description: The fallback value that should be returned
                                    by the transform if now pattern matches.
                                  x-kubernetes-preserve-unknown-fields: true
                                patterns:
                                  description: The patterns that should be tested
                                    against the input string. Patterns are tested
                                    in order. The value of the first match is used
                                    as result of this transform.
                                  items:
                                    description: MatchTransformPattern is a transform
                                      that returns the value that matches a pattern.
                                    properties:
                                      literal:
                                        description: Literal exactly matches the input
                                          string (case sensitive). Is required if
                                          `type` is `literal`.
                                        type: string
                                      regexp:
                                        description: Regexp to match against the input
                                          string. Is required if `type` is `regexp`.
                                        type: string
                                      result:
                                        description: The value that is used as result
                                          of the transform if the pattern matches.
                                        x-kubernetes-preserve-unknown-fields: true
                                      type:
                                        default: literal
                                        description: "Type specifies how the pattern
                                          matches the input. \n * `literal` - the
                                          pattern value has to exactly match (case
                                          sensitive) the input string. This is the
                                          default. \n * `regexp` - the pattern treated
                                          as a regular expression against which the
                                          input string is tested. Crossplane will
                                          throw an error if the key is not a valid
                                          regexp."
                                        enum:
                                        - literal
                                        - regexp
                                        type: string
                                    required:
                                    - result
                                    - type
                                    type: object
                                  type: array
                              type: object
                            math:
                              description: Math is used to transform the input via
                                mathematical operations such as multiplication.
                              properties:
                                clampMax:
                                  description: ClampMax makes sure that the value
                                    is not bigger than the given value.
                                  format: int64
                                  type: integer
                                clampMin:
                                  description: ClampMin makes sure that the value
                                    is not smaller than the given value.
                                  format: int64
                                  type: integer
                                multiply:
                                  description: Multiply the value.
                                  format: int64
                                  type: integer
                                type:
                                  default: Multiply
                                  description: Type of the math transform to be run.
                                  enum:
                                  - Multiply
                                  - ClampMin
                                  - ClampMax
                                  type: string
                              type: object
                            string:
                              description: String is used to transform the input into
                                a string or a different kind of string. Note that
                                the input does not necessarily need to be a string.
                              properties:
                                convert:
                                  description: Optional conversion method to be specified.
                                    `ToUpper` and `ToLower` change the letter case
                                    of the input string. `ToBase64` and `FromBase64`
                                    perform a base64 conversion based on the input
                                    string. `ToJson` converts any input value into
                                    its raw JSON representation. `ToSha1`, `ToSha256`
                                    and `ToSha512` generate a hash value based on
                                    the input converted to JSON.
                                  enum:
                                  - ToUpper
                                  - ToLower
                                  - ToBase64
                                  - FromBase64
                                  - ToJson
                                  - ToSha1
                                  - ToSha256
                                  - ToSha512
                                  type: string
                                fmt:
                                  description: Format the input using a Go format
                                    string. See https://golang.org/pkg/fmt/ for details.
                                  type: string
                                regexp:
                                  description: Extract a match from the input using
                                    a regular expression.
                                  properties:
                                    group:
                                      description: Group number to match. 0 (the default)
                                        matches the entire expression.
                                      type: integer
                                    match:
                                      description: Match string. May optionally include
                                        submatches, aka capture groups. See https://pkg.go.dev/regexp/
                                        for details.
                                      type: string
                                  required:
                                  - match
                                  type: object
                                trim:
                                  description: Trim the prefix or suffix from the
                                    input
                                  type: string
                                type:
                                  default: Format
                                  description: Type of the string transform to be
                                    run.
                                  enum:
                                  - Format
                                  - Convert
                                  - TrimPrefix
                                  - TrimSuffix
                                  - Regexp
                                  type: string
                              type: object
                            type:
                              description: Type of the transform to be run.
                              enum:
                              - map
                              - match
                              - math
                              - string
                              - convert
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      type:
                        default: FromCompositeFieldPath
                        description: Type sets the patching behaviour to be used.
                          Each patch type may require its own fields to be set on
                          the Patch object.
                        enum:
                        - FromCompositeFieldPath
                        - PatchSet
                        - ToCompositeFieldPath
                        - CombineFromComposite
                        - CombineToComposite
                        type: string
                    type: object
                  type: array
              required:
              - name
              - patches
              type: object
            type: array
          resources:
            description: Resources is a list of resource templates that will be used
              when a composite resource is created.
            items:
              description: ComposedTemplate is used to provide information about how
                the composed resource should be processed.
              properties:
                base:
                  description: Base of the composed resource that patches will be
                    applied to and from. If base is omitted, a previous Function within
                    the pipeline must have produced the named composed resource. Patches
                    will be applied to and from that resource. If base is specified,
                    and a previous Function within the pipeline produced the name
                    composed resource, it will be overwritten.
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                connectionDetails:
                  description: ConnectionDetails lists the propagation secret keys
                    from this composed resource to the composition instance connection
                    secret.
                  items:
                    description: ConnectionDetail includes the information about the
                      propagation of the connection information from one secret to
                      another.
                    properties:
                      fromConnectionSecretKey:
                        description: FromConnectionSecretKey is the key that will
                          be used to fetch the value from the composed resource's
                          connection secret.
                        type: string
                      fromFieldPath:
                        description: FromFieldPath is the path of the field on the
                          composed resource whose value to be used as input. Name
                          must be specified if the type is FromFieldPath.
                        type: string
                      name:
                        description: Name of the connection secret key that will be
                          propagated to the connection secret of the composed resource.
                        type: string
                      type:
                        description: Type sets the connection detail fetching behavior
                          to be used. Each connection detail type may require its
                          own fields to be set on the ConnectionDetail object.
                        enum:
                        - FromConnectionSecretKey
                        - FromFieldPath
                        - FromValue
                        type: string
                      value:
                        description: Value that will be propagated to the connection
                          secret of the composite resource. May be set to inject a
                          fixed, non-sensitive connection secret value, for example
                          a well-known port.
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  type: array
                name:
                  description: A Name uniquely identifies this entry within its resources
                    array.
                  type: string
                patches:
                  description: Patches to and from the composed resource.
                  items:
                    description: Patch objects are applied between composite and composed
                      resources. Their behaviour depends on the Type selected. The
                      default Type, FromCompositeFieldPath, copies a value from the
                      composite resource to the composed resource, applying any defined
                      transformers.
                    properties:
                      combine:
                        description: Combine is the patch configuration for a CombineFromComposite,
                          CombineToComposite patch.
                        properties:
                          strategy:
                            description: Strategy defines the strategy to use to combine
                              the input variable values. Currently only string is
                              supported.
                            enum:
                            - string
                            type: string
                          string:
                            description: String declares that input variables should
                              be combined into a single string, using the relevant
                              settings for formatting purposes.
                            properties:
                              fmt:
                                description: Format the input using a Go format string.
                                  See https://golang.org/pkg/fmt/ for details.
                                type: string
                            required:
                            - fmt
                            type: object
                          variables:
                            description: Variables are the list of variables whose
                              values will be retrieved and combined.
                            items:
                              description: A CombineVariable defines the source of
                                a value that is combined with others to form and patch
                                an output value. Currently, this only supports retrieving
                                values from a field path.
                              properties:
                                fromFieldPath:
                                  description: FromFieldPath is the path of the field
                                    on the source whose value is to be used as input.
                                  type: string
                              required:
                              - fromFieldPath
                              type: object
                            minItems: 1
                            type: array
                        required:
                        - strategy
                        - variables
                        type: object
                      fromFieldPath:
                        description: FromFieldPath is the path of the field on the
                          resource whose value is to be used as input. Required when
                          type is FromCompositeFieldPath or ToCompositeFieldPath.
                        type: string
                      patchSetName:
                        description: PatchSetName to include patches from. Required
                          when type is PatchSet.
                        type: string
                      policy:
                        description: Policy configures the specifics of patching behaviour.
                        properties:
                          fromFieldPath:
                            description: FromFieldPath specifies how to patch from
                              a field path. The default is 'Optional', which means
                              the patch will be a no-op if the specified fromFieldPath
                              does not exist. Use 'Required' if the patch should fail
                              if the specified path does not exist.
                            enum:
                            - Optional
                            - Required
                            type: string
                        type: object
                      toFieldPath:
                        description: ToFieldPath is the path of the field on the resource
                          whose value will be changed with the result of transforms.
                          Leave empty if you'd like to propagate to the same path
                          as fromFieldPath.
                        type: string
                      transforms:
                        description: Transforms are the list of functions that are
                          used as a FIFO pipe for the input to be transformed.
                        items:
                          description: Transform is a unit of process whose input
                            is transformed into an output with the supplied configuration.
                          properties:
                            convert:
                              description: Convert is used to cast the input into
                                the given output type.
                              properties:
                                format:
                                  description: "The expected input format. \n * `quantity`
                                    - parses the input as a K8s [`resource.Quantity`](https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity).
                                    Only used during `string -> float64` conversions.
                                    * `json` - parses the input as a JSON string.
                                    Only used during `string -> object` or `string
                                    -> list` conversions. \n If this property is null,
                                    the default conversion is applied."
                                  enum:
                                  - none
                                  - quantity
                                  - json
                                  type: string
                                toType:
                                  description: ToType is the type of the output of
                                    this transform.
                                  enum:
                                  - string
                                  - int
                                  - int64
                                  - bool
                                  - float64
                                  - object
                                  - array
                                  type: string
                              required:
                              - toType
                              type: object
                            map:
                              additionalProperties:
                                x-kubernetes-preserve-unknown-fields: true
                              description: Map uses the input as a key in the given
                                map and returns the value.
                              type: object
                            match:
                              description: Match is a more complex version of Map
                                that matches a list of patterns.
                              properties:
                                fallbackTo:
                                  default: Value
                                  description: Determines to what value the transform
                                    should fallback if no pattern matches.
                                  enum:
                                  - Value
                                  - Input
                                  type: string
                                fallbackValue:
                                  description: The fallback value that should be returned
                                    by the transform if now pattern matches.
                                  x-kubernetes-preserve-unknown-fields: true
                                patterns:
                                  description: The patterns that should be tested
                                    against the input string. Patterns are tested
                                    in order. The value of the first match is used
                                    as result of this transform.
                                  items:
                                    description: MatchTransformPattern is a transform
                                      that returns the value that matches a pattern.
                                    properties:
                                      literal:
                                        description: Literal exactly matches the input
                                          string (case sensitive). Is required if
                                          `type` is `literal`.
                                        type: string
                                      regexp:
                                        description: Regexp to match against the input
                                          string. Is required if `type` is `regexp`.
                                        type: string
                                      result:
                                        description: The value that is used as result
                                          of the transform if the pattern matches.
                                        x-kubernetes-preserve-unknown-fields: true
                                      type:
                                        default: literal
                                        description: "Type specifies how the pattern
                                          matches the input. \n * `literal` - the
                                          pattern value has to exactly match (case
                                          sensitive) the input string. This is the
                                          default. \n * `regexp` - the pattern treated
                                          as a regular expression against which the
                                          input string is tested. Crossplane will
                                          throw an error if the key is not a valid
                                          regexp."
                                        enum:
                                        - literal
                                        - regexp
                                        type: string
                                    required:
                                    - result
                                    - type
                                    type: object
                                  type: array
                              type: object
                            math:
                              description: Math is used to transform the input via
                                mathematical operations such as multiplication.
                              properties:
                                clampMax:
                                  description: ClampMax makes sure that the value
                                    is not bigger than the given value.
                                  format: int64
                                  type: integer
                                clampMin:
                                  description: ClampMin makes sure that the value
                                    is not smaller than the given value.
                                  format: int64
                                  type: integer
                                multiply:
                                  description: Multiply the value.
                                  format: int64
                                  type: integer
                                type:
                                  default: Multiply
                                  description: Type of the math transform to be run.
                                  enum:
                                  - Multiply
                                  - ClampMin
                                  - ClampMax
                                  type: string
                              type: object
                            string:
                              description: String is used to transform the input into
                                a string or a different kind of string. Note that
                                the input does not necessarily need to be a string.
                              properties:
                                convert:
                                  description: Optional conversion method to be specified.
                                    `ToUpper` and `ToLower` change the letter case
                                    of the input string. `ToBase64` and `FromBase64`
                                    perform a base64 conversion based on the input
                                    string. `ToJson` converts any input value into
                                    its raw JSON representation. `ToSha1`, `ToSha256`
                                    and `ToSha512` generate a hash value based on
                                    the input converted to JSON.
                                  enum:
                                  - ToUpper
                                  - ToLower
                                  - ToBase64
                                  - FromBase64
                                  - ToJson
                                  - ToSha1
                                  - ToSha256
                                  - ToSha512
                                  type: string
                                fmt:
                                  description: Format the input using a Go format
                                    string. See https://golang.org/pkg/fmt/ for details.
                                  type: string
                                regexp:
                                  description: Extract a match from the input using
                                    a regular expression.
                                  properties:
                                    group:
                                      description: Group number to match. 0 (the default)
                                        matches the entire expression.
                                      type: integer
                                    match:
                                      description: Match string. May optionally include
                                        submatches, aka capture groups. See https://pkg.go.dev/regexp/
                                        for details.
                                      type: string
                                  required:
                                  - match
                                  type: object
                                trim:
                                  description: Trim the prefix or suffix from the
                                    input
                                  type: string
                                type:
                                  default: Format
                                  description: Type of the string transform to be
                                    run.
                                  enum:
                                  - Format
                                  - Convert
                                  - TrimPrefix
                                  - TrimSuffix
                                  - Regexp
                                  type: string
                              type: object
                            type:
                              description: Type of the transform to be run.
                              enum:
                              - map
                              - match
                              - math
                              - string
                              - convert
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      type:
                        default: FromCompositeFieldPath
                        description: Type sets the patching behaviour to be used.
                          Each patch type may require its own fields to be set on
                          the Patch object.
                        enum:
                        - FromCompositeFieldPath
                        - PatchSet
                        - ToCompositeFieldPath
                        - CombineFromComposite
                        - CombineToComposite
                        type: string
                    type: object
                  type: array
                readinessChecks:
                  default:
                  - matchCondition:
                      status: "True"
                      type: Ready
                    type: MatchCondition
                  description: ReadinessChecks allows users to define custom readiness
                    checks. All checks have to return true in order for resource to
                    be considered ready. The default readiness check is to have the
                    "Ready" condition to be "True".
                  items:
                    description: ReadinessCheck is used to indicate how to tell whether
                      a resource is ready for consumption
                    properties:
                      fieldPath:
                        description: FieldPath shows the path of the field whose value
                          will be used.
                        type: string
                      matchCondition:
                        description: MatchCondition specifies the condition you'd
                          like to match if you're using "MatchCondition" type.
                        properties:
                          status:
                            default: "True"
                            description: Status is the status of the condition you'd
                              like to match.
                            type: string
                          type:
                            default: Ready
                            description: Type indicates the type of condition you'd
                              like to use.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      matchInteger:
                        description: MatchInt is the value you'd like to match if
                          you're using "MatchInt" type.
                        format: int64
                        type: integer
                      matchString:
                        description: MatchString is the value you'd like to match
                          if you're using "MatchString" type.
                        type: string
                      type:
                        description: Type indicates the type of probe you'd like to
                          use.
                        enum:
                        - MatchString
                        - MatchInteger
                        - NonEmpty
                        - MatchCondition
                        - MatchTrue
                        - MatchFalse
                        - None
                        type: string
                    required:
                    - type
                    type: object
                  type: array
              required:
              - name
              type: object
            type: array
        required:
        - resources
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    categories:
    - crossplane
    kind: Resources
    listKind: ResourcesList
    plural: resources
    singular: resources
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:09Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:09Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: storeconfigs.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1149"
  uid: cebcac54-b4da-4c36-921e-8bf7ccad9099
spec:
  conversion:
    strategy: None
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: |-
                  DefaultScope used for scoping secrets for "cluster-scoped" resources.
                  If store type is "Kubernetes", this would mean the default namespace to
                  store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: |-
                  Kubernetes configures a Kubernetes secret store.
                  If the "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: |-
                          Env is a reference to an environment variable that contains credentials
                          that must be used to connect to the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: |-
                          Fs is a reference to a filesystem location that contains credentials that
                          must be used to connect to the provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: |-
                          A SecretRef is a reference to a secret key that contains the credentials
                          that must be used to connect to the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              plugin:
                description: Plugin configures External secret store as a plugin.
                properties:
                  configRef:
                    description: ConfigRef contains store config reference info.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced config.
                        type: string
                      kind:
                        description: Kind of the referenced config.
                        type: string
                      name:
                        description: Name of the referenced config.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                  endpoint:
                    description: Endpoint is the endpoint of the gRPC server.
                    type: string
                type: object
              type:
                default: Kubernetes
                description: |-
                  Type configures which secret store to be used. Only the configuration
                  block for this store will be used and others will be ignored if provided.
                  Default is Kubernetes.
                enum:
                - Kubernetes
                - Vault
                - Plugin
                type: string
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: storeconfigs.secrets.crossplane.io
  resourceVersion: "611"
  uid: 884ff301-3d81-4b51-9212-22753e1f9a88
spec:
  conversion:
    strategy: None
  group: secrets.crossplane.io
  names:
    categories:
    - crossplane
    - store
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A StoreConfig configures how Crossplane controllers should store connection
          details in an external secret store.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a StoreConfig.
            properties:
              defaultScope:
                description: |-
                  DefaultScope used for scoping secrets for "cluster-scoped" resources.
                  If store type is "Kubernetes", this would mean the default namespace to
                  store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: |-
                  Kubernetes configures a Kubernetes secret store.
                  If the "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: |-
                          Env is a reference to an environment variable that contains credentials
                          that must be used to connect to the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: |-
                          Fs is a reference to a filesystem location that contains credentials that
                          must be used to connect to the provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: |-
                          A SecretRef is a reference to a secret key that contains the credentials
                          that must be used to connect to the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              plugin:
                description: Plugin configures External secret store as a plugin.
                properties:
                  configRef:
                    description: ConfigRef contains store config reference info.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced config.
                        type: string
                      kind:
                        description: Kind of the referenced config.
                        type: string
                      name:
                        description: Name of the referenced config.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                  endpoint:
                    description: Endpoint is the endpoint of the gRPC server.
                    type: string
                type: object
              type:
                default: Kubernetes
                description: |-
                  Type configures which secret store to be used. Only the configuration
                  block for this store will be used and others will be ignored if provided.
                  Default is Kubernetes.
                enum:
                - Kubernetes
                - Vault
                - Plugin
                type: string
            required:
            - defaultScope
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - store
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: teammemberships.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1181"
  uid: ba045304-782a-4648-a38f-adde4b1fef10
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamMembership
    listKind: TeamMembershipList
    plural: teammemberships
    singular: teammembership
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamMembership is the Schema for the TeamMemberships API. Provides
          a GitHub team membership resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamMembershipSpec defines the desired state of TeamMembership
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.username is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.username)
                || (has(self.initProvider) && has(self.initProvider.username))'
          status:
            description: TeamMembershipStatus defines the observed state of TeamMembership.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamMembership
    listKind: TeamMembershipList
    plural: teammemberships
    singular: teammembership
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: teamrepositories.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1180"
  uid: bacfe751-10fc-4be5-a191-aca2fb4781db
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamRepository
    listKind: TeamRepositoryList
    plural: teamrepositories
    singular: teamrepository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamRepository is the Schema for the TeamRepositorys API. Manages
          the associations between teams and repositories.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamRepositorySpec defines the desired state of TeamRepository
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamRepositoryStatus defines the observed state of TeamRepository.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamRepository
    listKind: TeamRepositoryList
    plural: teamrepositories
    singular: teamrepository
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: teams.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1170"
  uid: 5ad98d94-bccd-403c-a33a-5a478aa9b842
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Team
    listKind: TeamList
    plural: teams
    singular: team
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Team is the Schema for the Teams API. Provides a GitHub team
          resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSpec defines the desired state of Team
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: TeamStatus defines the observed state of Team.
            properties:
              atProvider:
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  etag:
                    type: string
                  id:
                    description: The ID of the created team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  membersCount:
                    type: number
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  nodeId:
                    description: |-
                      The Node ID of the created team.
                      The Node ID of the created team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                  slug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The slug of the created team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: Team
    listKind: TeamList
    plural: teams
    singular: team
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: teamsettings.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1178"
  uid: ac40ab2b-77df-4d1e-8343-b007a94eb673
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSettings
    listKind: TeamSettingsList
    plural: teamsettings
    singular: teamsettings
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamSettings is the Schema for the TeamSettingss API. Manages
          the team settings (in particular the request review delegation settings)
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSettingsSpec defines the desired state of TeamSettings
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          type: number
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          type: number
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamSettingsStatus defines the observed state of TeamSettings.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          type: number
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamSlug:
                    description: The slug of the Team within the Organization.
                    type: string
                  teamUid:
                    description: The unique ID of the Team on GitHub. Corresponds
                      to the ID of the 'github_team_settings' resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSettings
    listKind: TeamSettingsList
    plural: teamsettings
    singular: teamsettings
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:33Z"
  generation: 1
  name: teamsyncgroupmappings.team.github.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-github-7653127c138c
    uid: e72462f2-a550-4eca-b34a-f7b4ddef2421
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-github
    uid: 1141a057-e1c2-42ca-829d-74a1656a4a5d
  resourceVersion: "1182"
  uid: d00046f5-9fa9-4937-9df6-698f879b449f
spec:
  conversion:
    strategy: None
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSyncGroupMapping
    listKind: TeamSyncGroupMappingList
    plural: teamsyncgroupmappings
    singular: teamsyncgroupmapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamSyncGroupMapping is the Schema for the TeamSyncGroupMappings
          API. Creates and manages the connections between a team and its IdP group(s).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSyncGroupMappingSpec defines the desired state of TeamSyncGroupMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.teamSlug is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.teamSlug)
                || (has(self.initProvider) && has(self.initProvider.teamSlug))'
          status:
            description: TeamSyncGroupMappingStatus defines the observed state of
              TeamSyncGroupMapping.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSyncGroupMapping
    listKind: TeamSyncGroupMappingList
    plural: teamsyncgroupmappings
    singular: teamsyncgroupmapping
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: "2024-08-14T07:10:10Z"
  generation: 1
  name: usages.apiextensions.crossplane.io
  resourceVersion: "577"
  uid: 2d7ff70d-d1f9-4982-a2cd-d590951ed6a7
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
    - crossplane
    kind: Usage
    listKind: UsageList
    plural: usages
    singular: usage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.annotations.crossplane\.io/usage-details
      name: DETAILS
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A Usage defines a deletion blocking relationship between two resources.


          Usages prevent accidental deletion of a single resource or deletion of
          resources with dependent resources.


          Read the Crossplane documentation for
          [more information about Compositions](https://docs.crossplane.io/latest/concepts/usages).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UsageSpec defines the desired state of Usage.
            properties:
              by:
                description: By is the resource that is "using the other resource".
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  resourceRef:
                    description: Reference to the resource.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  resourceSelector:
                    description: |-
                      Selector to the resource.
                      This field will be ignored if ResourceRef is set.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                type: object
                x-kubernetes-validations:
                - message: either a resource reference or a resource selector should
                    be set.
                  rule: has(self.resourceRef) || has(self.resourceSelector)
              of:
                description: Of is the resource that is "being used".
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  resourceRef:
                    description: Reference to the resource.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  resourceSelector:
                    description: |-
                      Selector to the resource.
                      This field will be ignored if ResourceRef is set.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                type: object
                x-kubernetes-validations:
                - message: either a resource reference or a resource selector should
                    be set.
                  rule: has(self.resourceRef) || has(self.resourceSelector)
              reason:
                description: Reason is the reason for blocking deletion of the resource.
                type: string
              replayDeletion:
                description: ReplayDeletion will trigger a deletion on the used resource
                  during the deletion of the usage itself, if it was attempted to
                  be deleted at least once.
                type: boolean
            required:
            - of
            type: object
            x-kubernetes-validations:
            - message: either "spec.by" or "spec.reason" must be specified.
              rule: has(self.by) || has(self.reason)
          status:
            description: UsageStatus defines the observed state of Usage.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    kind: Usage
    listKind: UsageList
    plural: usages
    singular: usage
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:10Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:10:26Z"
  generation: 1
  name: xconfigmaps.demo03.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xconfigmaps.demo03.suin.jp
    uid: 248225cb-f875-4e62-96e9-c65a76c6b0b6
  resourceVersion: "1009"
  uid: d96a5503-cb8c-4bfe-98a9-e1ddf7aa199f
spec:
  conversion:
    strategy: None
  group: demo03.suin.jp
  names:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.compositionRef.name
      name: COMPOSITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              claimRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - apiVersion
                - kind
                - namespace
                - name
                type: object
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                default: Automatic
                enum:
                - Automatic
                - Manual
                type: string
              data:
                additionalProperties:
                  type: string
                type: object
              environmentConfigRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - data
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  conditions:
  - lastTransitionTime: "2024-08-14T07:10:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:10:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:11:01Z"
  generation: 1
  name: xconfigmaps.demo06.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xconfigmaps.demo06.suin.jp
    uid: 6785f4a5-bddf-49b5-89d5-059cb41fe068
  resourceVersion: "1307"
  uid: 235096ad-9d83-49bd-8777-70ce636eaa15
spec:
  conversion:
    strategy: None
  group: demo06.suin.jp
  names:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.compositionRef.name
      name: COMPOSITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              claimRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - apiVersion
                - kind
                - namespace
                - name
                type: object
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                default: Automatic
                enum:
                - Automatic
                - Manual
                type: string
              data:
                additionalProperties:
                  type: string
                type: object
              environmentConfigRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - data
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:01Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:01Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:11:33Z"
  generation: 1
  name: xconfigmaps.demo08.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xconfigmaps.demo08.suin.jp
    uid: a7b2b0db-4723-4d7a-ab42-fd9b222b15aa
  resourceVersion: "1642"
  uid: 8d334169-75a7-44ff-9e0a-1471e3a565c0
spec:
  conversion:
    strategy: None
  group: demo08.suin.jp
  names:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.compositionRef.name
      name: COMPOSITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              claimRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - apiVersion
                - kind
                - namespace
                - name
                type: object
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                default: Automatic
                enum:
                - Automatic
                - Manual
                type: string
              environmentConfigRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:11:39Z"
  generation: 1
  name: xconfigmaps.demo09.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xconfigmaps.demo09.suin.jp
    uid: 3b51e77d-4578-4e3a-8b1f-3ed0520a147c
  resourceVersion: "1708"
  uid: 4fa1d690-303a-4b49-9cf1-3d224fe36d15
spec:
  conversion:
    strategy: None
  group: demo09.suin.jp
  names:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.compositionRef.name
      name: COMPOSITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              claimRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - apiVersion
                - kind
                - namespace
                - name
                type: object
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                default: Automatic
                enum:
                - Automatic
                - Manual
                type: string
              environmentConfigRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - composite
    kind: XConfigMap
    listKind: XConfigMapList
    plural: xconfigmaps
    singular: xconfigmap
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:39Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:39Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2024-08-14T07:11:13Z"
  generation: 1
  name: xtexts.demo07.suin.jp
  ownerReferences:
  - apiVersion: apiextensions.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: CompositeResourceDefinition
    name: xtexts.demo07.suin.jp
    uid: 690d043f-89a7-4c79-9380-eab0c63af7d5
  resourceVersion: "1433"
  uid: 2a982511-c441-4dee-a28d-89d60b702f96
spec:
  conversion:
    strategy: None
  group: demo07.suin.jp
  names:
    categories:
    - composite
    kind: XText
    listKind: XTextList
    plural: xtexts
    singular: xtext
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.compositionRef.name
      name: COMPOSITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                type: string
            type: object
          spec:
            properties:
              claimRef:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - apiVersion
                - kind
                - namespace
                - name
                type: object
              compositionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              compositionRevisionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionSelector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              compositionUpdatePolicy:
                default: Automatic
                enum:
                - Automatic
                - Manual
                type: string
              environmentConfigRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              publishConnectionDetailsTo:
                properties:
                  configRef:
                    default:
                      name: default
                    properties:
                      name:
                        type: string
                    type: object
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              resourceRefs:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              value:
                type: string
              writeConnectionSecretToRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - value
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionDetails:
                properties:
                  lastPublishedTime:
                    format: date-time
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - composite
    kind: XText
    listKind: XTextList
    plural: xtexts
    singular: xtext
  conditions:
  - lastTransitionTime: "2024-08-14T07:11:13Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-08-14T07:11:14Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
